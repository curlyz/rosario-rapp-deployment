{"version":3,"file":"static/chunks/618-5a5a0415ceb442a5.js","mappings":"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","sources":["webpack://_N_E/./node_modules/lucide-react/dist/esm/icons/arrow-left.js","webpack://_N_E/./node_modules/lucide-react/dist/esm/icons/arrow-right.js","webpack://_N_E/./node_modules/next/head.js","webpack://_N_E/./node_modules/embla-carousel-reactive-utils/esm/embla-carousel-reactive-utils.esm.js","webpack://_N_E/./node_modules/embla-carousel/esm/embla-carousel.esm.js","webpack://_N_E/./node_modules/embla-carousel-react/esm/embla-carousel-react.esm.js"],"sourcesContent":["/**\n * @license lucide-react v0.314.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ArrowLeft = createLucideIcon(\"ArrowLeft\", [\n  [\"path\", { d: \"m12 19-7-7 7-7\", key: \"1l729n\" }],\n  [\"path\", { d: \"M19 12H5\", key: \"x3x0zl\" }]\n]);\n\nexport { ArrowLeft as default };\n//# sourceMappingURL=arrow-left.js.map\n","/**\n * @license lucide-react v0.314.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ArrowRight = createLucideIcon(\"ArrowRight\", [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"m12 5 7 7-7 7\", key: \"xquz4c\" }]\n]);\n\nexport { ArrowRight as default };\n//# sourceMappingURL=arrow-right.js.map\n","module.exports = require('./dist/shared/lib/head')\n","function isObject(subject) {\n  return Object.prototype.toString.call(subject) === '[object Object]';\n}\nfunction isRecord(subject) {\n  return isObject(subject) || Array.isArray(subject);\n}\nfunction canUseDOM() {\n  return !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n}\nfunction areOptionsEqual(optionsA, optionsB) {\n  const optionsAKeys = Object.keys(optionsA);\n  const optionsBKeys = Object.keys(optionsB);\n  if (optionsAKeys.length !== optionsBKeys.length) return false;\n  const breakpointsA = JSON.stringify(Object.keys(optionsA.breakpoints || {}));\n  const breakpointsB = JSON.stringify(Object.keys(optionsB.breakpoints || {}));\n  if (breakpointsA !== breakpointsB) return false;\n  return optionsAKeys.every(key => {\n    const valueA = optionsA[key];\n    const valueB = optionsB[key];\n    if (typeof valueA === 'function') return `${valueA}` === `${valueB}`;\n    if (!isRecord(valueA) || !isRecord(valueB)) return valueA === valueB;\n    return areOptionsEqual(valueA, valueB);\n  });\n}\nfunction sortAndMapPluginToOptions(plugins) {\n  return plugins.concat().sort((a, b) => a.name > b.name ? 1 : -1).map(plugin => plugin.options);\n}\nfunction arePluginsEqual(pluginsA, pluginsB) {\n  if (pluginsA.length !== pluginsB.length) return false;\n  const optionsA = sortAndMapPluginToOptions(pluginsA);\n  const optionsB = sortAndMapPluginToOptions(pluginsB);\n  return optionsA.every((optionA, index) => {\n    const optionB = optionsB[index];\n    return areOptionsEqual(optionA, optionB);\n  });\n}\n\nexport { areOptionsEqual, arePluginsEqual, canUseDOM, sortAndMapPluginToOptions };\n//# sourceMappingURL=embla-carousel-reactive-utils.esm.js.map\n","function isNumber(subject) {\n  return typeof subject === 'number';\n}\nfunction isString(subject) {\n  return typeof subject === 'string';\n}\nfunction isBoolean(subject) {\n  return typeof subject === 'boolean';\n}\nfunction isObject(subject) {\n  return Object.prototype.toString.call(subject) === '[object Object]';\n}\nfunction mathAbs(n) {\n  return Math.abs(n);\n}\nfunction mathSign(n) {\n  return Math.sign(n);\n}\nfunction deltaAbs(valueB, valueA) {\n  return mathAbs(valueB - valueA);\n}\nfunction factorAbs(valueB, valueA) {\n  if (valueB === 0 || valueA === 0) return 0;\n  if (mathAbs(valueB) <= mathAbs(valueA)) return 0;\n  const diff = deltaAbs(mathAbs(valueB), mathAbs(valueA));\n  return mathAbs(diff / valueB);\n}\nfunction arrayKeys(array) {\n  return objectKeys(array).map(Number);\n}\nfunction arrayLast(array) {\n  return array[arrayLastIndex(array)];\n}\nfunction arrayLastIndex(array) {\n  return Math.max(0, array.length - 1);\n}\nfunction arrayIsLastIndex(array, index) {\n  return index === arrayLastIndex(array);\n}\nfunction arrayFromNumber(n, startAt = 0) {\n  return Array.from(Array(n), (_, i) => startAt + i);\n}\nfunction objectKeys(object) {\n  return Object.keys(object);\n}\nfunction objectsMergeDeep(objectA, objectB) {\n  return [objectA, objectB].reduce((mergedObjects, currentObject) => {\n    objectKeys(currentObject).forEach(key => {\n      const valueA = mergedObjects[key];\n      const valueB = currentObject[key];\n      const areObjects = isObject(valueA) && isObject(valueB);\n      mergedObjects[key] = areObjects ? objectsMergeDeep(valueA, valueB) : valueB;\n    });\n    return mergedObjects;\n  }, {});\n}\nfunction isMouseEvent(evt, ownerWindow) {\n  return typeof ownerWindow.MouseEvent !== 'undefined' && evt instanceof ownerWindow.MouseEvent;\n}\n\nfunction Alignment(align, viewSize) {\n  const predefined = {\n    start,\n    center,\n    end\n  };\n  function start() {\n    return 0;\n  }\n  function center(n) {\n    return end(n) / 2;\n  }\n  function end(n) {\n    return viewSize - n;\n  }\n  function measure(n, index) {\n    if (isString(align)) return predefined[align](n);\n    return align(viewSize, n, index);\n  }\n  const self = {\n    measure\n  };\n  return self;\n}\n\nfunction EventStore() {\n  let listeners = [];\n  function add(node, type, handler, options = {\n    passive: true\n  }) {\n    let removeListener;\n    if ('addEventListener' in node) {\n      node.addEventListener(type, handler, options);\n      removeListener = () => node.removeEventListener(type, handler, options);\n    } else {\n      const legacyMediaQueryList = node;\n      legacyMediaQueryList.addListener(handler);\n      removeListener = () => legacyMediaQueryList.removeListener(handler);\n    }\n    listeners.push(removeListener);\n    return self;\n  }\n  function clear() {\n    listeners = listeners.filter(remove => remove());\n  }\n  const self = {\n    add,\n    clear\n  };\n  return self;\n}\n\nfunction Animations(ownerDocument, ownerWindow, update, render) {\n  const documentVisibleHandler = EventStore();\n  const timeStep = 1000 / 60;\n  let lastTimeStamp = null;\n  let lag = 0;\n  let animationFrame = 0;\n  function init() {\n    documentVisibleHandler.add(ownerDocument, 'visibilitychange', () => {\n      if (ownerDocument.hidden) reset();\n    });\n  }\n  function destroy() {\n    stop();\n    documentVisibleHandler.clear();\n  }\n  function animate(timeStamp) {\n    if (!animationFrame) return;\n    if (!lastTimeStamp) lastTimeStamp = timeStamp;\n    const elapsed = timeStamp - lastTimeStamp;\n    lastTimeStamp = timeStamp;\n    lag += elapsed;\n    while (lag >= timeStep) {\n      update();\n      lag -= timeStep;\n    }\n    const lagOffset = mathAbs(lag / timeStep);\n    render(lagOffset);\n    if (animationFrame) ownerWindow.requestAnimationFrame(animate);\n  }\n  function start() {\n    if (animationFrame) return;\n    animationFrame = ownerWindow.requestAnimationFrame(animate);\n  }\n  function stop() {\n    ownerWindow.cancelAnimationFrame(animationFrame);\n    lastTimeStamp = null;\n    lag = 0;\n    animationFrame = 0;\n  }\n  function reset() {\n    lastTimeStamp = null;\n    lag = 0;\n  }\n  const self = {\n    init,\n    destroy,\n    start,\n    stop,\n    update,\n    render\n  };\n  return self;\n}\n\nfunction Axis(axis, direction) {\n  const scroll = axis === 'y' ? 'y' : 'x';\n  const cross = axis === 'y' ? 'x' : 'y';\n  const startEdge = getStartEdge();\n  const endEdge = getEndEdge();\n  function measureSize(nodeRect) {\n    const {\n      width,\n      height\n    } = nodeRect;\n    return scroll === 'x' ? width : height;\n  }\n  function getStartEdge() {\n    if (scroll === 'y') return 'top';\n    return direction === 'rtl' ? 'right' : 'left';\n  }\n  function getEndEdge() {\n    if (scroll === 'y') return 'bottom';\n    return direction === 'rtl' ? 'left' : 'right';\n  }\n  const self = {\n    scroll,\n    cross,\n    startEdge,\n    endEdge,\n    measureSize\n  };\n  return self;\n}\n\nfunction Limit(min = 0, max = 0) {\n  const length = mathAbs(min - max);\n  function reachedMin(n) {\n    return n < min;\n  }\n  function reachedMax(n) {\n    return n > max;\n  }\n  function reachedAny(n) {\n    return reachedMin(n) || reachedMax(n);\n  }\n  function constrain(n) {\n    if (!reachedAny(n)) return n;\n    return reachedMin(n) ? min : max;\n  }\n  function removeOffset(n) {\n    if (!length) return n;\n    return n - length * Math.ceil((n - max) / length);\n  }\n  const self = {\n    length,\n    max,\n    min,\n    constrain,\n    reachedAny,\n    reachedMax,\n    reachedMin,\n    removeOffset\n  };\n  return self;\n}\n\nfunction Counter(max, start, loop) {\n  const {\n    constrain\n  } = Limit(0, max);\n  const loopEnd = max + 1;\n  let counter = withinLimit(start);\n  function withinLimit(n) {\n    return !loop ? constrain(n) : mathAbs((loopEnd + n) % loopEnd);\n  }\n  function get() {\n    return counter;\n  }\n  function set(n) {\n    counter = withinLimit(n);\n    return self;\n  }\n  function add(n) {\n    return clone().set(get() + n);\n  }\n  function clone() {\n    return Counter(max, get(), loop);\n  }\n  const self = {\n    get,\n    set,\n    add,\n    clone\n  };\n  return self;\n}\n\nfunction Direction(direction) {\n  const sign = direction === 'rtl' ? -1 : 1;\n  function apply(n) {\n    return n * sign;\n  }\n  const self = {\n    apply\n  };\n  return self;\n}\n\nfunction DragHandler(axis, direction, rootNode, ownerDocument, ownerWindow, target, dragTracker, location, animation, scrollTo, scrollBody, scrollTarget, index, eventHandler, percentOfView, dragFree, dragThreshold, skipSnaps, baseFriction, watchDrag) {\n  const {\n    cross: crossAxis\n  } = axis;\n  const focusNodes = ['INPUT', 'SELECT', 'TEXTAREA'];\n  const nonPassiveEvent = {\n    passive: false\n  };\n  const initEvents = EventStore();\n  const dragEvents = EventStore();\n  const goToNextThreshold = Limit(50, 225).constrain(percentOfView.measure(20));\n  const snapForceBoost = {\n    mouse: 300,\n    touch: 400\n  };\n  const freeForceBoost = {\n    mouse: 500,\n    touch: 600\n  };\n  const baseSpeed = dragFree ? 43 : 25;\n  let isMoving = false;\n  let startScroll = 0;\n  let startCross = 0;\n  let pointerIsDown = false;\n  let preventScroll = false;\n  let preventClick = false;\n  let isMouse = false;\n  function init(emblaApi) {\n    if (!watchDrag) return;\n    function downIfAllowed(evt) {\n      if (isBoolean(watchDrag) || watchDrag(emblaApi, evt)) down(evt);\n    }\n    const node = rootNode;\n    initEvents.add(node, 'dragstart', evt => evt.preventDefault(), nonPassiveEvent).add(node, 'touchmove', () => undefined, nonPassiveEvent).add(node, 'touchend', () => undefined).add(node, 'touchstart', downIfAllowed).add(node, 'mousedown', downIfAllowed).add(node, 'touchcancel', up).add(node, 'contextmenu', up).add(node, 'click', click, true);\n  }\n  function destroy() {\n    initEvents.clear();\n    dragEvents.clear();\n  }\n  function addDragEvents() {\n    const node = isMouse ? ownerDocument : rootNode;\n    dragEvents.add(node, 'touchmove', move, nonPassiveEvent).add(node, 'touchend', up).add(node, 'mousemove', move, nonPassiveEvent).add(node, 'mouseup', up);\n  }\n  function isFocusNode(node) {\n    const nodeName = node.nodeName || '';\n    return focusNodes.includes(nodeName);\n  }\n  function forceBoost() {\n    const boost = dragFree ? freeForceBoost : snapForceBoost;\n    const type = isMouse ? 'mouse' : 'touch';\n    return boost[type];\n  }\n  function allowedForce(force, targetChanged) {\n    const next = index.add(mathSign(force) * -1);\n    const baseForce = scrollTarget.byDistance(force, !dragFree).distance;\n    if (dragFree || mathAbs(force) < goToNextThreshold) return baseForce;\n    if (skipSnaps && targetChanged) return baseForce * 0.5;\n    return scrollTarget.byIndex(next.get(), 0).distance;\n  }\n  function down(evt) {\n    const isMouseEvt = isMouseEvent(evt, ownerWindow);\n    isMouse = isMouseEvt;\n    if (isMouseEvt && evt.button !== 0) return;\n    if (isFocusNode(evt.target)) return;\n    preventClick = dragFree && isMouseEvt && !evt.buttons && isMoving;\n    isMoving = deltaAbs(target.get(), location.get()) >= 2;\n    pointerIsDown = true;\n    dragTracker.pointerDown(evt);\n    scrollBody.useFriction(0).useDuration(0);\n    target.set(location);\n    addDragEvents();\n    startScroll = dragTracker.readPoint(evt);\n    startCross = dragTracker.readPoint(evt, crossAxis);\n    eventHandler.emit('pointerDown');\n  }\n  function move(evt) {\n    const lastScroll = dragTracker.readPoint(evt);\n    const lastCross = dragTracker.readPoint(evt, crossAxis);\n    const diffScroll = deltaAbs(lastScroll, startScroll);\n    const diffCross = deltaAbs(lastCross, startCross);\n    if (!preventScroll && !isMouse) {\n      if (!evt.cancelable) return up(evt);\n      preventScroll = diffScroll > diffCross;\n      if (!preventScroll) return up(evt);\n    }\n    const diff = dragTracker.pointerMove(evt);\n    if (diffScroll > dragThreshold) preventClick = true;\n    scrollBody.useFriction(0.3).useDuration(1);\n    animation.start();\n    target.add(direction.apply(diff));\n    evt.preventDefault();\n  }\n  function up(evt) {\n    const currentLocation = scrollTarget.byDistance(0, false);\n    const targetChanged = currentLocation.index !== index.get();\n    const rawForce = dragTracker.pointerUp(evt) * forceBoost();\n    const force = allowedForce(direction.apply(rawForce), targetChanged);\n    const forceFactor = factorAbs(rawForce, force);\n    const speed = baseSpeed - 10 * forceFactor;\n    const friction = baseFriction + forceFactor / 50;\n    preventScroll = false;\n    pointerIsDown = false;\n    dragEvents.clear();\n    scrollBody.useDuration(speed).useFriction(friction);\n    scrollTo.distance(force, !dragFree);\n    isMouse = false;\n    eventHandler.emit('pointerUp');\n  }\n  function click(evt) {\n    if (preventClick) {\n      evt.stopPropagation();\n      evt.preventDefault();\n    }\n  }\n  function pointerDown() {\n    return pointerIsDown;\n  }\n  const self = {\n    init,\n    pointerDown,\n    destroy\n  };\n  return self;\n}\n\nfunction DragTracker(axis, ownerWindow) {\n  const logInterval = 170;\n  let startEvent;\n  let lastEvent;\n  function readTime(evt) {\n    return evt.timeStamp;\n  }\n  function readPoint(evt, evtAxis) {\n    const property = evtAxis || axis.scroll;\n    const coord = `client${property === 'x' ? 'X' : 'Y'}`;\n    return (isMouseEvent(evt, ownerWindow) ? evt : evt.touches[0])[coord];\n  }\n  function pointerDown(evt) {\n    startEvent = evt;\n    lastEvent = evt;\n    return readPoint(evt);\n  }\n  function pointerMove(evt) {\n    const diff = readPoint(evt) - readPoint(lastEvent);\n    const expired = readTime(evt) - readTime(startEvent) > logInterval;\n    lastEvent = evt;\n    if (expired) startEvent = evt;\n    return diff;\n  }\n  function pointerUp(evt) {\n    if (!startEvent || !lastEvent) return 0;\n    const diffDrag = readPoint(lastEvent) - readPoint(startEvent);\n    const diffTime = readTime(evt) - readTime(startEvent);\n    const expired = readTime(evt) - readTime(lastEvent) > logInterval;\n    const force = diffDrag / diffTime;\n    const isFlick = diffTime && !expired && mathAbs(force) > 0.1;\n    return isFlick ? force : 0;\n  }\n  const self = {\n    pointerDown,\n    pointerMove,\n    pointerUp,\n    readPoint\n  };\n  return self;\n}\n\nfunction NodeRects() {\n  function measure(node) {\n    const {\n      offsetTop,\n      offsetLeft,\n      offsetWidth,\n      offsetHeight\n    } = node;\n    const offset = {\n      top: offsetTop,\n      right: offsetLeft + offsetWidth,\n      bottom: offsetTop + offsetHeight,\n      left: offsetLeft,\n      width: offsetWidth,\n      height: offsetHeight\n    };\n    return offset;\n  }\n  const self = {\n    measure\n  };\n  return self;\n}\n\nfunction PercentOfView(viewSize) {\n  function measure(n) {\n    return viewSize * (n / 100);\n  }\n  const self = {\n    measure\n  };\n  return self;\n}\n\nfunction ResizeHandler(container, eventHandler, ownerWindow, slides, axis, watchResize, nodeRects) {\n  let resizeObserver;\n  let containerSize;\n  let slideSizes = [];\n  let destroyed = false;\n  function readSize(node) {\n    return axis.measureSize(nodeRects.measure(node));\n  }\n  function init(emblaApi) {\n    if (!watchResize) return;\n    containerSize = readSize(container);\n    slideSizes = slides.map(readSize);\n    function defaultCallback(entries) {\n      for (const entry of entries) {\n        const isContainer = entry.target === container;\n        const slideIndex = slides.indexOf(entry.target);\n        const lastSize = isContainer ? containerSize : slideSizes[slideIndex];\n        const newSize = readSize(isContainer ? container : slides[slideIndex]);\n        const diffSize = mathAbs(newSize - lastSize);\n        if (diffSize >= 0.5) {\n          ownerWindow.requestAnimationFrame(() => {\n            emblaApi.reInit();\n            eventHandler.emit('resize');\n          });\n          break;\n        }\n      }\n    }\n    resizeObserver = new ResizeObserver(entries => {\n      if (destroyed) return;\n      if (isBoolean(watchResize) || watchResize(emblaApi, entries)) {\n        defaultCallback(entries);\n      }\n    });\n    const observeNodes = [container].concat(slides);\n    observeNodes.forEach(node => resizeObserver.observe(node));\n  }\n  function destroy() {\n    if (resizeObserver) resizeObserver.disconnect();\n    destroyed = true;\n  }\n  const self = {\n    init,\n    destroy\n  };\n  return self;\n}\n\nfunction ScrollBody(location, offsetLocation, target, baseDuration, baseFriction) {\n  let bodyVelocity = 0;\n  let scrollDirection = 0;\n  let scrollDuration = baseDuration;\n  let scrollFriction = baseFriction;\n  let rawLocation = location.get();\n  let rawLocationPrevious = 0;\n  function seek() {\n    const diff = target.get() - location.get();\n    const isInstant = !scrollDuration;\n    let directionDiff = 0;\n    if (isInstant) {\n      bodyVelocity = 0;\n      location.set(target);\n      directionDiff = diff;\n    } else {\n      bodyVelocity += diff / scrollDuration;\n      bodyVelocity *= scrollFriction;\n      rawLocation += bodyVelocity;\n      location.add(bodyVelocity);\n      directionDiff = rawLocation - rawLocationPrevious;\n    }\n    scrollDirection = mathSign(directionDiff);\n    rawLocationPrevious = rawLocation;\n    return self;\n  }\n  function settled() {\n    const diff = target.get() - offsetLocation.get();\n    return mathAbs(diff) < 0.001;\n  }\n  function duration() {\n    return scrollDuration;\n  }\n  function direction() {\n    return scrollDirection;\n  }\n  function velocity() {\n    return bodyVelocity;\n  }\n  function useBaseDuration() {\n    return useDuration(baseDuration);\n  }\n  function useBaseFriction() {\n    return useFriction(baseFriction);\n  }\n  function useDuration(n) {\n    scrollDuration = n;\n    return self;\n  }\n  function useFriction(n) {\n    scrollFriction = n;\n    return self;\n  }\n  const self = {\n    direction,\n    duration,\n    velocity,\n    seek,\n    settled,\n    useBaseFriction,\n    useBaseDuration,\n    useFriction,\n    useDuration\n  };\n  return self;\n}\n\nfunction ScrollBounds(limit, offsetLocation, target, scrollBody, percentOfView) {\n  const pullBackThreshold = percentOfView.measure(10);\n  const edgeOffsetTolerance = percentOfView.measure(50);\n  const frictionLimit = Limit(0.1, 0.99);\n  let disabled = false;\n  function shouldConstrain() {\n    if (disabled) return false;\n    if (!limit.reachedAny(target.get())) return false;\n    if (!limit.reachedAny(offsetLocation.get())) return false;\n    return true;\n  }\n  function constrain(pointerDown) {\n    if (!shouldConstrain()) return;\n    const edge = limit.reachedMin(offsetLocation.get()) ? 'min' : 'max';\n    const diffToEdge = mathAbs(limit[edge] - offsetLocation.get());\n    const diffToTarget = target.get() - offsetLocation.get();\n    const friction = frictionLimit.constrain(diffToEdge / edgeOffsetTolerance);\n    target.subtract(diffToTarget * friction);\n    if (!pointerDown && mathAbs(diffToTarget) < pullBackThreshold) {\n      target.set(limit.constrain(target.get()));\n      scrollBody.useDuration(25).useBaseFriction();\n    }\n  }\n  function toggleActive(active) {\n    disabled = !active;\n  }\n  const self = {\n    constrain,\n    toggleActive\n  };\n  return self;\n}\n\nfunction ScrollContain(viewSize, contentSize, snapsAligned, containScroll, pixelTolerance) {\n  const scrollBounds = Limit(-contentSize + viewSize, 0);\n  const snapsBounded = measureBounded();\n  const scrollContainLimit = findScrollContainLimit();\n  const snapsContained = measureContained();\n  function usePixelTolerance(bound, snap) {\n    return deltaAbs(bound, snap) < 1;\n  }\n  function findScrollContainLimit() {\n    const startSnap = snapsBounded[0];\n    const endSnap = arrayLast(snapsBounded);\n    const min = snapsBounded.lastIndexOf(startSnap);\n    const max = snapsBounded.indexOf(endSnap) + 1;\n    return Limit(min, max);\n  }\n  function measureBounded() {\n    return snapsAligned.map((snapAligned, index) => {\n      const {\n        min,\n        max\n      } = scrollBounds;\n      const snap = scrollBounds.constrain(snapAligned);\n      const isFirst = !index;\n      const isLast = arrayIsLastIndex(snapsAligned, index);\n      if (isFirst) return max;\n      if (isLast) return min;\n      if (usePixelTolerance(min, snap)) return min;\n      if (usePixelTolerance(max, snap)) return max;\n      return snap;\n    }).map(scrollBound => parseFloat(scrollBound.toFixed(3)));\n  }\n  function measureContained() {\n    if (contentSize <= viewSize + pixelTolerance) return [scrollBounds.max];\n    if (containScroll === 'keepSnaps') return snapsBounded;\n    const {\n      min,\n      max\n    } = scrollContainLimit;\n    return snapsBounded.slice(min, max);\n  }\n  const self = {\n    snapsContained,\n    scrollContainLimit\n  };\n  return self;\n}\n\nfunction ScrollLimit(contentSize, scrollSnaps, loop) {\n  const max = scrollSnaps[0];\n  const min = loop ? max - contentSize : arrayLast(scrollSnaps);\n  const limit = Limit(min, max);\n  const self = {\n    limit\n  };\n  return self;\n}\n\nfunction ScrollLooper(contentSize, limit, offsetLocation, vectors) {\n  const jointSafety = 0.1;\n  const min = limit.min + jointSafety;\n  const max = limit.max + jointSafety;\n  const {\n    reachedMin,\n    reachedMax\n  } = Limit(min, max);\n  function shouldLoop(direction) {\n    if (direction === 1) return reachedMax(offsetLocation.get());\n    if (direction === -1) return reachedMin(offsetLocation.get());\n    return false;\n  }\n  function loop(direction) {\n    if (!shouldLoop(direction)) return;\n    const loopDistance = contentSize * (direction * -1);\n    vectors.forEach(v => v.add(loopDistance));\n  }\n  const self = {\n    loop\n  };\n  return self;\n}\n\nfunction ScrollProgress(limit) {\n  const {\n    max,\n    length\n  } = limit;\n  function get(n) {\n    const currentLocation = n - max;\n    return length ? currentLocation / -length : 0;\n  }\n  const self = {\n    get\n  };\n  return self;\n}\n\nfunction ScrollSnaps(axis, alignment, containerRect, slideRects, slidesToScroll) {\n  const {\n    startEdge,\n    endEdge\n  } = axis;\n  const {\n    groupSlides\n  } = slidesToScroll;\n  const alignments = measureSizes().map(alignment.measure);\n  const snaps = measureUnaligned();\n  const snapsAligned = measureAligned();\n  function measureSizes() {\n    return groupSlides(slideRects).map(rects => arrayLast(rects)[endEdge] - rects[0][startEdge]).map(mathAbs);\n  }\n  function measureUnaligned() {\n    return slideRects.map(rect => containerRect[startEdge] - rect[startEdge]).map(snap => -mathAbs(snap));\n  }\n  function measureAligned() {\n    return groupSlides(snaps).map(g => g[0]).map((snap, index) => snap + alignments[index]);\n  }\n  const self = {\n    snaps,\n    snapsAligned\n  };\n  return self;\n}\n\nfunction SlideRegistry(containSnaps, containScroll, scrollSnaps, scrollContainLimit, slidesToScroll, slideIndexes) {\n  const {\n    groupSlides\n  } = slidesToScroll;\n  const {\n    min,\n    max\n  } = scrollContainLimit;\n  const slideRegistry = createSlideRegistry();\n  function createSlideRegistry() {\n    const groupedSlideIndexes = groupSlides(slideIndexes);\n    const doNotContain = !containSnaps || containScroll === 'keepSnaps';\n    if (scrollSnaps.length === 1) return [slideIndexes];\n    if (doNotContain) return groupedSlideIndexes;\n    return groupedSlideIndexes.slice(min, max).map((group, index, groups) => {\n      const isFirst = !index;\n      const isLast = arrayIsLastIndex(groups, index);\n      if (isFirst) {\n        const range = arrayLast(groups[0]) + 1;\n        return arrayFromNumber(range);\n      }\n      if (isLast) {\n        const range = arrayLastIndex(slideIndexes) - arrayLast(groups)[0] + 1;\n        return arrayFromNumber(range, arrayLast(groups)[0]);\n      }\n      return group;\n    });\n  }\n  const self = {\n    slideRegistry\n  };\n  return self;\n}\n\nfunction ScrollTarget(loop, scrollSnaps, contentSize, limit, targetVector) {\n  const {\n    reachedAny,\n    removeOffset,\n    constrain\n  } = limit;\n  function minDistance(distances) {\n    return distances.concat().sort((a, b) => mathAbs(a) - mathAbs(b))[0];\n  }\n  function findTargetSnap(target) {\n    const distance = loop ? removeOffset(target) : constrain(target);\n    const ascDiffsToSnaps = scrollSnaps.map(scrollSnap => scrollSnap - distance).map(diffToSnap => shortcut(diffToSnap, 0)).map((diff, i) => ({\n      diff,\n      index: i\n    })).sort((d1, d2) => mathAbs(d1.diff) - mathAbs(d2.diff));\n    const {\n      index\n    } = ascDiffsToSnaps[0];\n    return {\n      index,\n      distance\n    };\n  }\n  function shortcut(target, direction) {\n    const targets = [target, target + contentSize, target - contentSize];\n    if (!loop) return targets[0];\n    if (!direction) return minDistance(targets);\n    const matchingTargets = targets.filter(t => mathSign(t) === direction);\n    if (matchingTargets.length) return minDistance(matchingTargets);\n    return arrayLast(targets) - contentSize;\n  }\n  function byIndex(index, direction) {\n    const diffToSnap = scrollSnaps[index] - targetVector.get();\n    const distance = shortcut(diffToSnap, direction);\n    return {\n      index,\n      distance\n    };\n  }\n  function byDistance(distance, snap) {\n    const target = targetVector.get() + distance;\n    const {\n      index,\n      distance: targetSnapDistance\n    } = findTargetSnap(target);\n    const reachedBound = !loop && reachedAny(target);\n    if (!snap || reachedBound) return {\n      index,\n      distance\n    };\n    const diffToSnap = scrollSnaps[index] - targetSnapDistance;\n    const snapDistance = distance + shortcut(diffToSnap, 0);\n    return {\n      index,\n      distance: snapDistance\n    };\n  }\n  const self = {\n    byDistance,\n    byIndex,\n    shortcut\n  };\n  return self;\n}\n\nfunction ScrollTo(animation, indexCurrent, indexPrevious, scrollBody, scrollTarget, targetVector, eventHandler) {\n  function scrollTo(target) {\n    const distanceDiff = target.distance;\n    const indexDiff = target.index !== indexCurrent.get();\n    targetVector.add(distanceDiff);\n    if (distanceDiff) {\n      if (scrollBody.duration()) {\n        animation.start();\n      } else {\n        animation.update();\n        animation.render(1);\n        animation.update();\n      }\n    }\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get());\n      indexCurrent.set(target.index);\n      eventHandler.emit('select');\n    }\n  }\n  function distance(n, snap) {\n    const target = scrollTarget.byDistance(n, snap);\n    scrollTo(target);\n  }\n  function index(n, direction) {\n    const targetIndex = indexCurrent.clone().set(n);\n    const target = scrollTarget.byIndex(targetIndex.get(), direction);\n    scrollTo(target);\n  }\n  const self = {\n    distance,\n    index\n  };\n  return self;\n}\n\nfunction SlideFocus(root, slides, slideRegistry, scrollTo, scrollBody, eventStore) {\n  let lastTabPressTime = 0;\n  function init() {\n    eventStore.add(document, 'keydown', registerTabPress, false);\n    slides.forEach(addSlideFocusEvent);\n  }\n  function registerTabPress(event) {\n    if (event.code === 'Tab') lastTabPressTime = new Date().getTime();\n  }\n  function addSlideFocusEvent(slide) {\n    const focus = () => {\n      const nowTime = new Date().getTime();\n      const diffTime = nowTime - lastTabPressTime;\n      if (diffTime > 10) return;\n      root.scrollLeft = 0;\n      const index = slides.indexOf(slide);\n      const group = slideRegistry.findIndex(group => group.includes(index));\n      if (!isNumber(group)) return;\n      scrollBody.useDuration(0);\n      scrollTo.index(group, 0);\n    };\n    eventStore.add(slide, 'focus', focus, {\n      passive: true,\n      capture: true\n    });\n  }\n  const self = {\n    init\n  };\n  return self;\n}\n\nfunction Vector1D(initialValue) {\n  let value = initialValue;\n  function get() {\n    return value;\n  }\n  function set(n) {\n    value = normalizeInput(n);\n  }\n  function add(n) {\n    value += normalizeInput(n);\n  }\n  function subtract(n) {\n    value -= normalizeInput(n);\n  }\n  function normalizeInput(n) {\n    return isNumber(n) ? n : n.get();\n  }\n  const self = {\n    get,\n    set,\n    add,\n    subtract\n  };\n  return self;\n}\n\nfunction Translate(axis, direction, container) {\n  const translate = axis.scroll === 'x' ? x : y;\n  const containerStyle = container.style;\n  let disabled = false;\n  function x(n) {\n    return `translate3d(${n}px,0px,0px)`;\n  }\n  function y(n) {\n    return `translate3d(0px,${n}px,0px)`;\n  }\n  function to(target) {\n    if (disabled) return;\n    containerStyle.transform = translate(direction.apply(target));\n  }\n  function toggleActive(active) {\n    disabled = !active;\n  }\n  function clear() {\n    if (disabled) return;\n    containerStyle.transform = '';\n    if (!container.getAttribute('style')) container.removeAttribute('style');\n  }\n  const self = {\n    clear,\n    to,\n    toggleActive\n  };\n  return self;\n}\n\nfunction SlideLooper(axis, direction, viewSize, contentSize, slideSizes, slideSizesWithGaps, snaps, scrollSnaps, offsetLocation, slides) {\n  const roundingSafety = 0.5;\n  const ascItems = arrayKeys(slideSizesWithGaps);\n  const descItems = arrayKeys(slideSizesWithGaps).reverse();\n  const loopPoints = startPoints().concat(endPoints());\n  function removeSlideSizes(indexes, from) {\n    return indexes.reduce((a, i) => {\n      return a - slideSizesWithGaps[i];\n    }, from);\n  }\n  function slidesInGap(indexes, gap) {\n    return indexes.reduce((a, i) => {\n      const remainingGap = removeSlideSizes(a, gap);\n      return remainingGap > 0 ? a.concat([i]) : a;\n    }, []);\n  }\n  function findSlideBounds(offset) {\n    return snaps.map((snap, index) => ({\n      start: snap - slideSizes[index] + roundingSafety + offset,\n      end: snap + viewSize - roundingSafety + offset\n    }));\n  }\n  function findLoopPoints(indexes, offset, isEndEdge) {\n    const slideBounds = findSlideBounds(offset);\n    return indexes.map(index => {\n      const initial = isEndEdge ? 0 : -contentSize;\n      const altered = isEndEdge ? contentSize : 0;\n      const boundEdge = isEndEdge ? 'end' : 'start';\n      const loopPoint = slideBounds[index][boundEdge];\n      return {\n        index,\n        loopPoint,\n        slideLocation: Vector1D(-1),\n        translate: Translate(axis, direction, slides[index]),\n        target: () => offsetLocation.get() > loopPoint ? initial : altered\n      };\n    });\n  }\n  function startPoints() {\n    const gap = scrollSnaps[0];\n    const indexes = slidesInGap(descItems, gap);\n    return findLoopPoints(indexes, contentSize, false);\n  }\n  function endPoints() {\n    const gap = viewSize - scrollSnaps[0] - 1;\n    const indexes = slidesInGap(ascItems, gap);\n    return findLoopPoints(indexes, -contentSize, true);\n  }\n  function canLoop() {\n    return loopPoints.every(({\n      index\n    }) => {\n      const otherIndexes = ascItems.filter(i => i !== index);\n      return removeSlideSizes(otherIndexes, viewSize) <= 0.1;\n    });\n  }\n  function loop() {\n    loopPoints.forEach(loopPoint => {\n      const {\n        target,\n        translate,\n        slideLocation\n      } = loopPoint;\n      const shiftLocation = target();\n      if (shiftLocation === slideLocation.get()) return;\n      translate.to(shiftLocation);\n      slideLocation.set(shiftLocation);\n    });\n  }\n  function clear() {\n    loopPoints.forEach(loopPoint => loopPoint.translate.clear());\n  }\n  const self = {\n    canLoop,\n    clear,\n    loop,\n    loopPoints\n  };\n  return self;\n}\n\nfunction SlidesHandler(container, eventHandler, watchSlides) {\n  let mutationObserver;\n  let destroyed = false;\n  function init(emblaApi) {\n    if (!watchSlides) return;\n    function defaultCallback(mutations) {\n      for (const mutation of mutations) {\n        if (mutation.type === 'childList') {\n          emblaApi.reInit();\n          eventHandler.emit('slidesChanged');\n          break;\n        }\n      }\n    }\n    mutationObserver = new MutationObserver(mutations => {\n      if (destroyed) return;\n      if (isBoolean(watchSlides) || watchSlides(emblaApi, mutations)) {\n        defaultCallback(mutations);\n      }\n    });\n    mutationObserver.observe(container, {\n      childList: true\n    });\n  }\n  function destroy() {\n    if (mutationObserver) mutationObserver.disconnect();\n    destroyed = true;\n  }\n  const self = {\n    init,\n    destroy\n  };\n  return self;\n}\n\nfunction SlidesInView(container, slides, eventHandler, threshold) {\n  const intersectionEntryMap = {};\n  let inViewCache = null;\n  let notInViewCache = null;\n  let intersectionObserver;\n  let destroyed = false;\n  function init() {\n    intersectionObserver = new IntersectionObserver(entries => {\n      if (destroyed) return;\n      entries.forEach(entry => {\n        const index = slides.indexOf(entry.target);\n        intersectionEntryMap[index] = entry;\n      });\n      inViewCache = null;\n      notInViewCache = null;\n      eventHandler.emit('slidesInView');\n    }, {\n      root: container.parentElement,\n      threshold\n    });\n    slides.forEach(slide => intersectionObserver.observe(slide));\n  }\n  function destroy() {\n    if (intersectionObserver) intersectionObserver.disconnect();\n    destroyed = true;\n  }\n  function createInViewList(inView) {\n    return objectKeys(intersectionEntryMap).reduce((list, slideIndex) => {\n      const index = parseInt(slideIndex);\n      const {\n        isIntersecting\n      } = intersectionEntryMap[index];\n      const inViewMatch = inView && isIntersecting;\n      const notInViewMatch = !inView && !isIntersecting;\n      if (inViewMatch || notInViewMatch) list.push(index);\n      return list;\n    }, []);\n  }\n  function get(inView = true) {\n    if (inView && inViewCache) return inViewCache;\n    if (!inView && notInViewCache) return notInViewCache;\n    const slideIndexes = createInViewList(inView);\n    if (inView) inViewCache = slideIndexes;\n    if (!inView) notInViewCache = slideIndexes;\n    return slideIndexes;\n  }\n  const self = {\n    init,\n    destroy,\n    get\n  };\n  return self;\n}\n\nfunction SlideSizes(axis, containerRect, slideRects, slides, readEdgeGap, ownerWindow) {\n  const {\n    measureSize,\n    startEdge,\n    endEdge\n  } = axis;\n  const withEdgeGap = slideRects[0] && readEdgeGap;\n  const startGap = measureStartGap();\n  const endGap = measureEndGap();\n  const slideSizes = slideRects.map(measureSize);\n  const slideSizesWithGaps = measureWithGaps();\n  function measureStartGap() {\n    if (!withEdgeGap) return 0;\n    const slideRect = slideRects[0];\n    return mathAbs(containerRect[startEdge] - slideRect[startEdge]);\n  }\n  function measureEndGap() {\n    if (!withEdgeGap) return 0;\n    const style = ownerWindow.getComputedStyle(arrayLast(slides));\n    return parseFloat(style.getPropertyValue(`margin-${endEdge}`));\n  }\n  function measureWithGaps() {\n    return slideRects.map((rect, index, rects) => {\n      const isFirst = !index;\n      const isLast = arrayIsLastIndex(rects, index);\n      if (isFirst) return slideSizes[index] + startGap;\n      if (isLast) return slideSizes[index] + endGap;\n      return rects[index + 1][startEdge] - rect[startEdge];\n    }).map(mathAbs);\n  }\n  const self = {\n    slideSizes,\n    slideSizesWithGaps,\n    startGap,\n    endGap\n  };\n  return self;\n}\n\nfunction SlidesToScroll(axis, direction, viewSize, slidesToScroll, loop, containerRect, slideRects, startGap, endGap, pixelTolerance) {\n  const {\n    startEdge,\n    endEdge\n  } = axis;\n  const groupByNumber = isNumber(slidesToScroll);\n  function byNumber(array, groupSize) {\n    return arrayKeys(array).filter(i => i % groupSize === 0).map(i => array.slice(i, i + groupSize));\n  }\n  function bySize(array) {\n    if (!array.length) return [];\n    return arrayKeys(array).reduce((groups, rectB) => {\n      const rectA = arrayLast(groups) || 0;\n      const isFirst = rectA === 0;\n      const isLast = rectB === arrayLastIndex(array);\n      const edgeA = containerRect[startEdge] - slideRects[rectA][startEdge];\n      const edgeB = containerRect[startEdge] - slideRects[rectB][endEdge];\n      const gapA = !loop && isFirst ? direction.apply(startGap) : 0;\n      const gapB = !loop && isLast ? direction.apply(endGap) : 0;\n      const chunkSize = mathAbs(edgeB - gapB - (edgeA + gapA));\n      if (chunkSize > viewSize + pixelTolerance) groups.push(rectB);\n      if (isLast) groups.push(array.length);\n      return groups;\n    }, []).map((currentSize, index, groups) => {\n      const previousSize = Math.max(groups[index - 1] || 0);\n      return array.slice(previousSize, currentSize);\n    });\n  }\n  function groupSlides(array) {\n    return groupByNumber ? byNumber(array, slidesToScroll) : bySize(array);\n  }\n  const self = {\n    groupSlides\n  };\n  return self;\n}\n\nfunction Engine(root, container, slides, ownerDocument, ownerWindow, options, eventHandler) {\n  // Options\n  const {\n    align,\n    axis: scrollAxis,\n    direction: contentDirection,\n    startIndex,\n    loop,\n    duration,\n    dragFree,\n    dragThreshold,\n    inViewThreshold,\n    slidesToScroll: groupSlides,\n    skipSnaps,\n    containScroll,\n    watchResize,\n    watchSlides,\n    watchDrag\n  } = options;\n  // Measurements\n  const pixelTolerance = 2;\n  const nodeRects = NodeRects();\n  const containerRect = nodeRects.measure(container);\n  const slideRects = slides.map(nodeRects.measure);\n  const direction = Direction(contentDirection);\n  const axis = Axis(scrollAxis, contentDirection);\n  const viewSize = axis.measureSize(containerRect);\n  const percentOfView = PercentOfView(viewSize);\n  const alignment = Alignment(align, viewSize);\n  const containSnaps = !loop && !!containScroll;\n  const readEdgeGap = loop || !!containScroll;\n  const {\n    slideSizes,\n    slideSizesWithGaps,\n    startGap,\n    endGap\n  } = SlideSizes(axis, containerRect, slideRects, slides, readEdgeGap, ownerWindow);\n  const slidesToScroll = SlidesToScroll(axis, direction, viewSize, groupSlides, loop, containerRect, slideRects, startGap, endGap, pixelTolerance);\n  const {\n    snaps,\n    snapsAligned\n  } = ScrollSnaps(axis, alignment, containerRect, slideRects, slidesToScroll);\n  const contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps);\n  const {\n    snapsContained,\n    scrollContainLimit\n  } = ScrollContain(viewSize, contentSize, snapsAligned, containScroll, pixelTolerance);\n  const scrollSnaps = containSnaps ? snapsContained : snapsAligned;\n  const {\n    limit\n  } = ScrollLimit(contentSize, scrollSnaps, loop);\n  // Indexes\n  const index = Counter(arrayLastIndex(scrollSnaps), startIndex, loop);\n  const indexPrevious = index.clone();\n  const slideIndexes = arrayKeys(slides);\n  // Animation\n  const update = ({\n    dragHandler,\n    scrollBody,\n    scrollBounds,\n    options: {\n      loop\n    }\n  }) => {\n    if (!loop) scrollBounds.constrain(dragHandler.pointerDown());\n    scrollBody.seek();\n  };\n  const render = ({\n    scrollBody,\n    translate,\n    location,\n    offsetLocation,\n    scrollLooper,\n    slideLooper,\n    dragHandler,\n    animation,\n    eventHandler,\n    options: {\n      loop\n    }\n  }, lagOffset) => {\n    const velocity = scrollBody.velocity();\n    const hasSettled = scrollBody.settled();\n    if (hasSettled && !dragHandler.pointerDown()) {\n      animation.stop();\n      eventHandler.emit('settle');\n    }\n    if (!hasSettled) eventHandler.emit('scroll');\n    offsetLocation.set(location.get() - velocity + velocity * lagOffset);\n    if (loop) {\n      scrollLooper.loop(scrollBody.direction());\n      slideLooper.loop();\n    }\n    translate.to(offsetLocation.get());\n  };\n  const animation = Animations(ownerDocument, ownerWindow, () => update(engine), lagOffset => render(engine, lagOffset));\n  // Shared\n  const friction = 0.68;\n  const startLocation = scrollSnaps[index.get()];\n  const location = Vector1D(startLocation);\n  const offsetLocation = Vector1D(startLocation);\n  const target = Vector1D(startLocation);\n  const scrollBody = ScrollBody(location, offsetLocation, target, duration, friction);\n  const scrollTarget = ScrollTarget(loop, scrollSnaps, contentSize, limit, target);\n  const scrollTo = ScrollTo(animation, index, indexPrevious, scrollBody, scrollTarget, target, eventHandler);\n  const scrollProgress = ScrollProgress(limit);\n  const eventStore = EventStore();\n  const slidesInView = SlidesInView(container, slides, eventHandler, inViewThreshold);\n  const {\n    slideRegistry\n  } = SlideRegistry(containSnaps, containScroll, scrollSnaps, scrollContainLimit, slidesToScroll, slideIndexes);\n  const slideFocus = SlideFocus(root, slides, slideRegistry, scrollTo, scrollBody, eventStore);\n  // Engine\n  const engine = {\n    ownerDocument,\n    ownerWindow,\n    eventHandler,\n    containerRect,\n    slideRects,\n    animation,\n    axis,\n    direction,\n    dragHandler: DragHandler(axis, direction, root, ownerDocument, ownerWindow, target, DragTracker(axis, ownerWindow), location, animation, scrollTo, scrollBody, scrollTarget, index, eventHandler, percentOfView, dragFree, dragThreshold, skipSnaps, friction, watchDrag),\n    eventStore,\n    percentOfView,\n    index,\n    indexPrevious,\n    limit,\n    location,\n    offsetLocation,\n    options,\n    resizeHandler: ResizeHandler(container, eventHandler, ownerWindow, slides, axis, watchResize, nodeRects),\n    scrollBody,\n    scrollBounds: ScrollBounds(limit, offsetLocation, target, scrollBody, percentOfView),\n    scrollLooper: ScrollLooper(contentSize, limit, offsetLocation, [location, offsetLocation, target]),\n    scrollProgress,\n    scrollSnapList: scrollSnaps.map(scrollProgress.get),\n    scrollSnaps,\n    scrollTarget,\n    scrollTo,\n    slideLooper: SlideLooper(axis, direction, viewSize, contentSize, slideSizes, slideSizesWithGaps, snaps, scrollSnaps, offsetLocation, slides),\n    slideFocus,\n    slidesHandler: SlidesHandler(container, eventHandler, watchSlides),\n    slidesInView,\n    slideIndexes,\n    slideRegistry,\n    slidesToScroll,\n    target,\n    translate: Translate(axis, direction, container)\n  };\n  return engine;\n}\n\nfunction EventHandler() {\n  const listeners = {};\n  let api;\n  function init(emblaApi) {\n    api = emblaApi;\n  }\n  function getListeners(evt) {\n    return listeners[evt] || [];\n  }\n  function emit(evt) {\n    getListeners(evt).forEach(e => e(api, evt));\n    return self;\n  }\n  function on(evt, cb) {\n    listeners[evt] = getListeners(evt).concat([cb]);\n    return self;\n  }\n  function off(evt, cb) {\n    listeners[evt] = getListeners(evt).filter(e => e !== cb);\n    return self;\n  }\n  const self = {\n    init,\n    emit,\n    off,\n    on\n  };\n  return self;\n}\n\nconst defaultOptions = {\n  align: 'center',\n  axis: 'x',\n  container: null,\n  slides: null,\n  containScroll: 'trimSnaps',\n  direction: 'ltr',\n  slidesToScroll: 1,\n  inViewThreshold: 0,\n  breakpoints: {},\n  dragFree: false,\n  dragThreshold: 10,\n  loop: false,\n  skipSnaps: false,\n  duration: 25,\n  startIndex: 0,\n  active: true,\n  watchDrag: true,\n  watchResize: true,\n  watchSlides: true\n};\n\nfunction OptionsHandler(ownerWindow) {\n  function mergeOptions(optionsA, optionsB) {\n    return objectsMergeDeep(optionsA, optionsB || {});\n  }\n  function optionsAtMedia(options) {\n    const optionsAtMedia = options.breakpoints || {};\n    const matchedMediaOptions = objectKeys(optionsAtMedia).filter(media => ownerWindow.matchMedia(media).matches).map(media => optionsAtMedia[media]).reduce((a, mediaOption) => mergeOptions(a, mediaOption), {});\n    return mergeOptions(options, matchedMediaOptions);\n  }\n  function optionsMediaQueries(optionsList) {\n    return optionsList.map(options => objectKeys(options.breakpoints || {})).reduce((acc, mediaQueries) => acc.concat(mediaQueries), []).map(ownerWindow.matchMedia);\n  }\n  const self = {\n    mergeOptions,\n    optionsAtMedia,\n    optionsMediaQueries\n  };\n  return self;\n}\n\nfunction PluginsHandler(optionsHandler) {\n  let activePlugins = [];\n  function init(emblaApi, plugins) {\n    activePlugins = plugins.filter(({\n      options\n    }) => optionsHandler.optionsAtMedia(options).active !== false);\n    activePlugins.forEach(plugin => plugin.init(emblaApi, optionsHandler));\n    return plugins.reduce((map, plugin) => Object.assign(map, {\n      [plugin.name]: plugin\n    }), {});\n  }\n  function destroy() {\n    activePlugins = activePlugins.filter(plugin => plugin.destroy());\n  }\n  const self = {\n    init,\n    destroy\n  };\n  return self;\n}\n\nfunction EmblaCarousel(root, userOptions, userPlugins) {\n  const ownerDocument = root.ownerDocument;\n  const ownerWindow = ownerDocument.defaultView;\n  const optionsHandler = OptionsHandler(ownerWindow);\n  const pluginsHandler = PluginsHandler(optionsHandler);\n  const mediaHandlers = EventStore();\n  const eventHandler = EventHandler();\n  const {\n    mergeOptions,\n    optionsAtMedia,\n    optionsMediaQueries\n  } = optionsHandler;\n  const {\n    on,\n    off,\n    emit\n  } = eventHandler;\n  const reInit = reActivate;\n  let destroyed = false;\n  let engine;\n  let optionsBase = mergeOptions(defaultOptions, EmblaCarousel.globalOptions);\n  let options = mergeOptions(optionsBase);\n  let pluginList = [];\n  let pluginApis;\n  let container;\n  let slides;\n  function storeElements() {\n    const {\n      container: userContainer,\n      slides: userSlides\n    } = options;\n    const customContainer = isString(userContainer) ? root.querySelector(userContainer) : userContainer;\n    container = customContainer || root.children[0];\n    const customSlides = isString(userSlides) ? container.querySelectorAll(userSlides) : userSlides;\n    slides = [].slice.call(customSlides || container.children);\n  }\n  function createEngine(options) {\n    const engine = Engine(root, container, slides, ownerDocument, ownerWindow, options, eventHandler);\n    if (options.loop && !engine.slideLooper.canLoop()) {\n      const optionsWithoutLoop = Object.assign({}, options, {\n        loop: false\n      });\n      return createEngine(optionsWithoutLoop);\n    }\n    return engine;\n  }\n  function activate(withOptions, withPlugins) {\n    if (destroyed) return;\n    optionsBase = mergeOptions(optionsBase, withOptions);\n    options = optionsAtMedia(optionsBase);\n    pluginList = withPlugins || pluginList;\n    storeElements();\n    engine = createEngine(options);\n    optionsMediaQueries([optionsBase, ...pluginList.map(({\n      options\n    }) => options)]).forEach(query => mediaHandlers.add(query, 'change', reActivate));\n    if (!options.active) return;\n    engine.translate.to(engine.location.get());\n    engine.animation.init();\n    engine.slidesInView.init();\n    engine.slideFocus.init();\n    engine.eventHandler.init(self);\n    engine.resizeHandler.init(self);\n    engine.slidesHandler.init(self);\n    if (engine.options.loop) engine.slideLooper.loop();\n    if (container.offsetParent && slides.length) engine.dragHandler.init(self);\n    pluginApis = pluginsHandler.init(self, pluginList);\n  }\n  function reActivate(withOptions, withPlugins) {\n    const startIndex = selectedScrollSnap();\n    deActivate();\n    activate(mergeOptions({\n      startIndex\n    }, withOptions), withPlugins);\n    eventHandler.emit('reInit');\n  }\n  function deActivate() {\n    engine.dragHandler.destroy();\n    engine.eventStore.clear();\n    engine.translate.clear();\n    engine.slideLooper.clear();\n    engine.resizeHandler.destroy();\n    engine.slidesHandler.destroy();\n    engine.slidesInView.destroy();\n    engine.animation.destroy();\n    pluginsHandler.destroy();\n    mediaHandlers.clear();\n  }\n  function destroy() {\n    if (destroyed) return;\n    destroyed = true;\n    mediaHandlers.clear();\n    deActivate();\n    eventHandler.emit('destroy');\n  }\n  function scrollTo(index, jump, direction) {\n    if (!options.active || destroyed) return;\n    engine.scrollBody.useBaseFriction().useDuration(jump === true ? 0 : options.duration);\n    engine.scrollTo.index(index, direction || 0);\n  }\n  function scrollNext(jump) {\n    const next = engine.index.add(1).get();\n    scrollTo(next, jump, -1);\n  }\n  function scrollPrev(jump) {\n    const prev = engine.index.add(-1).get();\n    scrollTo(prev, jump, 1);\n  }\n  function canScrollNext() {\n    const next = engine.index.add(1).get();\n    return next !== selectedScrollSnap();\n  }\n  function canScrollPrev() {\n    const prev = engine.index.add(-1).get();\n    return prev !== selectedScrollSnap();\n  }\n  function scrollSnapList() {\n    return engine.scrollSnapList;\n  }\n  function scrollProgress() {\n    return engine.scrollProgress.get(engine.location.get());\n  }\n  function selectedScrollSnap() {\n    return engine.index.get();\n  }\n  function previousScrollSnap() {\n    return engine.indexPrevious.get();\n  }\n  function slidesInView() {\n    return engine.slidesInView.get();\n  }\n  function slidesNotInView() {\n    return engine.slidesInView.get(false);\n  }\n  function plugins() {\n    return pluginApis;\n  }\n  function internalEngine() {\n    return engine;\n  }\n  function rootNode() {\n    return root;\n  }\n  function containerNode() {\n    return container;\n  }\n  function slideNodes() {\n    return slides;\n  }\n  const self = {\n    canScrollNext,\n    canScrollPrev,\n    containerNode,\n    internalEngine,\n    destroy,\n    off,\n    on,\n    emit,\n    plugins,\n    previousScrollSnap,\n    reInit,\n    rootNode,\n    scrollNext,\n    scrollPrev,\n    scrollProgress,\n    scrollSnapList,\n    scrollTo,\n    selectedScrollSnap,\n    slideNodes,\n    slidesInView,\n    slidesNotInView\n  };\n  activate(userOptions, userPlugins);\n  setTimeout(() => eventHandler.emit('init'), 0);\n  return self;\n}\nEmblaCarousel.globalOptions = undefined;\n\nexport { EmblaCarousel as default };\n//# sourceMappingURL=embla-carousel.esm.js.map\n","import { useRef, useState, useCallback, useEffect } from 'react';\nimport { canUseDOM, areOptionsEqual, arePluginsEqual } from 'embla-carousel-reactive-utils';\nimport EmblaCarousel from 'embla-carousel';\n\nfunction useEmblaCarousel(options = {}, plugins = []) {\n  const storedOptions = useRef(options);\n  const storedPlugins = useRef(plugins);\n  const [emblaApi, setEmblaApi] = useState();\n  const [viewport, setViewport] = useState();\n  const reInit = useCallback(() => {\n    if (emblaApi) emblaApi.reInit(storedOptions.current, storedPlugins.current);\n  }, [emblaApi]);\n  useEffect(() => {\n    if (canUseDOM() && viewport) {\n      EmblaCarousel.globalOptions = useEmblaCarousel.globalOptions;\n      const newEmblaApi = EmblaCarousel(viewport, storedOptions.current, storedPlugins.current);\n      setEmblaApi(newEmblaApi);\n      return () => newEmblaApi.destroy();\n    } else {\n      setEmblaApi(undefined);\n    }\n  }, [viewport, setEmblaApi]);\n  useEffect(() => {\n    if (areOptionsEqual(storedOptions.current, options)) return;\n    storedOptions.current = options;\n    reInit();\n  }, [options, reInit]);\n  useEffect(() => {\n    if (arePluginsEqual(storedPlugins.current, plugins)) return;\n    storedPlugins.current = plugins;\n    reInit();\n  }, [plugins, reInit]);\n  return [setViewport, emblaApi];\n}\nuseEmblaCarousel.globalOptions = undefined;\n\nexport { useEmblaCarousel as default };\n//# sourceMappingURL=embla-carousel-react.esm.js.map\n"],"names":["ArrowLeft","d","key","ArrowRight","module","exports","isRecord","subject","Object","prototype","toString","call","isObject","Array","isArray","areOptionsEqual","optionsA","optionsB","optionsAKeys","keys","optionsBKeys","length","JSON","stringify","breakpoints","every","valueA","valueB","sortAndMapPluginToOptions","plugins","concat","sort","a","b","name","map","plugin","options","isNumber","isString","isBoolean","mathAbs","n","Math","abs","mathSign","sign","deltaAbs","arrayKeys","array","objectKeys","Number","arrayLast","arrayLastIndex","max","arrayIsLastIndex","index","arrayFromNumber","startAt","from","_","i","object","objectsMergeDeep","objectA","objectB","reduce","mergedObjects","currentObject","forEach","areObjects","isMouseEvent","evt","ownerWindow","MouseEvent","EventStore","listeners","self","add","node","type","handler","passive","removeListener","addEventListener","removeEventListener","legacyMediaQueryList","addListener","push","clear","filter","remove","Animations","ownerDocument","update","render","documentVisibleHandler","timeStep","lastTimeStamp","lag","animationFrame","animate","timeStamp","elapsed","lagOffset","requestAnimationFrame","stop","cancelAnimationFrame","init","hidden","destroy","start","Limit","min","reachedMin","reachedMax","reachedAny","constrain","removeOffset","ceil","Counter","loop","loopEnd","counter","withinLimit","get","clone","set","DragHandler","axis","direction","rootNode","target","dragTracker","location","animation","scrollTo","scrollBody","scrollTarget","eventHandler","percentOfView","dragFree","dragThreshold","skipSnaps","baseFriction","watchDrag","cross","crossAxis","focusNodes","nonPassiveEvent","initEvents","dragEvents","goToNextThreshold","measure","snapForceBoost","mouse","touch","freeForceBoost","baseSpeed","isMoving","startScroll","startCross","pointerIsDown","preventScroll","preventClick","isMouse","move","lastScroll","readPoint","lastCross","diffScroll","diffCross","cancelable","up","diff","pointerMove","useFriction","useDuration","apply","preventDefault","targetChanged","byDistance","rawForce","pointerUp","force","next","baseForce","distance","byIndex","allowedForce","forceFactor","factorAbs","speed","friction","emit","click","stopPropagation","emblaApi","downIfAllowed","isMouseEvt","button","nodeName","includes","isFocusNode","buttons","pointerDown","addDragEvents","down","DragTracker","startEvent","lastEvent","readTime","evtAxis","coord","scroll","touches","expired","diffDrag","diffTime","ResizeHandler","container","slides","watchResize","nodeRects","resizeObserver","containerSize","slideSizes","destroyed","readSize","measureSize","ResizeObserver","entries","entry","isContainer","slideIndex","indexOf","lastSize","reInit","defaultCallback","observe","disconnect","ScrollBounds","limit","offsetLocation","pullBackThreshold","edgeOffsetTolerance","frictionLimit","disabled","edge","diffToEdge","diffToTarget","subtract","useBaseFriction","toggleActive","active","ScrollLooper","contentSize","vectors","shouldLoop","loopDistance","v","ScrollTarget","scrollSnaps","targetVector","minDistance","distances","shortcut","targets","matchingTargets","t","snap","targetSnapDistance","ascDiffsToSnaps","scrollSnap","diffToSnap","d1","d2","findTargetSnap","reachedBound","Vector1D","initialValue","value","normalizeInput","Translate","translate","containerStyle","style","transform","getAttribute","removeAttribute","to","SlideLooper","viewSize","slideSizesWithGaps","snaps","ascItems","descItems","reverse","loopPoints","gap","findLoopPoints","slidesInGap","startPoints","endPoints","removeSlideSizes","indexes","offset","isEndEdge","slideBounds","end","findSlideBounds","initial","altered","boundEdge","loopPoint","slideLocation","canLoop","shiftLocation","SlidesHandler","watchSlides","mutationObserver","MutationObserver","mutations","mutation","childList","SlidesInView","threshold","intersectionEntryMap","intersectionObserver","inViewCache","notInViewCache","IntersectionObserver","root","parentElement","slide","inView","slideIndexes","list","parseInt","isIntersecting","createInViewList","SlidesToScroll","slidesToScroll","containerRect","slideRects","startGap","endGap","pixelTolerance","startEdge","endEdge","groupByNumber","groupSlides","groupSize","slice","byNumber","groups","rectB","rectA","isFirst","isLast","edgeA","edgeB","gapA","currentSize","previousSize","bySize","Engine","align","scrollAxis","contentDirection","startIndex","duration","inViewThreshold","containScroll","offsetTop","offsetLeft","offsetWidth","offsetHeight","top","right","bottom","left","width","height","Direction","nodeRect","Axis","PercentOfView","alignment","predefined","center","Alignment","containSnaps","readEdgeGap","withEdgeGap","slideRect","measureStartGap","getComputedStyle","parseFloat","getPropertyValue","measureEndGap","rect","rects","SlideSizes","snapsAligned","alignments","g","ScrollSnaps","snapsContained","scrollContainLimit","scrollBounds","snapsBounded","snapAligned","usePixelTolerance","scrollBound","toFixed","startSnap","endSnap","lastIndexOf","findScrollContainLimit","bound","measureContained","ScrollContain","ScrollLimit","indexPrevious","dragHandler","seek","engine","scrollLooper","slideLooper","velocity","hasSettled","settled","startLocation","baseDuration","bodyVelocity","scrollDirection","scrollDuration","scrollFriction","rawLocation","rawLocationPrevious","directionDiff","useBaseDuration","ScrollBody","indexCurrent","distanceDiff","indexDiff","targetIndex","ScrollTo","scrollProgress","ScrollProgress","eventStore","slidesInView","slideRegistry","groupedSlideIndexes","doNotContain","group","createSlideRegistry","SlideRegistry","slideFocus","lastTabPressTime","registerTabPress","event","code","Date","getTime","addSlideFocusEvent","scrollLeft","findIndex","capture","document","SlideFocus","resizeHandler","scrollSnapList","slidesHandler","defaultOptions","OptionsHandler","mergeOptions","optionsAtMedia","matchedMediaOptions","media","matchMedia","matches","mediaOption","optionsMediaQueries","optionsList","acc","mediaQueries","EmblaCarousel","userOptions","userPlugins","defaultView","optionsHandler","pluginsHandler","activePlugins","assign","PluginsHandler","mediaHandlers","api","getListeners","e","off","cb","on","EventHandler","reActivate","pluginApis","optionsBase","globalOptions","pluginList","createEngine","activate","withOptions","withPlugins","userContainer","userSlides","customContainer","querySelector","children","customSlides","querySelectorAll","storeElements","query","offsetParent","selectedScrollSnap","deActivate","jump","canScrollNext","canScrollPrev","containerNode","internalEngine","previousScrollSnap","scrollNext","scrollPrev","slideNodes","slidesNotInView","setTimeout","useEmblaCarousel","storedOptions","useRef","storedPlugins","setEmblaApi","useState","viewport","setViewport","useCallback","current","useEffect","window","createElement","newEmblaApi","undefined","pluginsA","pluginsB","optionA","arePluginsEqual"],"sourceRoot":""}