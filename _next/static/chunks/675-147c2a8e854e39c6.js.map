{"version":3,"file":"static/chunks/675-147c2a8e854e39c6.js","mappings":"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","sources":["webpack://_N_E/./node_modules/next/dist/client/image-component.js","webpack://_N_E/./node_modules/next/dist/shared/lib/get-img-props.js","webpack://_N_E/./node_modules/next/dist/shared/lib/image-blur-svg.js","webpack://_N_E/./node_modules/next/dist/shared/lib/image-external.js","webpack://_N_E/./node_modules/next/dist/shared/lib/image-loader.js","webpack://_N_E/./node_modules/next/image.js"],"sourcesContent":["\"use client\";\n\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"Image\", {\n    enumerable: true,\n    get: function() {\n        return Image;\n    }\n});\nconst _interop_require_default = require(\"@swc/helpers/_/_interop_require_default\");\nconst _interop_require_wildcard = require(\"@swc/helpers/_/_interop_require_wildcard\");\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(require(\"react\"));\nconst _reactdom = /*#__PURE__*/ _interop_require_default._(require(\"react-dom\"));\nconst _head = /*#__PURE__*/ _interop_require_default._(require(\"../shared/lib/head\"));\nconst _getimgprops = require(\"../shared/lib/get-img-props\");\nconst _imageconfig = require(\"../shared/lib/image-config\");\nconst _imageconfigcontextsharedruntime = require(\"../shared/lib/image-config-context.shared-runtime\");\nconst _warnonce = require(\"../shared/lib/utils/warn-once\");\nconst _routercontextsharedruntime = require(\"../shared/lib/router-context.shared-runtime\");\nconst _imageloader = /*#__PURE__*/ _interop_require_default._(require(\"next/dist/shared/lib/image-loader\"));\n// This is replaced by webpack define plugin\nconst configEnv = process.env.__NEXT_IMAGE_OPTS;\nif (typeof window === \"undefined\") {\n    globalThis.__NEXT_IMAGE_IMPORTED = true;\n}\n// See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\nfunction handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized) {\n    const src = img == null ? void 0 : img.src;\n    if (!img || img[\"data-loaded-src\"] === src) {\n        return;\n    }\n    img[\"data-loaded-src\"] = src;\n    const p = \"decode\" in img ? img.decode() : Promise.resolve();\n    p.catch(()=>{}).then(()=>{\n        if (!img.parentElement || !img.isConnected) {\n            // Exit early in case of race condition:\n            // - onload() is called\n            // - decode() is called but incomplete\n            // - unmount is called\n            // - decode() completes\n            return;\n        }\n        if (placeholder !== \"empty\") {\n            setBlurComplete(true);\n        }\n        if (onLoadRef == null ? void 0 : onLoadRef.current) {\n            // Since we don't have the SyntheticEvent here,\n            // we must create one with the same shape.\n            // See https://reactjs.org/docs/events.html\n            const event = new Event(\"load\");\n            Object.defineProperty(event, \"target\", {\n                writable: false,\n                value: img\n            });\n            let prevented = false;\n            let stopped = false;\n            onLoadRef.current({\n                ...event,\n                nativeEvent: event,\n                currentTarget: img,\n                target: img,\n                isDefaultPrevented: ()=>prevented,\n                isPropagationStopped: ()=>stopped,\n                persist: ()=>{},\n                preventDefault: ()=>{\n                    prevented = true;\n                    event.preventDefault();\n                },\n                stopPropagation: ()=>{\n                    stopped = true;\n                    event.stopPropagation();\n                }\n            });\n        }\n        if (onLoadingCompleteRef == null ? void 0 : onLoadingCompleteRef.current) {\n            onLoadingCompleteRef.current(img);\n        }\n        if (process.env.NODE_ENV !== \"production\") {\n            const origSrc = new URL(src, \"http://n\").searchParams.get(\"url\") || src;\n            if (img.getAttribute(\"data-nimg\") === \"fill\") {\n                if (!unoptimized && (!img.getAttribute(\"sizes\") || img.getAttribute(\"sizes\") === \"100vw\")) {\n                    let widthViewportRatio = img.getBoundingClientRect().width / window.innerWidth;\n                    if (widthViewportRatio < 0.6) {\n                        (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes');\n                    }\n                }\n                if (img.parentElement) {\n                    const { position } = window.getComputedStyle(img.parentElement);\n                    const valid = [\n                        \"absolute\",\n                        \"fixed\",\n                        \"relative\"\n                    ];\n                    if (!valid.includes(position)) {\n                        (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has \"fill\" and parent element with invalid \"position\". Provided \"' + position + '\" should be one of ' + valid.map(String).join(\",\") + \".\");\n                    }\n                }\n                if (img.height === 0) {\n                    (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.');\n                }\n            }\n            const heightModified = img.height.toString() !== img.getAttribute(\"height\");\n            const widthModified = img.width.toString() !== img.getAttribute(\"width\");\n            if (heightModified && !widthModified || !heightModified && widthModified) {\n                (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles \\'width: \"auto\"\\' or \\'height: \"auto\"\\' to maintain the aspect ratio.');\n            }\n        }\n    });\n}\nfunction getDynamicProps(fetchPriority) {\n    const [majorStr, minorStr] = _react.version.split(\".\", 2);\n    const major = parseInt(majorStr, 10);\n    const minor = parseInt(minorStr, 10);\n    if (major > 18 || major === 18 && minor >= 3) {\n        // In React 18.3.0 or newer, we must use camelCase\n        // prop to avoid \"Warning: Invalid DOM property\".\n        // See https://github.com/facebook/react/pull/25927\n        return {\n            fetchPriority\n        };\n    }\n    // In React 18.2.0 or older, we must use lowercase prop\n    // to avoid \"Warning: Invalid DOM property\".\n    return {\n        fetchpriority: fetchPriority\n    };\n}\nconst ImageElement = /*#__PURE__*/ (0, _react.forwardRef)((param, forwardedRef)=>{\n    let { src, srcSet, sizes, height, width, decoding, className, style, fetchPriority, placeholder, loading, unoptimized, fill, onLoadRef, onLoadingCompleteRef, setBlurComplete, setShowAltText, onLoad, onError, ...rest } = param;\n    return /*#__PURE__*/ _react.default.createElement(\"img\", {\n        ...rest,\n        ...getDynamicProps(fetchPriority),\n        // It's intended to keep `loading` before `src` because React updates\n        // props in order which causes Safari/Firefox to not lazy load properly.\n        // See https://github.com/facebook/react/issues/25883\n        loading: loading,\n        width: width,\n        height: height,\n        decoding: decoding,\n        \"data-nimg\": fill ? \"fill\" : \"1\",\n        className: className,\n        style: style,\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        sizes: sizes,\n        srcSet: srcSet,\n        src: src,\n        ref: (0, _react.useCallback)((img)=>{\n            if (forwardedRef) {\n                if (typeof forwardedRef === \"function\") forwardedRef(img);\n                else if (typeof forwardedRef === \"object\") {\n                    // @ts-ignore - .current is read only it's usually assigned by react internally\n                    forwardedRef.current = img;\n                }\n            }\n            if (!img) {\n                return;\n            }\n            if (onError) {\n                // If the image has an error before react hydrates, then the error is lost.\n                // The workaround is to wait until the image is mounted which is after hydration,\n                // then we set the src again to trigger the error handler (if there was an error).\n                // eslint-disable-next-line no-self-assign\n                img.src = img.src;\n            }\n            if (process.env.NODE_ENV !== \"production\") {\n                if (!src) {\n                    console.error('Image is missing required \"src\" property:', img);\n                }\n                if (img.getAttribute(\"alt\") === null) {\n                    console.error('Image is missing required \"alt\" property. Please add Alternative Text to describe the image for screen readers and search engines.');\n                }\n            }\n            if (img.complete) {\n                handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);\n            }\n        }, [\n            src,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            onError,\n            unoptimized,\n            forwardedRef\n        ]),\n        onLoad: (event)=>{\n            const img = event.currentTarget;\n            handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);\n        },\n        onError: (event)=>{\n            // if the real image fails to load, this will ensure \"alt\" is visible\n            setShowAltText(true);\n            if (placeholder !== \"empty\") {\n                // If the real image fails to load, this will still remove the placeholder.\n                setBlurComplete(true);\n            }\n            if (onError) {\n                onError(event);\n            }\n        }\n    });\n});\nfunction ImagePreload(param) {\n    let { isAppRouter, imgAttributes } = param;\n    const opts = {\n        as: \"image\",\n        imageSrcSet: imgAttributes.srcSet,\n        imageSizes: imgAttributes.sizes,\n        crossOrigin: imgAttributes.crossOrigin,\n        referrerPolicy: imgAttributes.referrerPolicy,\n        ...getDynamicProps(imgAttributes.fetchPriority)\n    };\n    if (isAppRouter && _reactdom.default.preload) {\n        // See https://github.com/facebook/react/pull/26940\n        _reactdom.default.preload(imgAttributes.src, // @ts-expect-error TODO: upgrade to `@types/react-dom@18.3.x`\n        opts);\n        return null;\n    }\n    return /*#__PURE__*/ _react.default.createElement(_head.default, null, /*#__PURE__*/ _react.default.createElement(\"link\", {\n        key: \"__nimg-\" + imgAttributes.src + imgAttributes.srcSet + imgAttributes.sizes,\n        rel: \"preload\",\n        // Note how we omit the `href` attribute, as it would only be relevant\n        // for browsers that do not support `imagesrcset`, and in those cases\n        // it would cause the incorrect image to be preloaded.\n        //\n        // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n        href: imgAttributes.srcSet ? undefined : imgAttributes.src,\n        ...opts\n    }));\n}\nconst Image = /*#__PURE__*/ (0, _react.forwardRef)((props, forwardedRef)=>{\n    const pagesRouter = (0, _react.useContext)(_routercontextsharedruntime.RouterContext);\n    // We're in the app directory if there is no pages router.\n    const isAppRouter = !pagesRouter;\n    const configContext = (0, _react.useContext)(_imageconfigcontextsharedruntime.ImageConfigContext);\n    const config = (0, _react.useMemo)(()=>{\n        const c = configEnv || configContext || _imageconfig.imageConfigDefault;\n        const allSizes = [\n            ...c.deviceSizes,\n            ...c.imageSizes\n        ].sort((a, b)=>a - b);\n        const deviceSizes = c.deviceSizes.sort((a, b)=>a - b);\n        return {\n            ...c,\n            allSizes,\n            deviceSizes\n        };\n    }, [\n        configContext\n    ]);\n    const { onLoad, onLoadingComplete } = props;\n    const onLoadRef = (0, _react.useRef)(onLoad);\n    (0, _react.useEffect)(()=>{\n        onLoadRef.current = onLoad;\n    }, [\n        onLoad\n    ]);\n    const onLoadingCompleteRef = (0, _react.useRef)(onLoadingComplete);\n    (0, _react.useEffect)(()=>{\n        onLoadingCompleteRef.current = onLoadingComplete;\n    }, [\n        onLoadingComplete\n    ]);\n    const [blurComplete, setBlurComplete] = (0, _react.useState)(false);\n    const [showAltText, setShowAltText] = (0, _react.useState)(false);\n    const { props: imgAttributes, meta: imgMeta } = (0, _getimgprops.getImgProps)(props, {\n        defaultLoader: _imageloader.default,\n        imgConf: config,\n        blurComplete,\n        showAltText\n    });\n    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(ImageElement, {\n        ...imgAttributes,\n        unoptimized: imgMeta.unoptimized,\n        placeholder: imgMeta.placeholder,\n        fill: imgMeta.fill,\n        onLoadRef: onLoadRef,\n        onLoadingCompleteRef: onLoadingCompleteRef,\n        setBlurComplete: setBlurComplete,\n        setShowAltText: setShowAltText,\n        ref: forwardedRef\n    }), imgMeta.priority ? /*#__PURE__*/ _react.default.createElement(ImagePreload, {\n        isAppRouter: isAppRouter,\n        imgAttributes: imgAttributes\n    }) : null);\n});\n\nif ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', { value: true });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}\n\n//# sourceMappingURL=image-component.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"getImgProps\", {\n    enumerable: true,\n    get: function() {\n        return getImgProps;\n    }\n});\nconst _warnonce = require(\"./utils/warn-once\");\nconst _imageblursvg = require(\"./image-blur-svg\");\nconst _imageconfig = require(\"./image-config\");\nconst VALID_LOADING_VALUES = [\n    \"lazy\",\n    \"eager\",\n    undefined\n];\nfunction isStaticRequire(src) {\n    return src.default !== undefined;\n}\nfunction isStaticImageData(src) {\n    return src.src !== undefined;\n}\nfunction isStaticImport(src) {\n    return typeof src === \"object\" && (isStaticRequire(src) || isStaticImageData(src));\n}\nconst allImgs = new Map();\nlet perfObserver;\nfunction getInt(x) {\n    if (typeof x === \"undefined\") {\n        return x;\n    }\n    if (typeof x === \"number\") {\n        return Number.isFinite(x) ? x : NaN;\n    }\n    if (typeof x === \"string\" && /^[0-9]+$/.test(x)) {\n        return parseInt(x, 10);\n    }\n    return NaN;\n}\nfunction getWidths(param, width, sizes) {\n    let { deviceSizes, allSizes } = param;\n    if (sizes) {\n        // Find all the \"vw\" percent sizes used in the sizes prop\n        const viewportWidthRe = /(^|\\s)(1?\\d?\\d)vw/g;\n        const percentSizes = [];\n        for(let match; match = viewportWidthRe.exec(sizes); match){\n            percentSizes.push(parseInt(match[2]));\n        }\n        if (percentSizes.length) {\n            const smallestRatio = Math.min(...percentSizes) * 0.01;\n            return {\n                widths: allSizes.filter((s)=>s >= deviceSizes[0] * smallestRatio),\n                kind: \"w\"\n            };\n        }\n        return {\n            widths: allSizes,\n            kind: \"w\"\n        };\n    }\n    if (typeof width !== \"number\") {\n        return {\n            widths: deviceSizes,\n            kind: \"w\"\n        };\n    }\n    const widths = [\n        ...new Set(// > This means that most OLED screens that say they are 3x resolution,\n        // > are actually 3x in the green color, but only 1.5x in the red and\n        // > blue colors. Showing a 3x resolution image in the app vs a 2x\n        // > resolution image will be visually the same, though the 3x image\n        // > takes significantly more data. Even true 3x resolution screens are\n        // > wasteful as the human eye cannot see that level of detail without\n        // > something like a magnifying glass.\n        // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\n        [\n            width,\n            width * 2 /*, width * 3*/ \n        ].map((w)=>allSizes.find((p)=>p >= w) || allSizes[allSizes.length - 1]))\n    ];\n    return {\n        widths,\n        kind: \"x\"\n    };\n}\nfunction generateImgAttrs(param) {\n    let { config, src, unoptimized, width, quality, sizes, loader } = param;\n    if (unoptimized) {\n        return {\n            src,\n            srcSet: undefined,\n            sizes: undefined\n        };\n    }\n    const { widths, kind } = getWidths(config, width, sizes);\n    const last = widths.length - 1;\n    return {\n        sizes: !sizes && kind === \"w\" ? \"100vw\" : sizes,\n        srcSet: widths.map((w, i)=>loader({\n                config,\n                src,\n                quality,\n                width: w\n            }) + \" \" + (kind === \"w\" ? w : i + 1) + kind).join(\", \"),\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        src: loader({\n            config,\n            src,\n            quality,\n            width: widths[last]\n        })\n    };\n}\nfunction getImgProps(param, _state) {\n    let { src, sizes, unoptimized = false, priority = false, loading, className, quality, width, height, fill = false, style, onLoad, onLoadingComplete, placeholder = \"empty\", blurDataURL, fetchPriority, layout, objectFit, objectPosition, lazyBoundary, lazyRoot, ...rest } = param;\n    const { imgConf, showAltText, blurComplete, defaultLoader } = _state;\n    let config;\n    let c = imgConf || _imageconfig.imageConfigDefault;\n    if (\"allSizes\" in c) {\n        config = c;\n    } else {\n        const allSizes = [\n            ...c.deviceSizes,\n            ...c.imageSizes\n        ].sort((a, b)=>a - b);\n        const deviceSizes = c.deviceSizes.sort((a, b)=>a - b);\n        config = {\n            ...c,\n            allSizes,\n            deviceSizes\n        };\n    }\n    let loader = rest.loader || defaultLoader;\n    // Remove property so it's not spread on <img> element\n    delete rest.loader;\n    delete rest.srcSet;\n    // This special value indicates that the user\n    // didn't define a \"loader\" prop or \"loader\" config.\n    const isDefaultLoader = \"__next_img_default\" in loader;\n    if (isDefaultLoader) {\n        if (config.loader === \"custom\") {\n            throw new Error('Image with src \"' + src + '\" is missing \"loader\" prop.' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader\");\n        }\n    } else {\n        // The user defined a \"loader\" prop or config.\n        // Since the config object is internal only, we\n        // must not pass it to the user-defined \"loader\".\n        const customImageLoader = loader;\n        loader = (obj)=>{\n            const { config: _, ...opts } = obj;\n            return customImageLoader(opts);\n        };\n    }\n    if (layout) {\n        if (layout === \"fill\") {\n            fill = true;\n        }\n        const layoutToStyle = {\n            intrinsic: {\n                maxWidth: \"100%\",\n                height: \"auto\"\n            },\n            responsive: {\n                width: \"100%\",\n                height: \"auto\"\n            }\n        };\n        const layoutToSizes = {\n            responsive: \"100vw\",\n            fill: \"100vw\"\n        };\n        const layoutStyle = layoutToStyle[layout];\n        if (layoutStyle) {\n            style = {\n                ...style,\n                ...layoutStyle\n            };\n        }\n        const layoutSizes = layoutToSizes[layout];\n        if (layoutSizes && !sizes) {\n            sizes = layoutSizes;\n        }\n    }\n    let staticSrc = \"\";\n    let widthInt = getInt(width);\n    let heightInt = getInt(height);\n    let blurWidth;\n    let blurHeight;\n    if (isStaticImport(src)) {\n        const staticImageData = isStaticRequire(src) ? src.default : src;\n        if (!staticImageData.src) {\n            throw new Error(\"An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received \" + JSON.stringify(staticImageData));\n        }\n        if (!staticImageData.height || !staticImageData.width) {\n            throw new Error(\"An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received \" + JSON.stringify(staticImageData));\n        }\n        blurWidth = staticImageData.blurWidth;\n        blurHeight = staticImageData.blurHeight;\n        blurDataURL = blurDataURL || staticImageData.blurDataURL;\n        staticSrc = staticImageData.src;\n        if (!fill) {\n            if (!widthInt && !heightInt) {\n                widthInt = staticImageData.width;\n                heightInt = staticImageData.height;\n            } else if (widthInt && !heightInt) {\n                const ratio = widthInt / staticImageData.width;\n                heightInt = Math.round(staticImageData.height * ratio);\n            } else if (!widthInt && heightInt) {\n                const ratio = heightInt / staticImageData.height;\n                widthInt = Math.round(staticImageData.width * ratio);\n            }\n        }\n    }\n    src = typeof src === \"string\" ? src : staticSrc;\n    let isLazy = !priority && (loading === \"lazy\" || typeof loading === \"undefined\");\n    if (!src || src.startsWith(\"data:\") || src.startsWith(\"blob:\")) {\n        // https://developer.mozilla.org/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n        unoptimized = true;\n        isLazy = false;\n    }\n    if (config.unoptimized) {\n        unoptimized = true;\n    }\n    if (isDefaultLoader && src.endsWith(\".svg\") && !config.dangerouslyAllowSVG) {\n        // Special case to make svg serve as-is to avoid proxying\n        // through the built-in Image Optimization API.\n        unoptimized = true;\n    }\n    if (priority) {\n        fetchPriority = \"high\";\n    }\n    const qualityInt = getInt(quality);\n    if (process.env.NODE_ENV !== \"production\") {\n        if (config.output === \"export\" && isDefaultLoader && !unoptimized) {\n            throw new Error(\"Image Optimization using the default loader is not compatible with `{ output: 'export' }`.\\n  Possible solutions:\\n    - Remove `{ output: 'export' }` and run \\\"next start\\\" to run server mode including the Image Optimization API.\\n    - Configure `{ images: { unoptimized: true } }` in `next.config.js` to disable the Image Optimization API.\\n  Read more: https://nextjs.org/docs/messages/export-image-api\");\n        }\n        if (!src) {\n            // React doesn't show the stack trace and there's\n            // no `src` to help identify which image, so we\n            // instead console.error(ref) during mount.\n            unoptimized = true;\n        } else {\n            if (fill) {\n                if (width) {\n                    throw new Error('Image with src \"' + src + '\" has both \"width\" and \"fill\" properties. Only one should be used.');\n                }\n                if (height) {\n                    throw new Error('Image with src \"' + src + '\" has both \"height\" and \"fill\" properties. Only one should be used.');\n                }\n                if ((style == null ? void 0 : style.position) && style.position !== \"absolute\") {\n                    throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.position\" properties. Images with \"fill\" always use position absolute - it cannot be modified.');\n                }\n                if ((style == null ? void 0 : style.width) && style.width !== \"100%\") {\n                    throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.width\" properties. Images with \"fill\" always use width 100% - it cannot be modified.');\n                }\n                if ((style == null ? void 0 : style.height) && style.height !== \"100%\") {\n                    throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.height\" properties. Images with \"fill\" always use height 100% - it cannot be modified.');\n                }\n            } else {\n                if (typeof widthInt === \"undefined\") {\n                    throw new Error('Image with src \"' + src + '\" is missing required \"width\" property.');\n                } else if (isNaN(widthInt)) {\n                    throw new Error('Image with src \"' + src + '\" has invalid \"width\" property. Expected a numeric value in pixels but received \"' + width + '\".');\n                }\n                if (typeof heightInt === \"undefined\") {\n                    throw new Error('Image with src \"' + src + '\" is missing required \"height\" property.');\n                } else if (isNaN(heightInt)) {\n                    throw new Error('Image with src \"' + src + '\" has invalid \"height\" property. Expected a numeric value in pixels but received \"' + height + '\".');\n                }\n            }\n        }\n        if (!VALID_LOADING_VALUES.includes(loading)) {\n            throw new Error('Image with src \"' + src + '\" has invalid \"loading\" property. Provided \"' + loading + '\" should be one of ' + VALID_LOADING_VALUES.map(String).join(\",\") + \".\");\n        }\n        if (priority && loading === \"lazy\") {\n            throw new Error('Image with src \"' + src + '\" has both \"priority\" and \"loading=\\'lazy\\'\" properties. Only one should be used.');\n        }\n        if (placeholder !== \"empty\" && placeholder !== \"blur\" && !placeholder.startsWith(\"data:image/\")) {\n            throw new Error('Image with src \"' + src + '\" has invalid \"placeholder\" property \"' + placeholder + '\".');\n        }\n        if (placeholder !== \"empty\") {\n            if (widthInt && heightInt && widthInt * heightInt < 1600) {\n                (0, _warnonce.warnOnce)('Image with src \"' + src + '\" is smaller than 40x40. Consider removing the \"placeholder\" property to improve performance.');\n            }\n        }\n        if (placeholder === \"blur\" && !blurDataURL) {\n            const VALID_BLUR_EXT = [\n                \"jpeg\",\n                \"png\",\n                \"webp\",\n                \"avif\"\n            ] // should match next-image-loader\n            ;\n            throw new Error('Image with src \"' + src + '\" has \"placeholder=\\'blur\\'\" property but is missing the \"blurDataURL\" property.\\n        Possible solutions:\\n          - Add a \"blurDataURL\" property, the contents should be a small Data URL to represent the image\\n          - Change the \"src\" property to a static import with one of the supported file types: ' + VALID_BLUR_EXT.join(\",\") + ' (animated images not supported)\\n          - Remove the \"placeholder\" property, effectively no blur effect\\n        Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url');\n        }\n        if (\"ref\" in rest) {\n            (0, _warnonce.warnOnce)('Image with src \"' + src + '\" is using unsupported \"ref\" property. Consider using the \"onLoad\" property instead.');\n        }\n        if (!unoptimized && !isDefaultLoader) {\n            const urlStr = loader({\n                config,\n                src,\n                width: widthInt || 400,\n                quality: qualityInt || 75\n            });\n            let url;\n            try {\n                url = new URL(urlStr);\n            } catch (err) {}\n            if (urlStr === src || url && url.pathname === src && !url.search) {\n                (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has a \"loader\" property that does not implement width. Please implement it or use the \"unoptimized\" property instead.' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width\");\n            }\n        }\n        if (onLoadingComplete) {\n            (0, _warnonce.warnOnce)('Image with src \"' + src + '\" is using deprecated \"onLoadingComplete\" property. Please use the \"onLoad\" property instead.');\n        }\n        for (const [legacyKey, legacyValue] of Object.entries({\n            layout,\n            objectFit,\n            objectPosition,\n            lazyBoundary,\n            lazyRoot\n        })){\n            if (legacyValue) {\n                (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has legacy prop \"' + legacyKey + '\". Did you forget to run the codemod?' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-upgrade-to-13\");\n            }\n        }\n        if (typeof window !== \"undefined\" && !perfObserver && window.PerformanceObserver) {\n            perfObserver = new PerformanceObserver((entryList)=>{\n                for (const entry of entryList.getEntries()){\n                    var _entry_element;\n                    // @ts-ignore - missing \"LargestContentfulPaint\" class with \"element\" prop\n                    const imgSrc = (entry == null ? void 0 : (_entry_element = entry.element) == null ? void 0 : _entry_element.src) || \"\";\n                    const lcpImage = allImgs.get(imgSrc);\n                    if (lcpImage && !lcpImage.priority && lcpImage.placeholder === \"empty\" && !lcpImage.src.startsWith(\"data:\") && !lcpImage.src.startsWith(\"blob:\")) {\n                        // https://web.dev/lcp/#measure-lcp-in-javascript\n                        (0, _warnonce.warnOnce)('Image with src \"' + lcpImage.src + '\" was detected as the Largest Contentful Paint (LCP). Please add the \"priority\" property if this image is above the fold.' + \"\\nRead more: https://nextjs.org/docs/api-reference/next/image#priority\");\n                    }\n                }\n            });\n            try {\n                perfObserver.observe({\n                    type: \"largest-contentful-paint\",\n                    buffered: true\n                });\n            } catch (err) {\n                // Log error but don't crash the app\n                console.error(err);\n            }\n        }\n    }\n    const imgStyle = Object.assign(fill ? {\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        objectFit,\n        objectPosition\n    } : {}, showAltText ? {} : {\n        color: \"transparent\"\n    }, style);\n    const backgroundImage = !blurComplete && placeholder !== \"empty\" ? placeholder === \"blur\" ? 'url(\"data:image/svg+xml;charset=utf-8,' + (0, _imageblursvg.getImageBlurSvg)({\n        widthInt,\n        heightInt,\n        blurWidth,\n        blurHeight,\n        blurDataURL: blurDataURL || \"\",\n        objectFit: imgStyle.objectFit\n    }) + '\")' : 'url(\"' + placeholder + '\")' // assume `data:image/`\n     : null;\n    let placeholderStyle = backgroundImage ? {\n        backgroundSize: imgStyle.objectFit || \"cover\",\n        backgroundPosition: imgStyle.objectPosition || \"50% 50%\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundImage\n    } : {};\n    if (process.env.NODE_ENV === \"development\") {\n        if (placeholderStyle.backgroundImage && placeholder === \"blur\" && (blurDataURL == null ? void 0 : blurDataURL.startsWith(\"/\"))) {\n            // During `next dev`, we don't want to generate blur placeholders with webpack\n            // because it can delay starting the dev server. Instead, `next-image-loader.js`\n            // will inline a special url to lazily generate the blur placeholder at request time.\n            placeholderStyle.backgroundImage = 'url(\"' + blurDataURL + '\")';\n        }\n    }\n    const imgAttributes = generateImgAttrs({\n        config,\n        src,\n        unoptimized,\n        width: widthInt,\n        quality: qualityInt,\n        sizes,\n        loader\n    });\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof window !== \"undefined\") {\n            let fullUrl;\n            try {\n                fullUrl = new URL(imgAttributes.src);\n            } catch (e) {\n                fullUrl = new URL(imgAttributes.src, window.location.href);\n            }\n            allImgs.set(fullUrl.href, {\n                src,\n                priority,\n                placeholder\n            });\n        }\n    }\n    const props = {\n        ...rest,\n        loading: isLazy ? \"lazy\" : loading,\n        fetchPriority,\n        width: widthInt,\n        height: heightInt,\n        decoding: \"async\",\n        className,\n        style: {\n            ...imgStyle,\n            ...placeholderStyle\n        },\n        sizes: imgAttributes.sizes,\n        srcSet: imgAttributes.srcSet,\n        src: imgAttributes.src\n    };\n    const meta = {\n        unoptimized,\n        priority,\n        placeholder,\n        fill\n    };\n    return {\n        props,\n        meta\n    };\n}\n\n//# sourceMappingURL=get-img-props.js.map","/**\n * A shared function, used on both client and server, to generate a SVG blur placeholder.\n */ \"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"getImageBlurSvg\", {\n    enumerable: true,\n    get: function() {\n        return getImageBlurSvg;\n    }\n});\nfunction getImageBlurSvg(param) {\n    let { widthInt, heightInt, blurWidth, blurHeight, blurDataURL, objectFit } = param;\n    const std = 20;\n    const svgWidth = blurWidth ? blurWidth * 40 : widthInt;\n    const svgHeight = blurHeight ? blurHeight * 40 : heightInt;\n    const viewBox = svgWidth && svgHeight ? \"viewBox='0 0 \" + svgWidth + \" \" + svgHeight + \"'\" : \"\";\n    const preserveAspectRatio = viewBox ? \"none\" : objectFit === \"contain\" ? \"xMidYMid\" : objectFit === \"cover\" ? \"xMidYMid slice\" : \"none\";\n    return \"%3Csvg xmlns='http://www.w3.org/2000/svg' \" + viewBox + \"%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='\" + std + \"'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='\" + std + \"'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='\" + preserveAspectRatio + \"' style='filter: url(%23b);' href='\" + blurDataURL + \"'/%3E%3C/svg%3E\";\n}\n\n//# sourceMappingURL=image-blur-svg.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    unstable_getImgProps: null,\n    default: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    unstable_getImgProps: function() {\n        return unstable_getImgProps;\n    },\n    default: function() {\n        return _default;\n    }\n});\nconst _interop_require_default = require(\"@swc/helpers/_/_interop_require_default\");\nconst _getimgprops = require(\"./get-img-props\");\nconst _warnonce = require(\"./utils/warn-once\");\nconst _imagecomponent = require(\"../../client/image-component\");\nconst _imageloader = /*#__PURE__*/ _interop_require_default._(require(\"next/dist/shared/lib/image-loader\"));\nconst unstable_getImgProps = (imgProps)=>{\n    (0, _warnonce.warnOnce)(\"Warning: unstable_getImgProps() is experimental and may change or be removed at any time. Use at your own risk.\");\n    const { props } = (0, _getimgprops.getImgProps)(imgProps, {\n        defaultLoader: _imageloader.default,\n        // This is replaced by webpack define plugin\n        imgConf: process.env.__NEXT_IMAGE_OPTS\n    });\n    for (const [key, value] of Object.entries(props)){\n        if (value === undefined) {\n            delete props[key];\n        }\n    }\n    return {\n        props\n    };\n};\nconst _default = _imagecomponent.Image;\n\n//# sourceMappingURL=image-external.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n});\nfunction defaultLoader(param) {\n    let { config, src, width, quality } = param;\n    if (process.env.NODE_ENV !== \"production\") {\n        const missingValues = [];\n        // these should always be provided but make sure they are\n        if (!src) missingValues.push(\"src\");\n        if (!width) missingValues.push(\"width\");\n        if (missingValues.length > 0) {\n            throw new Error(\"Next Image Optimization requires \" + missingValues.join(\", \") + \" to be provided. Make sure you pass them as props to the `next/image` component. Received: \" + JSON.stringify({\n                src,\n                width,\n                quality\n            }));\n        }\n        if (src.startsWith(\"//\")) {\n            throw new Error('Failed to parse src \"' + src + '\" on `next/image`, protocol-relative URL (//) must be changed to an absolute URL (http:// or https://)');\n        }\n        if (!src.startsWith(\"/\") && (config.domains || config.remotePatterns)) {\n            let parsedSrc;\n            try {\n                parsedSrc = new URL(src);\n            } catch (err) {\n                console.error(err);\n                throw new Error('Failed to parse src \"' + src + '\" on `next/image`, if using relative image it must start with a leading slash \"/\" or be an absolute URL (http:// or https://)');\n            }\n            if (process.env.NODE_ENV !== \"test\" && // micromatch isn't compatible with edge runtime\n            process.env.NEXT_RUNTIME !== \"edge\") {\n                // We use dynamic require because this should only error in development\n                const { hasMatch } = require(\"./match-remote-pattern\");\n                if (!hasMatch(config.domains, config.remotePatterns, parsedSrc)) {\n                    throw new Error(\"Invalid src prop (\" + src + ') on `next/image`, hostname \"' + parsedSrc.hostname + '\" is not configured under images in your `next.config.js`\\n' + \"See more info: https://nextjs.org/docs/messages/next-image-unconfigured-host\");\n                }\n            }\n        }\n    }\n    return config.path + \"?url=\" + encodeURIComponent(src) + \"&w=\" + width + \"&q=\" + (quality || 75) + (process.env.NEXT_DEPLOYMENT_ID ? \"&dpl=\" + process.env.NEXT_DEPLOYMENT_ID : \"\");\n}\n// We use this to determine if the import is the default loader\n// or a custom loader defined by the user in next.config.js\ndefaultLoader.__next_img_default = true;\nconst _default = defaultLoader;\n\n//# sourceMappingURL=image-loader.js.map","module.exports = require('./dist/shared/lib/image-external')\n"],"names":["Object","defineProperty","exports","value","enumerable","get","Image","_interop_require_default","require","_react","_","_reactdom","_head","_getimgprops","_imageconfig","_imageconfigcontextsharedruntime","_routercontextsharedruntime","_imageloader","configEnv","process","handleLoading","img","placeholder","onLoadRef","onLoadingCompleteRef","setBlurComplete","unoptimized","src","decode","Promise","resolve","catch","then","parentElement","isConnected","current","event","Event","writable","prevented","stopped","nativeEvent","currentTarget","target","isDefaultPrevented","isPropagationStopped","persist","preventDefault","stopPropagation","getDynamicProps","fetchPriority","majorStr","minorStr","version","split","major","parseInt","minor","fetchpriority","ImageElement","forwardRef","param","forwardedRef","srcSet","sizes","height","width","decoding","className","style","loading","fill","setShowAltText","onLoad","onError","rest","default","createElement","ref","useCallback","complete","ImagePreload","isAppRouter","imgAttributes","opts","as","imageSrcSet","imageSizes","crossOrigin","referrerPolicy","preload","key","rel","href","undefined","props","useContext","RouterContext","configContext","ImageConfigContext","config","useMemo","c","imageConfigDefault","allSizes","deviceSizes","sort","a","b","onLoadingComplete","useRef","useEffect","blurComplete","useState","showAltText","meta","imgMeta","getImgProps","defaultLoader","imgConf","Fragment","priority","__esModule","assign","module","_imageblursvg","isStaticRequire","Map","getInt","x","Number","isFinite","NaN","test","generateImgAttrs","quality","loader","widths","kind","viewportWidthRe","percentSizes","match","exec","push","length","smallestRatio","Math","min","filter","s","Set","map","w","find","p","getWidths","last","i","join","_state","blurDataURL","layout","objectFit","objectPosition","lazyBoundary","lazyRoot","isDefaultLoader","Error","customImageLoader","obj","layoutToSizes","responsive","layoutStyle","intrinsic","maxWidth","layoutSizes","blurWidth","blurHeight","staticSrc","widthInt","heightInt","isStaticImageData","isStaticImport","staticImageData","JSON","stringify","ratio","round","isLazy","startsWith","endsWith","dangerouslyAllowSVG","qualityInt","imgStyle","position","left","top","right","bottom","color","backgroundImage","getImageBlurSvg","placeholderStyle","backgroundSize","backgroundPosition","backgroundRepeat","svgWidth","svgHeight","viewBox","all","name","_export","unstable_getImgProps","_default","_warnonce","_imagecomponent","imgProps","warnOnce","entries","path","encodeURIComponent","__next_img_default"],"sourceRoot":""}