{"version":3,"file":"static/chunks/426-b72e4d0d8b564762.js","mappings":"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","sources":["webpack://_N_E/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n};\n\nexport { MotionGlobalConfig };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["LayoutGroupContext","createContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","PresenceContext","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","length","stepsOrder","schedule","cancel","cancelFrame","state","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","keepAlive","immediate","addToCurrentFrame","queue","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","createRenderBatcher","requestAnimationFrame","noop","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","render","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","translateAlias","x","y","z","transformPerspective","numTransforms","getValueAsType","type","transform","round","numberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","default","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","pipe","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","getVelocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","defaultOffset","arr","remaining","offsetProgress","progress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","interpolate","calculatedDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","clamp","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","g","initialGuess","result","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","reverse","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","complex","maxDefaults","applyDefaultFilter","slice","split","number","match","unit","defaultValue","functionRegex","filter","getAnimatableNone","functions","defaultValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","MotionGlobalConfig","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","from","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","testValueType","dimensionValueTypes","vw","vh","parse","findDimensionValueType","find","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","notify","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","parseFloat","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","template","createTransformer","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","postRender","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","output","to","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","_b","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","getVariableValue","token","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","DOMVisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","unsubscribe","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","parsed","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","checkStringStartsWith","isCSSVariableName","isCSSVariableToken","cssVariableRegex","addUniqueItem","item","removeItem","warning","invariant","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","alpha","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","getMixer","mixComplex","mixArray","numValues","blendValue","fromThis","mixObject","originStats","targetStats","numVars","numColors","numNumbers","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","input","isClamp","inputLength","interpolator","progressInRange","isBrowser","any","combineFunctions","transformers","toFromDifference","SubscriptionManager","subscriptions","numSubscriptions","getSize","useConstant","init","useIsomorphicLayoutEffect","useLayoutEffect","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","r","parseInt","alpha$1","rgbUnit","clampRgbUnit","isColorString","testProp","splitColor","aName","bName","cName","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","parseComplexValue","convertNumbersToZero","transformer","createUnitType","endsWith","degrees","percent","progressPercentage","sanitize","floatRegex","colorRegex","singleColorRegex","isString","isMotionValue"],"sourceRoot":""}