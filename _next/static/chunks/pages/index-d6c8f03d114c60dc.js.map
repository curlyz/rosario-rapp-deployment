{"version":3,"file":"static/chunks/pages/index-d6c8f03d114c60dc.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./src/components/ui/moving-border.tsx","webpack://_N_E/./src/components/main_FormulaCard.tsx","webpack://_N_E/./src/pages/index.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","\"use client\";\nimport React from \"react\";\nimport {\n    motion,\n    useAnimationFrame,\n    useMotionTemplate,\n    useMotionValue,\n    useTransform,\n} from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { cn } from \"@/util\";\n\nexport function Button({\n    borderRadius = \"1.75rem\",\n    children,\n    as: Component = \"button\",\n    containerClassName,\n    borderClassName,\n    duration,\n    className,\n    isRunning,\n    backgroundColor,\n    ...otherProps\n}: {\n    borderRadius?: string;\n    children: React.ReactNode;\n    as?: any;\n    containerClassName?: string;\n    borderClassName?: string;\n    backgroundColor?: string;\n    duration?: number;\n    className?: string;\n    isRunning?: boolean;\n    [key: string]: any;\n}) {\n    return (\n        <Component\n            className={cn(\n                \"bg-transparent relative text-xl h-full w-full p-[3px] overflow-hidden \",\n                containerClassName\n            )}\n            style={{\n                borderRadius: borderRadius,\n                backgroundColor: backgroundColor,\n            }}\n            {...otherProps}\n        >\n            <div\n                className=\"absolute inset-0\"\n                style={{ borderRadius: `calc(${borderRadius} * 0.96)` }}\n            >\n                <MovingBorder duration={duration} rx=\"30%\" ry=\"30%\">\n                    <div\n                        className={cn(\n                            \"h-20 w-20 opacity-[0.8]\",\n                            isRunning ? \"bg-[radial-gradient(var(--sky-500)_40%,transparent_60%)]\" : \"\",\n                            borderClassName\n                        )}\n                    />\n                </MovingBorder>\n            </div>\n\n            <div\n                className={cn(\n                    \"relative border border-slate-800 backdrop-blur-xl text-white flex items-center justify-center w-full h-full text-sm antialiased\",\n                    className\n                )}\n                style={{\n                    borderRadius: `calc(${borderRadius} * 0.96)`,\n                }}\n            >\n                {children}\n            </div>\n        </Component>\n    );\n}\n\nexport const MovingBorder = ({\n    children,\n    duration = 2000,\n    rx,\n    ry,\n    ...otherProps\n}: {\n    children: React.ReactNode;\n    duration?: number;\n    rx?: string;\n    ry?: string;\n    [key: string]: any;\n}) => {\n    const pathRef = useRef<any>();\n    const progress = useMotionValue<number>(0);\n\n    useAnimationFrame((time) => {\n        const length = pathRef.current?.getTotalLength();\n        if (length) {\n            const pxPerMillisecond = length / duration;\n            progress.set((time * pxPerMillisecond) % length);\n        }\n    });\n\n    const x = useTransform(\n        progress,\n        (val) => pathRef.current?.getPointAtLength(val).x\n    );\n    const y = useTransform(\n        progress,\n        (val) => pathRef.current?.getPointAtLength(val).y\n    );\n\n    const transform = useMotionTemplate`translateX(${x}px) translateY(${y}px) translateX(-50%) translateY(-50%)`;\n\n    return (\n        <>\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                preserveAspectRatio=\"none\"\n                className=\"absolute h-full w-full\"\n                width=\"100%\"\n                height=\"100%\"\n                {...otherProps}\n            >\n                <rect\n                    fill=\"none\"\n                    width=\"100%\"\n                    height=\"100%\"\n                    rx={rx}\n                    ry={ry}\n                    ref={pathRef}\n                />\n            </svg>\n            <motion.div\n                style={{\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                    display: \"inline-block\",\n                    transform,\n                }}\n            >\n                {children}\n            </motion.div>\n        </>\n    );\n};\n","\"use client\";\n\nimport { EnumFormulaType } from \"@/gateway/formula\";\n// import { Button, Card, CardFooter, Tooltip } from '@nextui-org/react';\nimport useDeviceContext from \"@/hooks/useDeviceContext\";\nimport { LineChart } from \"@buildo/bento-design-system\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { FiMove } from \"react-icons/fi\";\nimport { GiCoffeeBeans } from \"react-icons/gi\";\nimport { IoIosCloseCircle, IoIosLeaf } from \"react-icons/io\";\nimport { MdCoffeeMaker } from \"react-icons/md\";\nimport { PiDotsThreeCircleVerticalThin } from \"react-icons/pi\";\nimport { FaStopCircle } from \"react-icons/fa\";\nimport { MovingBorder, Button } from \"./ui/moving-border\";\nimport { cn } from \"@/util\";\nimport { motion } from 'framer-motion'\n\nexport default function ProfileCard({\n  formulaId,\n  onClickEdit,\n  onCancel,\n  onClick,\n}: {\n  formulaId: string;\n  onCancel: () => void;\n  onClick: () => void;\n  onClickEdit: () => void;\n}) {\n  //https://github.com/ccnmtl/juxtapose/blob/master/src/TrackElement.jsx#L83\n\n  const { draggable, progressReport, formulaFeedbacks, selectedFormulaId } = useDeviceContext();\n  const [height, setHeight] = useState(0);\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  const { formulas, setFormulas, formulaUpdatedTimestamp } = useDeviceContext();\n\n\n  useEffect(() => {\n    if (elementRef.current) {\n      setHeight(elementRef.current.clientHeight);\n    }\n  }, []);\n\n  const [isRunning, setRunning] = useState(false);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const [formulaStartTimestamp, setFormulaStartTimestamp] = useState<number>(0);\n\n\n\n  // useEffect(() => {\n  //   console.log(\"update/ \", { formulaUpdatedTimestamp, formulaId, isRunning })\n  //   if (formulaUpdatedTimestamp === formulaId) {\n\n  //     clearTimeout(timeoutRef.current);\n  //     timeoutRef.current = setTimeout(() => {\n  //       setRunning(false);\n  //     }, 2000);\n\n  //     if (!isRunning) {\n  //       setFormulaStartTimestamp(new Date().getTime());\n  //     }\n  //     setRunning(true);\n  //   }\n  // }, [formulaUpdatedTimestamp, formulaId, isRunning]);\n\n\n  // useEffect(() => {\n\n  //   if (formulaUpdatedTimestamp === formulaId) {\n  //     console.log(\"Update/ I'm formulaId, updated \", { formulaId, formulaUpdatedTimestamp })\n  //     setRunning(true);\n  //         clearTimeout(timeoutRef.current);\n  //         timeoutRef.current = setTimeout(() => {\n  //           setRunning(false);\n  //         }, 2000);\n\n  //     if (!isRunning) {\n  //       setFormulaStartTimestamp(new Date().getTime());\n  //     }\n  //   }\n  // }, [formulaUpdatedTimestamp, formulaId, isRunning])\n\n  useEffect(() => {\n\n    const elapsed = new Date().getTime() - (formulaUpdatedTimestamp[formulaId] || 0)\n    // console.log(\"Update/  updated\", { formulaUpdatedTimestamp, formulaId, elapsed })\n    if (elapsed < 2000) {\n      // if recently updated, show progress\n      if (!isRunning) {\n        setFormulaStartTimestamp(new Date().getTime());\n      }\n      setRunning(true)\n\n      clearTimeout(timeoutRef.current)\n      timeoutRef.current = setTimeout(() => {\n        setRunning(false)\n      }, 2000)\n\n    }\n\n  }, [formulaUpdatedTimestamp, formulaId, isRunning])\n\n  const normalView = (\n    <>\n\n      <div className={cn(\n        \"absolute left-0 top-0 flex flex-col items-center justify-evenly h-full p-1 ml-1\",\n        draggable ? \"justify-evenly\" : \"justify-start\"\n      )}>\n        {draggable ? (\n          <>\n            <button\n              onMouseDown={(e) => {\n                onClickEdit();\n                e.preventDefault();\n                e.stopPropagation();\n              }}\n              onTouchStart={(e) => {\n                onClickEdit();\n                e.preventDefault();\n                e.stopPropagation();\n              }}\n            >\n              <PiDotsThreeCircleVerticalThin\n                size={32}\n                className=\" text-white \"\n              />\n            </button>\n\n            <button>\n              <FiMove size={20} className=\"drag-handle m-1 text-white\" />\n            </button>\n            <button className=\"\">\n              <IoIosCloseCircle size={25} className=\"drag-handle mt-1 text-white\" />\n            </button>\n\n          </>\n        ) : (\n          <>\n            {isRunning ? (\n              <div className=\"m-1\">\n                <FaStopCircle size={32} className=\"m-1 text-white\" />\n              </div>\n            ) : (\n              <div className=\"opacity-30\">\n                {formulas[formulaId]?.formulaType ===\n                  EnumFormulaType.Espresso && (\n                    <GiCoffeeBeans size={32} className=\"m-1 text-white\" />\n                  )}\n                {formulas[formulaId]?.formulaType ===\n                  EnumFormulaType.Teapresso && (\n                    <IoIosLeaf size={32} className=\"m-1 text-white\" />\n                  )}\n                {formulas[formulaId]?.formulaType ===\n                  EnumFormulaType.PourOver && (\n                    <MdCoffeeMaker size={32} className=\"m-1 text-white\" />\n                  )}\n\n              </div>\n            )}\n\n\n          </>\n        )}\n      </div>\n      <div className=\"\">\n        <h1 className={cn(\n          \"select-none text-left text-md text-white m-2 font-mono break-all font-bold\",\n          draggable ? \"opacity-20 ml-10\": 'opacity-100'\n        )}>\n          {isRunning ? (\n            String(Math.round((new Date().getTime() - formulaStartTimestamp) / 1000 * 10) / 10) + \" s\"\n          ) : (formulas[formulaId]?.title || \"\")}\n        </h1>\n      </div>\n    </>\n  );\n\n  const progressView = (\n    <div className=\"first-letter absolute bottom-0  left-0 h-full w-full\">\n      <LineChart\n        height={height}\n        dataKey=\"name\"\n        categories={[\"flowrate\"]}\n        hideLegend={true}\n        hideXAxis={true}\n        hideYAxis={true}\n        data={[\n          ...Array.from({ length: 10 }, (_, index) => ({\n            name: `Point ${index + 1}`,\n            flowrate: Math.floor(Math.random() * 100),\n          })),\n        ]}\n      />{\" \"}\n    </div>\n  );\n\n\n  return (\n    <motion.div\n      className=\"w-full h-full \"\n      animate={{\n        opacity: 1,\n        scale: 1\n      }}\n      initial={{\n        opacity: 0,\n        scale: 0\n      }}\n      whileHover={{\n        scale: 0.99\n      }}\n      transition={{\n        delay: Math.random() * 1,\n        type: \"spring\",\n        stiffness: 100,\n      }}\n\n\n    >\n      <Button\n        // duration={3333}\n        borderRadius=\"16px\"\n        isRunning={isRunning}\n        ref={elementRef}\n        // isFooterBlurred\n        // radius=\"lg\"\n        onMouseDown={(e) => {\n          console.log(\"profile/ clicked\");\n          if (isRunning) {\n            onCancel()\n          }\n          else {\n            onClick()\n          }\n        }}\n        backgroundColor={formulas[formulaId]?.color || \"black\"}\n\n        className={\n          cn(\n            \"border flex h-full w-full transform flex-col items-center justify-center shadow-large cursor-pointer select-none\",\n            // formulas[formulaId]?.backdrop,\n\n            isRunning ? \" border-black\" : `border-white`,\n            isRunning ? \"animate-none\" : \"animate-none\",\n\n          )}\n\n      >\n        {normalView}\n      </Button>\n\n\n    </motion.div>\n\n  );\n}\n","import ProfileCard from \"@/components/main_FormulaCard\";\nimport { EnumFormulaType, cancelFormulaClick } from \"@/gateway/formula\";\nimport { DisplayFormulaParam } from \"@/gateway/provider\";\nimport useDeviceContext from \"@/hooks/useDeviceContext\";\nimport {\n  Button,\n  Modal,\n  Stack,\n  TextField,\n  Tiles,\n  useToast,\n} from \"@buildo/bento-design-system\";\nimport { produce } from \"immer\";\nimport { useTranslation } from \"next-export-i18n\";\nimport { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport {\n  Layouts,\n  Layout as RGLayout,\n  Responsive,\n  WidthProvider,\n} from \"react-grid-layout\";\nimport { uuid } from \"uuidv4\";\nimport Layout from \"./layout\";\nimport Head from 'next/head'\nimport \"@/styles/rgl.css\"\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\nconst GRID_SIZE = { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }\n\n\nconst espressoGradient = [\n  \"bg-gradient-to-br from-yellow-900 via-red-600 to-yellow-500\",\n  \"bg-gradient-to-bl from-yellow-900 via-red-600 to-yellow-500\",\n  \"bg-gradient-to-tl from-yellow-900 via-red-600 to-yellow-500\",\n  \"bg-gradient-to-br from-yellow-900 via-red-600 to-yellow-500\",\n  \"bg-gradient-to-bl from-yellow-900 via-red-600 to-yellow-500\",\n  \"bg-gradient-to-tr from-yellow-900 via-red-600 to-yellow-500\",\n];\nconst teaGradients = [\n  \"bg-gradient-to-b from-green-900 via-green-600 to-teal-500\",\n  \"bg-gradient-to-r from-green-900 via-green-600 to-teal-500\",\n  \"bg-gradient-to-r from-green-900 via-green-600 to-teal-500\",\n  \"bg-gradient-to-b from-green-900 via-green-600 to-teal-500\",\n  \"bg-gradient-to-b from-green-900 via-green-600 to-teal-500\",\n  \"bg-gradient-to-r from-green-900 via-green-600 to-teal-500\",\n];\n\nconst pourOverGradients = [\n  \"bg-gradient-to-b from-blue-900 via-blue-600 to-cyan-500\",\n  \"bg-gradient-to-b from-blue-900 via-blue-600 to-cyan-500\",\n  \"bg-gradient-to-t from-blue-900 via-blue-600 to-cyan-500\",\n  \"bg-gradient-to-t from-blue-900 via-blue-600 to-cyan-500\",\n  \"bg-gradient-to-l from-blue-900 via-blue-600 to-cyan-500\",\n  \"bg-gradient-to-t from-blue-900 via-blue-600 to-cyan-500\",\n];\n\n// function getRandomGradient(startColor: string, endColor: string) {\n//   const orientations = [\"to-r\", \"to-l\", \"to-b\", \"to-t\"];\n//   const randomOrientation =\n//     orientations[Math.floor(Math.random() * orientations.length)];\n\n//   const color = `bg-gradient-${randomOrientation} from-${startColor}-900 via-${startColor}-600 to-${endColor}-500`;\n//   // console.log('regnea', color)\n//   return color;\n// }\n\nfunction HomePage() {\n  // const [layout, setLayout] = useState<Layouts>({});\n  const [isLoaded, setLoaded] = useState(false);\n  const { formulas, setFormulas, addFormulaOpen, setAddFormulaOpen } =\n    useDeviceContext();\n  const { layout, setLayout } = useDeviceContext();\n\n  const router = useRouter();\n  const { showToast } = useToast();\n\n  const { registerFormulaClick, registerSelectedFormulaId } =\n    useDeviceContext();\n\n  async function addFormula() {\n    const formulaId = uuid();\n    var stagingSteps = []\n    var statingTitle = ''\n    var stagingBackdrop = ''\n\n    // if staging formula name are list of number, then it's a share token\n    if (stagingFormulaName.match(/^[0-9]+$/) != null) {\n      // DEPRECATED\n      // it's a share token\n      const request = await fetch(`https://api.anatalab.com/gateway/rosario/get_token/${stagingFormulaName}`)\n\n      const body = await request.json()\n      console.log(\"Formula is\", body.formulas)\n\n      setStagingFormulaName(body.formulas.title)\n      setFormulaType(body.formulas.formulaType)\n      stagingSteps = body.formulas.steps\n      statingTitle = body.formulas.title\n      stagingBackdrop = body.formulas.backdrop\n    }\n    else {\n      statingTitle = stagingFormulaName\n    }\n\n\n\n\n    function placeRandomToLayout(layout: RGLayout[], size: string): RGLayout {\n      // place it to nearest Line\n      // first, decide the random size, width height either be 1 or 2\n      const width = Math.random() > 0.5 ? 1 : 2\n      const height = Math.random() > 0.5 ? 1 : 2\n      const maxCols = GRID_SIZE[size]\n\n      // now read the layout, layout is an array of object, each object has x, y location and w, h as width and height, we need to find the nearest location that we can fit\n      // for (var row = 0; row < 20; row++){\n      //   for (var col = 0; col < GRID_SIZE[])\n      // }\n\n      // generate a mapping boolean first\n      var map: boolean[][] = []\n      for (var row = 0; row < 20; row++) {\n        for (var col = 0; col < maxCols; col++) {\n          map[row][col] = false\n        }\n      }\n      // map each current layout to map, also aware that each have width and height\n      layout.forEach((layoutItem) => {\n        for (var row = layoutItem.y; row < layoutItem.y + layoutItem.h; row++) {\n          for (var col = layoutItem.x; col < layoutItem.x + layoutItem.w; col++) {\n            map[row][col] = true\n          }\n        }\n      })\n\n\n\n\n      var candidateX, candidateY;\n      for (var row = 0; row < 20; row++) {\n        for (var col = 0; col < maxCols; col++) {\n          var possible = true;\n          // iterate through the layout, if there is any cell that is occupied, then it's not possible\n          for (var placementRow = 0; placementRow < height; placementRow++) {\n            for (var placementCol = 0; placementCol < width; placementCol++) {\n              // now\n              if (map[row + placementRow][col + placementCol] == true) {\n                possible = false\n              }\n\n            }\n          }\n\n          if (possible) {\n            alert('possible' + JSON.stringify({\n              i: formulaId,\n              x: candidateX,\n              y: candidateY,\n              w: width,\n              h: height\n            }))\n            return {\n              i: formulaId,\n              x: candidateX,\n              y: candidateY,\n              w: width,\n              h: height\n            }\n          }\n        }\n      }\n      alert()\n      return {\n        i: formulaId,\n        x: candidateX,\n        y: candidateY,\n        w: width,\n        h: height\n      }\n\n    }\n\n    setLayout(\n      produce(layout, (draft) => {\n        // draft[\"md\"]?.push({ i: formulaId, x: 1, y: 1, w: 1, h: 1 });\n        // draft[\"xs\"]?.push({ i: formulaId, x: 1, y: 1, w: 1, h: 1 });\n        // draft[\"sm\"]?.push({ i: formulaId, x: 1, y: 1, w: 1, h: 1 });\n\n        draft['md']?.push(placeRandomToLayout(layout['md'], 'md'))\n        draft['lg']?.push(placeRandomToLayout(layout['lg'], 'lg'))\n        draft['sm']?.push(placeRandomToLayout(layout['sm'], 'sm'))\n        draft['xs']?.push(placeRandomToLayout(layout['xs'], 'xs'))\n        draft['xxs']?.push(placeRandomToLayout(layout['xxs'], 'xxs'))\n      }),\n    );\n\n    setFormulas(\n      produce(formulas, (draft) => {\n        let backdrop: string = \"bg-white\";\n        if (formulaType == EnumFormulaType.Espresso) {\n          backdrop =\n            espressoGradient[\n            Math.floor(Math.random() * espressoGradient.length)\n            ];\n        } else if (formulaType == EnumFormulaType.PourOver) {\n          backdrop =\n            pourOverGradients[\n            Math.floor(Math.random() * pourOverGradients.length)\n            ];\n        } else if (formulaType == EnumFormulaType.Teapresso) {\n          backdrop =\n            teaGradients[Math.floor(Math.random() * teaGradients.length)];\n        }\n        const randomColors = [\"#f44336\", \"#e91e63\", \"#9c27b0\", \"#673ab7\", \"#3f51b5\", \"#2196f3\", \"#03a9f4\", \"#00bcd4\", \"#009688\", \"#4caf50\", \"#8bc34a\", \"#cddc39\", \"#ffeb3b\", \"#ffc107\", \"#ff9800\", \"#ff5722\", \"#795548\", \"#607d8b\"]\n        const formula = {\n          id: formulaId,\n          title: statingTitle,\n          text: \"New Formula\",\n          color: randomColors[Math.floor(Math.random() * randomColors.length)],\n          backdrop: stagingBackdrop || backdrop,\n          formulaType: formulaType,\n          // randomGradients[\n          //   Math.floor(Math.random() * randomGradients.length)\n          // ],\n          steps: stagingSteps,\n          buildupDuration: 1,\n          lossyWeight: 0,\n          maximumDuration: 0,\n          isShared: false,\n          category: \"\"\n        };\n        draft[formulaId] = formula;\n        console.log(\"fml/ create new\", formula);\n      }),\n    );\n\n    console.log(\"addFormula\", { layout, formulas });\n  }\n  function clickAddFormula() {\n    setAddFormulaOpen(true);\n  }\n\n  const renderedFormulas: React.ReactNode[] = [];\n  Object.values(formulas).forEach((fml: DisplayFormulaParam) => {\n    const formulaComponent = (\n      <div key={fml.id} className=\"grid-item__title \">\n        <div\n          className=\"h-full w-full\"\n        // https://github.com/react-grid-layout/react-grid-layout/issues/166\n        // onClick={() => {\n        //   alert(\"clicked\")\n        // }}\n        >\n          <ProfileCard\n            formulaId={fml.id}\n            onClick={() => {\n              registerFormulaClick(fml.id);\n            }}\n            onCancel={() => {\n              cancelFormulaClick(fml.id)\n            }}\n            onClickEdit={() => {\n              registerSelectedFormulaId(fml.id);\n              router.push(`/lab`);\n            }}\n          />\n        </div>\n      </div>\n    );\n\n    renderedFormulas.push(formulaComponent);\n  });\n\n  const { draggable } = useDeviceContext();\n  // if (draggable) {\n  //     renderedFormulas.push(\n  //       <div\n  //         key={\"add\"}\n  //         className=\"flex flex-col grid-item__title  bg-gray-300 cursor-pointer rounded-xl border  justify-center items-center hover:scale-105 transition-transform duration-200 hover:border-blue-500\"\n  //       >\n  //         <div\n  //           className=\"w-full h-full flex items-center justify-center drag-handle\"\n  //           onMouseDown={() => {\n  //             clickAddFormula();\n  //           }}\n  //           onTouchStart={() => {\n  //             clickAddFormula();\n  //           }}\n  //         >\n  //           <FaPlus size={32} className=\"text-white\" />\n  //         </div>\n  //         <button className=\"absolute top-0 right-0 drag-handle\">\n  //           <FiMove size={20} className=\"text-white m-1 drag-handle\" />\n  //         </button>\n  //       </div>\n  //     );\n\n  // }\n\n  const [stagingFormulaName, setStagingFormulaName] = useState(\"\");\n  const [formulaType, setFormulaType] = useState<EnumFormulaType>(\n    EnumFormulaType.Espresso,\n  );\n  const { t } = useTranslation();\n  return (\n    <>\n      <Head>\n        <title>☕ ROSARIO</title>\n      </Head>\n      <Layout>\n        <div className=\"dark:bg-gray h-full overflow-auto mt-4 bg-gray-200 bg-white bg-[linear-gradient(to_right,#80808012_1px,transparent_1px),linear-gradient(to_bottom,#80808012_1px,transparent_1px)] bg-[size:24px_24px]\">\n          <ResponsiveGridLayout\n            autoSize={true}\n            verticalCompact={false}\n            compactType={\"horizontal\"}\n            className=\"layout relative\"\n            layouts={layout}\n            isDraggable={draggable}\n            isResizable={draggable}\n            useCSSTransforms={false}\n            // resizeHandles={[\"se\"]}\n            \n            draggableHandle=\".drag-handle\"\n            breakpoints={{ lg: 1280, md: 992, sm: 767, xs: 430, xxs: 0 }}\n            cols={GRID_SIZE}\n            onLayoutChange={(layout: RGLayout[], layouts: Layouts) => {\n              console.log(\"layout.evt\", layout, layouts)\n              if (!isLoaded) {\n                setLoaded(true);\n                return;\n              }\n              // localStorage.setItem(\"fml-layout\", JSON.stringify(layouts));\n              setLayout(layouts);\n            }}\n            onDragStart={() => {\n              console.log(\"OnDragStart\");\n            }}\n          >\n            {renderedFormulas}\n          </ResponsiveGridLayout>\n        </div>\n        {addFormulaOpen && (\n          <Modal\n            title={t(\"Add Formula\")}\n            onClose={() => setAddFormulaOpen(false)}\n            primaryAction={{\n              label: \"OK\",\n              onPress: async () => {\n                setAddFormulaOpen(false);\n                await addFormula();\n              },\n            }}\n            secondaryAction={{\n              label: t(\"Cancel\"),\n              onPress: () => setAddFormulaOpen(false),\n            }}\n          >\n            <Stack space={4}>\n              <TextField\n                label={t(\"Formula Name or Share Token\")}\n                value={stagingFormulaName}\n                onChange={(e: string) => {\n                  setStagingFormulaName(e);\n                }}\n              />\n              <Tiles space={4} columns={3}>\n                <Button\n                  hierarchy=\"primary\"\n                  kind={\n                    formulaType == EnumFormulaType.Espresso\n                      ? \"solid\"\n                      : \"outline\"\n                  }\n                  label={t(\"Espresso\")}\n                  onPress={() => {\n                    setFormulaType(EnumFormulaType.Espresso);\n                  }}\n                // icon={() => <GiManualMeatGrinder />}\n                />\n                <Button\n                  hierarchy=\"primary\"\n                  kind={\n                    formulaType == EnumFormulaType.Teapresso\n                      ? \"solid\"\n                      : \"outline\"\n                  }\n                  label={t(\"Teapresso\")}\n                  onPress={() => {\n                    setFormulaType(EnumFormulaType.Teapresso);\n                  }}\n                // icon={() => <GiManualMeatGrinder />}\n                />\n                <Button\n                  hierarchy=\"primary\"\n                  kind={\n                    formulaType == EnumFormulaType.PourOver\n                      ? \"solid\"\n                      : \"outline\"\n                  }\n                  label={t(\"Pour Over\")}\n                  onPress={() => {\n                    setFormulaType(EnumFormulaType.PourOver);\n                  }}\n                // icon={() => <GiManualMeatGrinder />}\n                />\n              </Tiles>\n            </Stack>\n          </Modal>\n        )}\n      </Layout>\n    </>\n  );\n}\nexport default HomePage;\n"],"names":["window","__NEXT_P","push","Button","borderRadius","children","as","Component","containerClassName","borderClassName","duration","className","isRunning","backgroundColor","otherProps","cn","style","div","MovingBorder","rx","ry","pathRef","useRef","progress","useMotionValue","useAnimationFrame","time","length","current","getTotalLength","pxPerMillisecond","set","x","useTransform","val","getPointAtLength","y","transform","useMotionTemplate","svg","xmlns","preserveAspectRatio","width","height","rect","fill","ref","motion","position","top","left","display","ProfileCard","formulaId","onClickEdit","onCancel","onClick","formulas","draggable","progressReport","formulaFeedbacks","selectedFormulaId","useDeviceContext","setHeight","useState","elementRef","setFormulas","formulaUpdatedTimestamp","useEffect","clientHeight","setRunning","timeoutRef","formulaStartTimestamp","setFormulaStartTimestamp","Date","getTime","clearTimeout","setTimeout","normalView","button","onMouseDown","e","preventDefault","stopPropagation","onTouchStart","PiDotsThreeCircleVerticalThin","size","FiMove","IoIosCloseCircle","FaStopCircle","formulaType","EnumFormulaType","Espresso","GiCoffeeBeans","Teapresso","IoIosLeaf","PourOver","MdCoffeeMaker","h1","String","Math","round","title","LineChart","Array","from","_","index","name","flowrate","floor","random","animate","opacity","scale","initial","whileHover","transition","delay","type","stiffness","console","log","color","ResponsiveGridLayout","WidthProvider","Responsive","GRID_SIZE","lg","md","sm","xs","xxs","espressoGradient","teaGradients","pourOverGradients","isLoaded","setLoaded","addFormulaOpen","setAddFormulaOpen","layout","setLayout","router","useRouter","showToast","useToast","registerFormulaClick","registerSelectedFormulaId","renderedFormulas","Object","values","forEach","fml","formulaComponent","id","cancelFormulaClick","stagingFormulaName","setStagingFormulaName","setFormulaType","t","useTranslation","Head","Layout","autoSize","verticalCompact","compactType","layouts","isDraggable","isResizable","useCSSTransforms","draggableHandle","breakpoints","cols","onLayoutChange","onDragStart","Modal","onClose","primaryAction","label","onPress","async","uuid","stagingSteps","statingTitle","stagingBackdrop","match","request","fetch","body","json","steps","backdrop","placeRandomToLayout","maxCols","candidateX","candidateY","map","row","col","layoutItem","h","w","possible","placementRow","placementCol","alert","JSON","stringify","i","produce","draft","randomColors","formula","text","buildupDuration","lossyWeight","maximumDuration","isShared","category","addFormula","secondaryAction","Stack","space","TextField","value","onChange","Tiles","columns","hierarchy","kind"],"sourceRoot":""}