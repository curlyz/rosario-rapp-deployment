{"version":3,"file":"static/chunks/pages/index-c79e132b8062513c.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./src/components/ui/button.tsx","webpack://_N_E/./src/components/ui/carousel.tsx","webpack://_N_E/./src/pages/index.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","import React from 'react';\nimport Layout from './layout';\nimport AnataLABLogoBlack from '@/assets/logo/antl-black.png';\nimport AnataLABLogoWhite from '@/assets/logo/antl-white.png';\nimport { IoArrowForwardOutline } from \"react-icons/io5\";\nimport Image from 'next/image';\nimport { useRouter } from 'next/router';\n\nimport Head from 'next/head';\nimport { cn } from '@/util';\nimport { useState } from 'react';\nimport TopNavigationBar from '@/components/navigation/TopNavigationBar';\nimport useDeviceContext from '@/hooks/useDeviceContext';\n\nimport Slider from \"react-slick\";\nimport Landing1 from '@/assets/images/landing1.png'\nimport { AuroraBackground } from '@/components/ui/aurora-background';\nimport {\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselNext,\n  CarouselPrevious,\n} from \"@/components/ui/carousel\"\n\n\n\n\nconst NavigationBar = ({ white }: { white: boolean }) => {\n  const router = useRouter();\n\n  return (\n    <div>\n      <div className=\"absolute m-4 cursor-pointer\" onClick={() => router.push(\"/\")}>\n        <Image src={AnataLABLogoWhite} alt=\"AnataLAB Logo\" width={80} />\n      </div>\n      <button\n        className={cn(\n          \"group absolute top-0 right-0 m-4 p-4  rounded-xl flex-row flex items-center space-x-4 border\",\n          white ? \"border-white bg-black\" : \"border-black bg-white\"\n        )}\n        onClick={() => router.push(\"/rosario\")}\n      >\n        <h1>Go to Rosario</h1>\n        <IoArrowForwardOutline\n          className=\"group-hover:scale-150 transition-all duration-300\"\n        />\n      </button>\n    </div >\n\n  );\n};\n\nfunction SegmentCarousel() {\n  var settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n  };\n  return (\n    <Carousel className=\"size-full\">\n      <CarouselContent>\n        <CarouselItem>...</CarouselItem>\n        <CarouselItem>...</CarouselItem>\n        <CarouselItem>...</CarouselItem>\n      </CarouselContent>\n      <CarouselPrevious />\n      <CarouselNext />\n    </Carousel>\n  );\n}\n\nconst IndexPage = () => {\n  const router = useRouter();\n  const { darkMode } = useDeviceContext()\n  return (\n    <>\n      <Head>\n        <title>AnataLAB Coffee Machine</title>\n        <meta name=\"description\" content=\"Welcome to AnataLAB Coffee Machine\" />\n      </Head>\n      <TopNavigationBar />\n      {/* <AuroraBackground> */}\n\n        <div\n          className={cn(\n            \"w-screen h-screen\",\n            darkMode ? \"bg-black text-white\" : \"bg-white text-black\"\n          )}\n        >\n          {/* <SegmentCarousel /> */}\n        </div>\n\n      {/* </AuroraBackground> */}\n    </>\n  );\n};\nexport default IndexPage;\n"],"names":["window","__NEXT_P","push","buttonVariants","cva","variants","variant","default","destructive","outline","secondary","ghost","link","size","sm","lg","icon","defaultVariants","Button","React","ref","className","asChild","props","Comp","Slot","cn","displayName","CarouselContext","useCarousel","context","Error","orientation","opts","setApi","plugins","children","carouselRef","api","useEmblaCarousel","axis","canScrollPrev","setCanScrollPrev","canScrollNext","setCanScrollNext","onSelect","scrollPrev","scrollNext","handleKeyDown","event","key","preventDefault","on","off","Provider","value","div","onKeyDownCapture","role","aria-roledescription","disabled","onClick","ArrowLeft","span","ArrowRight","useRouter","darkMode","useDeviceContext","Head","title","meta","name","content","TopNavigationBar"],"sourceRoot":""}