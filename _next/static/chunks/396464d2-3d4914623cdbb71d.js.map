{"version":3,"file":"static/chunks/396464d2-3d4914623cdbb71d.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@sentry/replay/esm/index.js"],"sourcesContent":["import { _nullishCoalesce, _optionalChain } from '@sentry/utils';\nimport { addBreadcrumb, getClient, isSentryRequestUrl, getCurrentScope, addEventProcessor, prepareEvent, getIsolationScope, setContext, captureException, spanToJSON, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE } from '@sentry/core';\nimport { GLOBAL_OBJ, normalize, fill, htmlTreeAsString, browserPerformanceTimeOrigin, logger, uuid4, SENTRY_XHR_DATA_KEY, dropUndefinedKeys, stringMatchesSomePattern, addFetchInstrumentationHandler, addXhrInstrumentationHandler, addClickKeypressInstrumentationHandler, addHistoryInstrumentationHandler, createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader, updateRateLimits, isRateLimited, consoleSandbox, isBrowser } from '@sentry/utils';\nimport { addPerformanceInstrumentationHandler, addLcpInstrumentationHandler } from '@sentry-internal/tracing';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nconst WINDOW = GLOBAL_OBJ ;\n\nconst REPLAY_SESSION_KEY = 'sentryReplaySession';\nconst REPLAY_EVENT_NAME = 'replay_event';\nconst UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nconst SESSION_IDLE_PAUSE_DURATION = 300000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nconst SESSION_IDLE_EXPIRE_DURATION = 900000; // 15 minutes in ms\n\n/** Default flush delays */\nconst DEFAULT_FLUSH_MIN_DELAY = 5000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nconst DEFAULT_FLUSH_MAX_DELAY = 5500;\n\n/* How long to wait for error checkouts */\nconst BUFFER_CHECKOUT_TIME = 60000;\n\nconst RETRY_BASE_INTERVAL = 5000;\nconst RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nconst NETWORK_BODY_MAX_SIZE = 150000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nconst CONSOLE_ARG_MAX_SIZE = 5000;\n\n/* Min. time to wait before we consider something a slow click. */\nconst SLOW_CLICK_THRESHOLD = 3000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nconst SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nconst REPLAY_MAX_EVENT_BUFFER_SIZE = 20000000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nconst MIN_REPLAY_DURATION = 4999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nconst MIN_REPLAY_DURATION_LIMIT = 15000;\n\n/** The max. length of a replay. */\nconst MAX_REPLAY_DURATION = 3600000; // 60 minutes in ms;\n\nfunction _nullishCoalesce$1(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }function _optionalChain$5(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var NodeType$1;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType$1 || (NodeType$1 = {}));\n\nfunction isElement$1(n) {\n    return n.nodeType === n.ELEMENT_NODE;\n}\nfunction isShadowRoot(n) {\n    const host = _optionalChain$5([n, 'optionalAccess', _ => _.host]);\n    return Boolean(_optionalChain$5([host, 'optionalAccess', _2 => _2.shadowRoot]) === n);\n}\nfunction isNativeShadowDom(shadowRoot) {\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\n}\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\n    if (cssText.includes(' background-clip: text;') &&\n        !cssText.includes(' -webkit-background-clip: text;')) {\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\n    }\n    return cssText;\n}\nfunction escapeImportStatement(rule) {\n    const { cssText } = rule;\n    if (cssText.split('\"').length < 3)\n        return cssText;\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\n    if (rule.layerName === '') {\n        statement.push(`layer`);\n    }\n    else if (rule.layerName) {\n        statement.push(`layer(${rule.layerName})`);\n    }\n    if (rule.supportsText) {\n        statement.push(`supports(${rule.supportsText})`);\n    }\n    if (rule.media.length) {\n        statement.push(rule.media.mediaText);\n    }\n    return statement.join(' ') + ';';\n}\nfunction stringifyStylesheet(s) {\n    try {\n        const rules = s.rules || s.cssRules;\n        return rules\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\n            : null;\n    }\n    catch (error) {\n        return null;\n    }\n}\nfunction stringifyRule(rule) {\n    let importStringified;\n    if (isCSSImportRule(rule)) {\n        try {\n            importStringified =\n                stringifyStylesheet(rule.styleSheet) ||\n                    escapeImportStatement(rule);\n        }\n        catch (error) {\n        }\n    }\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\n        return fixSafariColons(rule.cssText);\n    }\n    return importStringified || rule.cssText;\n}\nfunction fixSafariColons(cssStringified) {\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\n    return cssStringified.replace(regex, '$1\\\\$2');\n}\nfunction isCSSImportRule(rule) {\n    return 'styleSheet' in rule;\n}\nfunction isCSSStyleRule(rule) {\n    return 'selectorText' in rule;\n}\nclass Mirror {\n    constructor() {\n        this.idNodeMap = new Map();\n        this.nodeMetaMap = new WeakMap();\n    }\n    getId(n) {\n        if (!n)\n            return -1;\n        const id = _optionalChain$5([this, 'access', _3 => _3.getMeta, 'call', _4 => _4(n), 'optionalAccess', _5 => _5.id]);\n        return _nullishCoalesce$1(id, () => ( -1));\n    }\n    getNode(id) {\n        return this.idNodeMap.get(id) || null;\n    }\n    getIds() {\n        return Array.from(this.idNodeMap.keys());\n    }\n    getMeta(n) {\n        return this.nodeMetaMap.get(n) || null;\n    }\n    removeNodeFromMap(n) {\n        const id = this.getId(n);\n        this.idNodeMap.delete(id);\n        if (n.childNodes) {\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\n        }\n    }\n    has(id) {\n        return this.idNodeMap.has(id);\n    }\n    hasNode(node) {\n        return this.nodeMetaMap.has(node);\n    }\n    add(n, meta) {\n        const id = meta.id;\n        this.idNodeMap.set(id, n);\n        this.nodeMetaMap.set(n, meta);\n    }\n    replace(id, n) {\n        const oldNode = this.getNode(id);\n        if (oldNode) {\n            const meta = this.nodeMetaMap.get(oldNode);\n            if (meta)\n                this.nodeMetaMap.set(n, meta);\n        }\n        this.idNodeMap.set(id, n);\n    }\n    reset() {\n        this.idNodeMap = new Map();\n        this.nodeMetaMap = new WeakMap();\n    }\n}\nfunction createMirror() {\n    return new Mirror();\n}\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\n    if (tagName === 'OPTION') {\n        tagName = 'SELECT';\n    }\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\n        (type && maskInputOptions[type]) ||\n        type === 'password' ||\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\n}\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\n    let text = value || '';\n    if (!isMasked) {\n        return text;\n    }\n    if (maskInputFn) {\n        text = maskInputFn(text, element);\n    }\n    return '*'.repeat(text.length);\n}\nfunction toLowerCase(str) {\n    return str.toLowerCase();\n}\nfunction toUpperCase(str) {\n    return str.toUpperCase();\n}\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\nfunction is2DCanvasBlank(canvas) {\n    const ctx = canvas.getContext('2d');\n    if (!ctx)\n        return true;\n    const chunkSize = 50;\n    for (let x = 0; x < canvas.width; x += chunkSize) {\n        for (let y = 0; y < canvas.height; y += chunkSize) {\n            const getImageData = ctx.getImageData;\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\n                : getImageData;\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\n            if (pixelBuffer.some((pixel) => pixel !== 0))\n                return false;\n        }\n    }\n    return true;\n}\nfunction getInputType(element) {\n    const type = element.type;\n    return element.hasAttribute('data-rr-is-password')\n        ? 'password'\n        : type\n            ?\n                toLowerCase(type)\n            : null;\n}\nfunction getInputValue(el, tagName, type) {\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\n        return el.getAttribute('value') || '';\n    }\n    return el.value;\n}\n\nlet _id = 1;\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\nconst IGNORED_NODE = -2;\nfunction genId() {\n    return _id++;\n}\nfunction getValidTagName(element) {\n    if (element instanceof HTMLFormElement) {\n        return 'form';\n    }\n    const processedTagName = toLowerCase(element.tagName);\n    if (tagNameRegex.test(processedTagName)) {\n        return 'div';\n    }\n    return processedTagName;\n}\nfunction extractOrigin(url) {\n    let origin = '';\n    if (url.indexOf('//') > -1) {\n        origin = url.split('/').slice(0, 3).join('/');\n    }\n    else {\n        origin = url.split('/')[0];\n    }\n    origin = origin.split('?')[0];\n    return origin;\n}\nlet canvasService;\nlet canvasCtx;\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\nconst URL_WWW_MATCH = /^www\\..*/i;\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\nfunction absoluteToStylesheet(cssText, href) {\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\n        const filePath = path1 || path2 || path3;\n        const maybeQuote = quote1 || quote2 || '';\n        if (!filePath) {\n            return origin;\n        }\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\n        }\n        if (DATA_URI.test(filePath)) {\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\n        }\n        if (filePath[0] === '/') {\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\n        }\n        const stack = href.split('/');\n        const parts = filePath.split('/');\n        stack.pop();\n        for (const part of parts) {\n            if (part === '.') {\n                continue;\n            }\n            else if (part === '..') {\n                stack.pop();\n            }\n            else {\n                stack.push(part);\n            }\n        }\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\n    });\n}\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\n    if (attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    let pos = 0;\n    function collectCharacters(regEx) {\n        let chars;\n        const match = regEx.exec(attributeValue.substring(pos));\n        if (match) {\n            chars = match[0];\n            pos += chars.length;\n            return chars;\n        }\n        return '';\n    }\n    const output = [];\n    while (true) {\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\n        if (pos >= attributeValue.length) {\n            break;\n        }\n        let url = collectCharacters(SRCSET_NOT_SPACES);\n        if (url.slice(-1) === ',') {\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\n            output.push(url);\n        }\n        else {\n            let descriptorsStr = '';\n            url = absoluteToDoc(doc, url);\n            let inParens = false;\n            while (true) {\n                const c = attributeValue.charAt(pos);\n                if (c === '') {\n                    output.push((url + descriptorsStr).trim());\n                    break;\n                }\n                else if (!inParens) {\n                    if (c === ',') {\n                        pos += 1;\n                        output.push((url + descriptorsStr).trim());\n                        break;\n                    }\n                    else if (c === '(') {\n                        inParens = true;\n                    }\n                }\n                else {\n                    if (c === ')') {\n                        inParens = false;\n                    }\n                }\n                descriptorsStr += c;\n                pos += 1;\n            }\n        }\n    }\n    return output.join(', ');\n}\nfunction absoluteToDoc(doc, attributeValue) {\n    if (!attributeValue || attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    const a = doc.createElement('a');\n    a.href = attributeValue;\n    return a.href;\n}\nfunction isSVGElement(el) {\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\n}\nfunction getHref() {\n    const a = document.createElement('a');\n    a.href = '';\n    return a.href;\n}\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\n    if (!value) {\n        return value;\n    }\n    if (name === 'src' ||\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'xlink:href' && value[0] !== '#') {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'background' &&\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'srcset') {\n        return getAbsoluteSrcsetString(doc, value);\n    }\n    else if (name === 'style') {\n        return absoluteToStylesheet(value, getHref());\n    }\n    else if (tagName === 'object' && name === 'data') {\n        return absoluteToDoc(doc, value);\n    }\n    if (typeof maskAttributeFn === 'function') {\n        return maskAttributeFn(name, value, element);\n    }\n    return value;\n}\nfunction ignoreAttribute(tagName, name, _value) {\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\n}\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\n    try {\n        if (unblockSelector && element.matches(unblockSelector)) {\n            return false;\n        }\n        if (typeof blockClass === 'string') {\n            if (element.classList.contains(blockClass)) {\n                return true;\n            }\n        }\n        else {\n            for (let eIndex = element.classList.length; eIndex--;) {\n                const className = element.classList[eIndex];\n                if (blockClass.test(className)) {\n                    return true;\n                }\n            }\n        }\n        if (blockSelector) {\n            return element.matches(blockSelector);\n        }\n    }\n    catch (e) {\n    }\n    return false;\n}\nfunction elementClassMatchesRegex(el, regex) {\n    for (let eIndex = el.classList.length; eIndex--;) {\n        const className = el.classList[eIndex];\n        if (regex.test(className)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\n    if (!node)\n        return -1;\n    if (node.nodeType !== node.ELEMENT_NODE)\n        return -1;\n    if (distance > limit)\n        return -1;\n    if (matchPredicate(node))\n        return distance;\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\n}\nfunction createMatchPredicate(className, selector) {\n    return (node) => {\n        const el = node;\n        if (el === null)\n            return false;\n        try {\n            if (className) {\n                if (typeof className === 'string') {\n                    if (el.matches(`.${className}`))\n                        return true;\n                }\n                else if (elementClassMatchesRegex(el, className)) {\n                    return true;\n                }\n            }\n            if (selector && el.matches(selector))\n                return true;\n            return false;\n        }\n        catch (e2) {\n            return false;\n        }\n    };\n}\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\n    try {\n        const el = node.nodeType === node.ELEMENT_NODE\n            ? node\n            : node.parentElement;\n        if (el === null)\n            return false;\n        if (el.tagName === 'INPUT') {\n            const autocomplete = el.getAttribute('autocomplete');\n            const disallowedAutocompleteValues = [\n                'current-password',\n                'new-password',\n                'cc-number',\n                'cc-exp',\n                'cc-exp-month',\n                'cc-exp-year',\n                'cc-csc',\n            ];\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\n                return true;\n            }\n        }\n        let maskDistance = -1;\n        let unmaskDistance = -1;\n        if (maskAllText) {\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\n            if (unmaskDistance < 0) {\n                return true;\n            }\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\n        }\n        else {\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\n            if (maskDistance < 0) {\n                return false;\n            }\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\n        }\n        return maskDistance >= 0\n            ? unmaskDistance >= 0\n                ? maskDistance <= unmaskDistance\n                : true\n            : unmaskDistance >= 0\n                ? false\n                : !!maskAllText;\n    }\n    catch (e) {\n    }\n    return !!maskAllText;\n}\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\n    const win = iframeEl.contentWindow;\n    if (!win) {\n        return;\n    }\n    let fired = false;\n    let readyState;\n    try {\n        readyState = win.document.readyState;\n    }\n    catch (error) {\n        return;\n    }\n    if (readyState !== 'complete') {\n        const timer = setTimeout(() => {\n            if (!fired) {\n                listener();\n                fired = true;\n            }\n        }, iframeLoadTimeout);\n        iframeEl.addEventListener('load', () => {\n            clearTimeout(timer);\n            fired = true;\n            listener();\n        });\n        return;\n    }\n    const blankUrl = 'about:blank';\n    if (win.location.href !== blankUrl ||\n        iframeEl.src === blankUrl ||\n        iframeEl.src === '') {\n        setTimeout(listener, 0);\n        return iframeEl.addEventListener('load', listener);\n    }\n    iframeEl.addEventListener('load', listener);\n}\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\n    let fired = false;\n    let styleSheetLoaded;\n    try {\n        styleSheetLoaded = link.sheet;\n    }\n    catch (error) {\n        return;\n    }\n    if (styleSheetLoaded)\n        return;\n    const timer = setTimeout(() => {\n        if (!fired) {\n            listener();\n            fired = true;\n        }\n    }, styleSheetLoadTimeout);\n    link.addEventListener('load', () => {\n        clearTimeout(timer);\n        fired = true;\n        listener();\n    });\n}\nfunction serializeNode(n, options) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\n    const rootId = getRootId(doc, mirror);\n    switch (n.nodeType) {\n        case n.DOCUMENT_NODE:\n            if (n.compatMode !== 'CSS1Compat') {\n                return {\n                    type: NodeType$1.Document,\n                    childNodes: [],\n                    compatMode: n.compatMode,\n                };\n            }\n            else {\n                return {\n                    type: NodeType$1.Document,\n                    childNodes: [],\n                };\n            }\n        case n.DOCUMENT_TYPE_NODE:\n            return {\n                type: NodeType$1.DocumentType,\n                name: n.name,\n                publicId: n.publicId,\n                systemId: n.systemId,\n                rootId,\n            };\n        case n.ELEMENT_NODE:\n            return serializeElementNode(n, {\n                doc,\n                blockClass,\n                blockSelector,\n                unblockSelector,\n                inlineStylesheet,\n                maskAttributeFn,\n                maskInputOptions,\n                maskInputFn,\n                dataURLOptions,\n                inlineImages,\n                recordCanvas,\n                keepIframeSrcFn,\n                newlyAddedElement,\n                rootId,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n            });\n        case n.TEXT_NODE:\n            return serializeTextNode(n, {\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                maskTextFn,\n                maskInputOptions,\n                maskInputFn,\n                rootId,\n            });\n        case n.CDATA_SECTION_NODE:\n            return {\n                type: NodeType$1.CDATA,\n                textContent: '',\n                rootId,\n            };\n        case n.COMMENT_NODE:\n            return {\n                type: NodeType$1.Comment,\n                textContent: n.textContent || '',\n                rootId,\n            };\n        default:\n            return false;\n    }\n}\nfunction getRootId(doc, mirror) {\n    if (!mirror.hasNode(doc))\n        return undefined;\n    const docId = mirror.getId(doc);\n    return docId === 1 ? undefined : docId;\n}\nfunction serializeTextNode(n, options) {\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\n    const parentTagName = n.parentNode && n.parentNode.tagName;\n    let textContent = n.textContent;\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\n    if (isStyle && textContent) {\n        try {\n            if (n.nextSibling || n.previousSibling) {\n            }\n            else if (_optionalChain$5([n, 'access', _6 => _6.parentNode, 'access', _7 => _7.sheet, 'optionalAccess', _8 => _8.cssRules])) {\n                textContent = stringifyStylesheet(n.parentNode.sheet);\n            }\n        }\n        catch (err) {\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\n        }\n        textContent = absoluteToStylesheet(textContent, getHref());\n    }\n    if (isScript) {\n        textContent = 'SCRIPT_PLACEHOLDER';\n    }\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\n        textContent = maskTextFn\n            ? maskTextFn(textContent)\n            : textContent.replace(/[\\S]/g, '*');\n    }\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\n        textContent = maskInputFn\n            ? maskInputFn(textContent, n.parentNode)\n            : textContent.replace(/[\\S]/g, '*');\n    }\n    if (parentTagName === 'OPTION' && textContent) {\n        const isInputMasked = shouldMaskInput({\n            type: null,\n            tagName: parentTagName,\n            maskInputOptions,\n        });\n        textContent = maskInputValue({\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\n            element: n,\n            value: textContent,\n            maskInputFn,\n        });\n    }\n    return {\n        type: NodeType$1.Text,\n        textContent: textContent || '',\n        isStyle,\n        rootId,\n    };\n}\nfunction serializeElementNode(n, options) {\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\n    const tagName = getValidTagName(n);\n    let attributes = {};\n    const len = n.attributes.length;\n    for (let i = 0; i < len; i++) {\n        const attr = n.attributes[i];\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\n        }\n    }\n    if (tagName === 'link' && inlineStylesheet) {\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\n            return s.href === n.href;\n        });\n        let cssText = null;\n        if (stylesheet) {\n            cssText = stringifyStylesheet(stylesheet);\n        }\n        if (cssText) {\n            delete attributes.rel;\n            delete attributes.href;\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\n        }\n    }\n    if (tagName === 'style' &&\n        n.sheet &&\n        !(n.innerText || n.textContent || '').trim().length) {\n        const cssText = stringifyStylesheet(n.sheet);\n        if (cssText) {\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\n        }\n    }\n    if (tagName === 'input' ||\n        tagName === 'textarea' ||\n        tagName === 'select' ||\n        tagName === 'option') {\n        const el = n;\n        const type = getInputType(el);\n        const value = getInputValue(el, toUpperCase(tagName), type);\n        const checked = el.checked;\n        if (type !== 'submit' && type !== 'button' && value) {\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\n                type,\n                tagName: toUpperCase(tagName),\n                maskInputOptions,\n            }));\n            attributes.value = maskInputValue({\n                isMasked: forceMask,\n                element: el,\n                value,\n                maskInputFn,\n            });\n        }\n        if (checked) {\n            attributes.checked = checked;\n        }\n    }\n    if (tagName === 'option') {\n        if (n.selected && !maskInputOptions['select']) {\n            attributes.selected = true;\n        }\n        else {\n            delete attributes.selected;\n        }\n    }\n    if (tagName === 'canvas' && recordCanvas) {\n        if (n.__context === '2d') {\n            if (!is2DCanvasBlank(n)) {\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            }\n        }\n        else if (!('__context' in n)) {\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            const blankCanvas = document.createElement('canvas');\n            blankCanvas.width = n.width;\n            blankCanvas.height = n.height;\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            if (canvasDataURL !== blankCanvasDataURL) {\n                attributes.rr_dataURL = canvasDataURL;\n            }\n        }\n    }\n    if (tagName === 'img' && inlineImages) {\n        if (!canvasService) {\n            canvasService = doc.createElement('canvas');\n            canvasCtx = canvasService.getContext('2d');\n        }\n        const image = n;\n        const oldValue = image.crossOrigin;\n        image.crossOrigin = 'anonymous';\n        const recordInlineImage = () => {\n            image.removeEventListener('load', recordInlineImage);\n            try {\n                canvasService.width = image.naturalWidth;\n                canvasService.height = image.naturalHeight;\n                canvasCtx.drawImage(image, 0, 0);\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            }\n            catch (err) {\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\n            }\n            oldValue\n                ? (attributes.crossOrigin = oldValue)\n                : image.removeAttribute('crossorigin');\n        };\n        if (image.complete && image.naturalWidth !== 0)\n            recordInlineImage();\n        else\n            image.addEventListener('load', recordInlineImage);\n    }\n    if (tagName === 'audio' || tagName === 'video') {\n        attributes.rr_mediaState = n.paused\n            ? 'paused'\n            : 'played';\n        attributes.rr_mediaCurrentTime = n.currentTime;\n    }\n    if (!newlyAddedElement) {\n        if (n.scrollLeft) {\n            attributes.rr_scrollLeft = n.scrollLeft;\n        }\n        if (n.scrollTop) {\n            attributes.rr_scrollTop = n.scrollTop;\n        }\n    }\n    if (needBlock) {\n        const { width, height } = n.getBoundingClientRect();\n        attributes = {\n            class: attributes.class,\n            rr_width: `${width}px`,\n            rr_height: `${height}px`,\n        };\n    }\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\n        if (!n.contentDocument) {\n            attributes.rr_src = attributes.src;\n        }\n        delete attributes.src;\n    }\n    let isCustomElement;\n    try {\n        if (customElements.get(tagName))\n            isCustomElement = true;\n    }\n    catch (e) {\n    }\n    return {\n        type: NodeType$1.Element,\n        tagName,\n        attributes,\n        childNodes: [],\n        isSVG: isSVGElement(n) || undefined,\n        needBlock,\n        rootId,\n        isCustom: isCustomElement,\n    };\n}\nfunction lowerIfExists(maybeAttr) {\n    if (maybeAttr === undefined || maybeAttr === null) {\n        return '';\n    }\n    else {\n        return maybeAttr.toLowerCase();\n    }\n}\nfunction slimDOMExcluded(sn, slimDOMOptions) {\n    if (slimDOMOptions.comment && sn.type === NodeType$1.Comment) {\n        return true;\n    }\n    else if (sn.type === NodeType$1.Element) {\n        if (slimDOMOptions.script &&\n            (sn.tagName === 'script' ||\n                (sn.tagName === 'link' &&\n                    (sn.attributes.rel === 'preload' ||\n                        sn.attributes.rel === 'modulepreload') &&\n                    sn.attributes.as === 'script') ||\n                (sn.tagName === 'link' &&\n                    sn.attributes.rel === 'prefetch' &&\n                    typeof sn.attributes.href === 'string' &&\n                    sn.attributes.href.endsWith('.js')))) {\n            return true;\n        }\n        else if (slimDOMOptions.headFavicon &&\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\n                (sn.tagName === 'meta' &&\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\n            return true;\n        }\n        else if (sn.tagName === 'meta') {\n            if (slimDOMOptions.headMetaDescKeywords &&\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaSocial &&\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaRobots &&\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaHttpEquiv &&\n                sn.attributes['http-equiv'] !== undefined) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaAuthorship &&\n                (lowerIfExists(sn.attributes.name) === 'author' ||\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaVerification &&\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction serializeNodeWithId(n, options) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\n    let { preserveWhiteSpace = true } = options;\n    const _serializedNode = serializeNode(n, {\n        doc,\n        mirror,\n        blockClass,\n        blockSelector,\n        maskAllText,\n        unblockSelector,\n        maskTextClass,\n        unmaskTextClass,\n        maskTextSelector,\n        unmaskTextSelector,\n        inlineStylesheet,\n        maskInputOptions,\n        maskAttributeFn,\n        maskTextFn,\n        maskInputFn,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        keepIframeSrcFn,\n        newlyAddedElement,\n    });\n    if (!_serializedNode) {\n        console.warn(n, 'not serialized');\n        return null;\n    }\n    let id;\n    if (mirror.hasNode(n)) {\n        id = mirror.getId(n);\n    }\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\n        (!preserveWhiteSpace &&\n            _serializedNode.type === NodeType$1.Text &&\n            !_serializedNode.isStyle &&\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\n        id = IGNORED_NODE;\n    }\n    else {\n        id = genId();\n    }\n    const serializedNode = Object.assign(_serializedNode, { id });\n    mirror.add(n, serializedNode);\n    if (id === IGNORED_NODE) {\n        return null;\n    }\n    if (onSerialize) {\n        onSerialize(n);\n    }\n    let recordChild = !skipChild;\n    if (serializedNode.type === NodeType$1.Element) {\n        recordChild = recordChild && !serializedNode.needBlock;\n        delete serializedNode.needBlock;\n        const shadowRoot = n.shadowRoot;\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\n            serializedNode.isShadowHost = true;\n    }\n    if ((serializedNode.type === NodeType$1.Document ||\n        serializedNode.type === NodeType$1.Element) &&\n        recordChild) {\n        if (slimDOMOptions.headWhitespace &&\n            serializedNode.type === NodeType$1.Element &&\n            serializedNode.tagName === 'head') {\n            preserveWhiteSpace = false;\n        }\n        const bypassOptions = {\n            doc,\n            mirror,\n            blockClass,\n            blockSelector,\n            maskAllText,\n            unblockSelector,\n            maskTextClass,\n            unmaskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            skipChild,\n            inlineStylesheet,\n            maskInputOptions,\n            maskAttributeFn,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            onStylesheetLoad,\n            stylesheetLoadTimeout,\n            keepIframeSrcFn,\n        };\n        for (const childN of Array.from(n.childNodes)) {\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n            if (serializedChildNode) {\n                serializedNode.childNodes.push(serializedChildNode);\n            }\n        }\n        if (isElement$1(n) && n.shadowRoot) {\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n                if (serializedChildNode) {\n                    isNativeShadowDom(n.shadowRoot) &&\n                        (serializedChildNode.isShadow = true);\n                    serializedNode.childNodes.push(serializedChildNode);\n                }\n            }\n        }\n    }\n    if (n.parentNode &&\n        isShadowRoot(n.parentNode) &&\n        isNativeShadowDom(n.parentNode)) {\n        serializedNode.isShadow = true;\n    }\n    if (serializedNode.type === NodeType$1.Element &&\n        serializedNode.tagName === 'iframe') {\n        onceIframeLoaded(n, () => {\n            const iframeDoc = n.contentDocument;\n            if (iframeDoc && onIframeLoad) {\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\n                    doc: iframeDoc,\n                    mirror,\n                    blockClass,\n                    blockSelector,\n                    unblockSelector,\n                    maskAllText,\n                    maskTextClass,\n                    unmaskTextClass,\n                    maskTextSelector,\n                    unmaskTextSelector,\n                    skipChild: false,\n                    inlineStylesheet,\n                    maskInputOptions,\n                    maskAttributeFn,\n                    maskTextFn,\n                    maskInputFn,\n                    slimDOMOptions,\n                    dataURLOptions,\n                    inlineImages,\n                    recordCanvas,\n                    preserveWhiteSpace,\n                    onSerialize,\n                    onIframeLoad,\n                    iframeLoadTimeout,\n                    onStylesheetLoad,\n                    stylesheetLoadTimeout,\n                    keepIframeSrcFn,\n                });\n                if (serializedIframeNode) {\n                    onIframeLoad(n, serializedIframeNode);\n                }\n            }\n        }, iframeLoadTimeout);\n    }\n    if (serializedNode.type === NodeType$1.Element &&\n        serializedNode.tagName === 'link' &&\n        serializedNode.attributes.rel === 'stylesheet') {\n        onceStylesheetLoaded(n, () => {\n            if (onStylesheetLoad) {\n                const serializedLinkNode = serializeNodeWithId(n, {\n                    doc,\n                    mirror,\n                    blockClass,\n                    blockSelector,\n                    unblockSelector,\n                    maskAllText,\n                    maskTextClass,\n                    unmaskTextClass,\n                    maskTextSelector,\n                    unmaskTextSelector,\n                    skipChild: false,\n                    inlineStylesheet,\n                    maskInputOptions,\n                    maskAttributeFn,\n                    maskTextFn,\n                    maskInputFn,\n                    slimDOMOptions,\n                    dataURLOptions,\n                    inlineImages,\n                    recordCanvas,\n                    preserveWhiteSpace,\n                    onSerialize,\n                    onIframeLoad,\n                    iframeLoadTimeout,\n                    onStylesheetLoad,\n                    stylesheetLoadTimeout,\n                    keepIframeSrcFn,\n                });\n                if (serializedLinkNode) {\n                    onStylesheetLoad(n, serializedLinkNode);\n                }\n            }\n        }, stylesheetLoadTimeout);\n    }\n    return serializedNode;\n}\nfunction snapshot(n, options) {\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\n    const maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n        }\n        : maskAllInputs === false\n            ? {}\n            : maskAllInputs;\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\n        ?\n            {\n                script: true,\n                comment: true,\n                headFavicon: true,\n                headWhitespace: true,\n                headMetaDescKeywords: slimDOM === 'all',\n                headMetaSocial: true,\n                headMetaRobots: true,\n                headMetaHttpEquiv: true,\n                headMetaAuthorship: true,\n                headMetaVerification: true,\n            }\n        : slimDOM === false\n            ? {}\n            : slimDOM;\n    return serializeNodeWithId(n, {\n        doc: n,\n        mirror,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        maskAllText,\n        maskTextClass,\n        unmaskTextClass,\n        maskTextSelector,\n        unmaskTextSelector,\n        skipChild: false,\n        inlineStylesheet,\n        maskInputOptions,\n        maskAttributeFn,\n        maskTextFn,\n        maskInputFn,\n        slimDOMOptions,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        preserveWhiteSpace,\n        onSerialize,\n        onIframeLoad,\n        iframeLoadTimeout,\n        onStylesheetLoad,\n        stylesheetLoadTimeout,\n        keepIframeSrcFn,\n        newlyAddedElement: false,\n    });\n}\n\nfunction _optionalChain$4(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nfunction on(type, fn, target = document) {\n    const options = { capture: true, passive: true };\n    target.addEventListener(type, fn, options);\n    return () => target.removeEventListener(type, fn, options);\n}\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\n    '\\r\\n' +\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\n    '\\r\\n' +\n    'or you can use record.mirror to access the mirror instance during recording.';\nlet _mirror = {\n    map: {},\n    getId() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return -1;\n    },\n    getNode() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return null;\n    },\n    removeNodeFromMap() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n    has() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return false;\n    },\n    reset() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n};\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\n    _mirror = new Proxy(_mirror, {\n        get(target, prop, receiver) {\n            if (prop === 'map') {\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n            }\n            return Reflect.get(target, prop, receiver);\n        },\n    });\n}\nfunction throttle$1(func, wait, options = {}) {\n    let timeout = null;\n    let previous = 0;\n    return function (...args) {\n        const now = Date.now();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        const remaining = wait - (now - previous);\n        const context = this;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(() => {\n                previous = options.leading === false ? 0 : Date.now();\n                timeout = null;\n                func.apply(context, args);\n            }, remaining);\n        }\n    };\n}\nfunction hookSetter(target, key, d, isRevoked, win = window) {\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\n    win.Object.defineProperty(target, key, isRevoked\n        ? d\n        : {\n            set(value) {\n                setTimeout(() => {\n                    d.set.call(this, value);\n                }, 0);\n                if (original && original.set) {\n                    original.set.call(this, value);\n                }\n            },\n        });\n    return () => hookSetter(target, key, original || {}, true);\n}\nfunction patch(source, name, replacement) {\n    try {\n        if (!(name in source)) {\n            return () => {\n            };\n        }\n        const original = source[name];\n        const wrapped = replacement(original);\n        if (typeof wrapped === 'function') {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __rrweb_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n            });\n        }\n        source[name] = wrapped;\n        return () => {\n            source[name] = original;\n        };\n    }\n    catch (e2) {\n        return () => {\n        };\n    }\n}\nlet nowTimestamp = Date.now;\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) {\n    nowTimestamp = () => new Date().getTime();\n}\nfunction getWindowScroll(win) {\n    const doc = win.document;\n    return {\n        left: doc.scrollingElement\n            ? doc.scrollingElement.scrollLeft\n            : win.pageXOffset !== undefined\n                ? win.pageXOffset\n                : _optionalChain$4([doc, 'optionalAccess', _ => _.documentElement, 'access', _2 => _2.scrollLeft]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _3 => _3.body, 'optionalAccess', _4 => _4.parentElement, 'optionalAccess', _5 => _5.scrollLeft]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _6 => _6.body, 'optionalAccess', _7 => _7.scrollLeft]) ||\n                    0,\n        top: doc.scrollingElement\n            ? doc.scrollingElement.scrollTop\n            : win.pageYOffset !== undefined\n                ? win.pageYOffset\n                : _optionalChain$4([doc, 'optionalAccess', _8 => _8.documentElement, 'access', _9 => _9.scrollTop]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _10 => _10.body, 'optionalAccess', _11 => _11.parentElement, 'optionalAccess', _12 => _12.scrollTop]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _13 => _13.body, 'optionalAccess', _14 => _14.scrollTop]) ||\n                    0,\n    };\n}\nfunction getWindowHeight() {\n    return (window.innerHeight ||\n        (document.documentElement && document.documentElement.clientHeight) ||\n        (document.body && document.body.clientHeight));\n}\nfunction getWindowWidth() {\n    return (window.innerWidth ||\n        (document.documentElement && document.documentElement.clientWidth) ||\n        (document.body && document.body.clientWidth));\n}\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\n    if (!node) {\n        return false;\n    }\n    const el = node.nodeType === node.ELEMENT_NODE\n        ? node\n        : node.parentElement;\n    if (!el)\n        return false;\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\n    if (!checkAncestors) {\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\n        return blockedPredicate(el) && !isUnblocked;\n    }\n    const blockDistance = distanceToMatch(el, blockedPredicate);\n    let unblockDistance = -1;\n    if (blockDistance < 0) {\n        return false;\n    }\n    if (unblockSelector) {\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\n    }\n    if (blockDistance > -1 && unblockDistance < 0) {\n        return true;\n    }\n    return blockDistance < unblockDistance;\n}\nfunction isSerialized(n, mirror) {\n    return mirror.getId(n) !== -1;\n}\nfunction isIgnored(n, mirror) {\n    return mirror.getId(n) === IGNORED_NODE;\n}\nfunction isAncestorRemoved(target, mirror) {\n    if (isShadowRoot(target)) {\n        return false;\n    }\n    const id = mirror.getId(target);\n    if (!mirror.has(id)) {\n        return true;\n    }\n    if (target.parentNode &&\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\n        return false;\n    }\n    if (!target.parentNode) {\n        return true;\n    }\n    return isAncestorRemoved(target.parentNode, mirror);\n}\nfunction legacy_isTouchEvent(event) {\n    return Boolean(event.changedTouches);\n}\nfunction polyfill(win = window) {\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\n        win.NodeList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\n        win.DOMTokenList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if (!Node.prototype.contains) {\n        Node.prototype.contains = (...args) => {\n            let node = args[0];\n            if (!(0 in args)) {\n                throw new TypeError('1 argument is required');\n            }\n            do {\n                if (this === node) {\n                    return true;\n                }\n            } while ((node = node && node.parentNode));\n            return false;\n        };\n    }\n}\nfunction isSerializedIframe(n, mirror) {\n    return Boolean(n.nodeName === 'IFRAME' && mirror.getMeta(n));\n}\nfunction isSerializedStylesheet(n, mirror) {\n    return Boolean(n.nodeName === 'LINK' &&\n        n.nodeType === n.ELEMENT_NODE &&\n        n.getAttribute &&\n        n.getAttribute('rel') === 'stylesheet' &&\n        mirror.getMeta(n));\n}\nfunction hasShadowRoot(n) {\n    return Boolean(_optionalChain$4([n, 'optionalAccess', _18 => _18.shadowRoot]));\n}\nclass StyleSheetMirror {\n    constructor() {\n        this.id = 1;\n        this.styleIDMap = new WeakMap();\n        this.idStyleMap = new Map();\n    }\n    getId(stylesheet) {\n        return _nullishCoalesce(this.styleIDMap.get(stylesheet), () => ( -1));\n    }\n    has(stylesheet) {\n        return this.styleIDMap.has(stylesheet);\n    }\n    add(stylesheet, id) {\n        if (this.has(stylesheet))\n            return this.getId(stylesheet);\n        let newId;\n        if (id === undefined) {\n            newId = this.id++;\n        }\n        else\n            newId = id;\n        this.styleIDMap.set(stylesheet, newId);\n        this.idStyleMap.set(newId, stylesheet);\n        return newId;\n    }\n    getStyle(id) {\n        return this.idStyleMap.get(id) || null;\n    }\n    reset() {\n        this.styleIDMap = new WeakMap();\n        this.idStyleMap = new Map();\n        this.id = 1;\n    }\n    generateId() {\n        return this.id++;\n    }\n}\nfunction getShadowHost(n) {\n    let shadowHost = null;\n    if (_optionalChain$4([n, 'access', _19 => _19.getRootNode, 'optionalCall', _20 => _20(), 'optionalAccess', _21 => _21.nodeType]) === Node.DOCUMENT_FRAGMENT_NODE &&\n        n.getRootNode().host)\n        shadowHost = n.getRootNode().host;\n    return shadowHost;\n}\nfunction getRootShadowHost(n) {\n    let rootShadowHost = n;\n    let shadowHost;\n    while ((shadowHost = getShadowHost(rootShadowHost)))\n        rootShadowHost = shadowHost;\n    return rootShadowHost;\n}\nfunction shadowHostInDom(n) {\n    const doc = n.ownerDocument;\n    if (!doc)\n        return false;\n    const shadowHost = getRootShadowHost(n);\n    return doc.contains(shadowHost);\n}\nfunction inDom(n) {\n    const doc = n.ownerDocument;\n    if (!doc)\n        return false;\n    return doc.contains(n) || shadowHostInDom(n);\n}\nlet cachedRequestAnimationFrameImplementation;\nfunction getRequestAnimationFrameImplementation() {\n    if (cachedRequestAnimationFrameImplementation) {\n        return cachedRequestAnimationFrameImplementation;\n    }\n    const document = window.document;\n    let requestAnimationFrameImplementation = window.requestAnimationFrame;\n    if (document && typeof document.createElement === 'function') {\n        try {\n            const sandbox = document.createElement('iframe');\n            sandbox.hidden = true;\n            document.head.appendChild(sandbox);\n            const contentWindow = sandbox.contentWindow;\n            if (contentWindow && contentWindow.requestAnimationFrame) {\n                requestAnimationFrameImplementation =\n                    contentWindow.requestAnimationFrame;\n            }\n            document.head.removeChild(sandbox);\n        }\n        catch (e) {\n        }\n    }\n    return (cachedRequestAnimationFrameImplementation =\n        requestAnimationFrameImplementation.bind(window));\n}\nfunction onRequestAnimationFrame(...rest) {\n    return getRequestAnimationFrameImplementation()(...rest);\n}\n\nvar EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\n\nfunction _optionalChain$3(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nfunction isNodeInLinkedList(n) {\n    return '__ln' in n;\n}\nclass DoubleLinkedList {\n    constructor() {\n        this.length = 0;\n        this.head = null;\n        this.tail = null;\n    }\n    get(position) {\n        if (position >= this.length) {\n            throw new Error('Position outside of list range');\n        }\n        let current = this.head;\n        for (let index = 0; index < position; index++) {\n            current = _optionalChain$3([current, 'optionalAccess', _ => _.next]) || null;\n        }\n        return current;\n    }\n    addNode(n) {\n        const node = {\n            value: n,\n            previous: null,\n            next: null,\n        };\n        n.__ln = node;\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\n            const current = n.previousSibling.__ln.next;\n            node.next = current;\n            node.previous = n.previousSibling.__ln;\n            n.previousSibling.__ln.next = node;\n            if (current) {\n                current.previous = node;\n            }\n        }\n        else if (n.nextSibling &&\n            isNodeInLinkedList(n.nextSibling) &&\n            n.nextSibling.__ln.previous) {\n            const current = n.nextSibling.__ln.previous;\n            node.previous = current;\n            node.next = n.nextSibling.__ln;\n            n.nextSibling.__ln.previous = node;\n            if (current) {\n                current.next = node;\n            }\n        }\n        else {\n            if (this.head) {\n                this.head.previous = node;\n            }\n            node.next = this.head;\n            this.head = node;\n        }\n        if (node.next === null) {\n            this.tail = node;\n        }\n        this.length++;\n    }\n    removeNode(n) {\n        const current = n.__ln;\n        if (!this.head) {\n            return;\n        }\n        if (!current.previous) {\n            this.head = current.next;\n            if (this.head) {\n                this.head.previous = null;\n            }\n            else {\n                this.tail = null;\n            }\n        }\n        else {\n            current.previous.next = current.next;\n            if (current.next) {\n                current.next.previous = current.previous;\n            }\n            else {\n                this.tail = current.previous;\n            }\n        }\n        if (n.__ln) {\n            delete n.__ln;\n        }\n        this.length--;\n    }\n}\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\nclass MutationBuffer {\n    constructor() {\n        this.frozen = false;\n        this.locked = false;\n        this.texts = [];\n        this.attributes = [];\n        this.removes = [];\n        this.mapRemoves = [];\n        this.movedMap = {};\n        this.addedSet = new Set();\n        this.movedSet = new Set();\n        this.droppedSet = new Set();\n        this.processMutations = (mutations) => {\n            mutations.forEach(this.processMutation);\n            this.emit();\n        };\n        this.emit = () => {\n            if (this.frozen || this.locked) {\n                return;\n            }\n            const adds = [];\n            const addedIds = new Set();\n            const addList = new DoubleLinkedList();\n            const getNextId = (n) => {\n                let ns = n;\n                let nextId = IGNORED_NODE;\n                while (nextId === IGNORED_NODE) {\n                    ns = ns && ns.nextSibling;\n                    nextId = ns && this.mirror.getId(ns);\n                }\n                return nextId;\n            };\n            const pushAdd = (n) => {\n                if (!n.parentNode || !inDom(n)) {\n                    return;\n                }\n                const parentId = isShadowRoot(n.parentNode)\n                    ? this.mirror.getId(getShadowHost(n))\n                    : this.mirror.getId(n.parentNode);\n                const nextId = getNextId(n);\n                if (parentId === -1 || nextId === -1) {\n                    return addList.addNode(n);\n                }\n                const sn = serializeNodeWithId(n, {\n                    doc: this.doc,\n                    mirror: this.mirror,\n                    blockClass: this.blockClass,\n                    blockSelector: this.blockSelector,\n                    maskAllText: this.maskAllText,\n                    unblockSelector: this.unblockSelector,\n                    maskTextClass: this.maskTextClass,\n                    unmaskTextClass: this.unmaskTextClass,\n                    maskTextSelector: this.maskTextSelector,\n                    unmaskTextSelector: this.unmaskTextSelector,\n                    skipChild: true,\n                    newlyAddedElement: true,\n                    inlineStylesheet: this.inlineStylesheet,\n                    maskInputOptions: this.maskInputOptions,\n                    maskAttributeFn: this.maskAttributeFn,\n                    maskTextFn: this.maskTextFn,\n                    maskInputFn: this.maskInputFn,\n                    slimDOMOptions: this.slimDOMOptions,\n                    dataURLOptions: this.dataURLOptions,\n                    recordCanvas: this.recordCanvas,\n                    inlineImages: this.inlineImages,\n                    onSerialize: (currentN) => {\n                        if (isSerializedIframe(currentN, this.mirror)) {\n                            this.iframeManager.addIframe(currentN);\n                        }\n                        if (isSerializedStylesheet(currentN, this.mirror)) {\n                            this.stylesheetManager.trackLinkElement(currentN);\n                        }\n                        if (hasShadowRoot(n)) {\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, this.doc);\n                        }\n                    },\n                    onIframeLoad: (iframe, childSn) => {\n                        this.iframeManager.attachIframe(iframe, childSn);\n                        this.shadowDomManager.observeAttachShadow(iframe);\n                    },\n                    onStylesheetLoad: (link, childSn) => {\n                        this.stylesheetManager.attachLinkElement(link, childSn);\n                    },\n                });\n                if (sn) {\n                    adds.push({\n                        parentId,\n                        nextId,\n                        node: sn,\n                    });\n                    addedIds.add(sn.id);\n                }\n            };\n            while (this.mapRemoves.length) {\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\n            }\n            for (const n of this.movedSet) {\n                if (isParentRemoved(this.removes, n, this.mirror) &&\n                    !this.movedSet.has(n.parentNode)) {\n                    continue;\n                }\n                pushAdd(n);\n            }\n            for (const n of this.addedSet) {\n                if (!isAncestorInSet(this.droppedSet, n) &&\n                    !isParentRemoved(this.removes, n, this.mirror)) {\n                    pushAdd(n);\n                }\n                else if (isAncestorInSet(this.movedSet, n)) {\n                    pushAdd(n);\n                }\n                else {\n                    this.droppedSet.add(n);\n                }\n            }\n            let candidate = null;\n            while (addList.length) {\n                let node = null;\n                if (candidate) {\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\n                    const nextId = getNextId(candidate.value);\n                    if (parentId !== -1 && nextId !== -1) {\n                        node = candidate;\n                    }\n                }\n                if (!node) {\n                    let tailNode = addList.tail;\n                    while (tailNode) {\n                        const _node = tailNode;\n                        tailNode = tailNode.previous;\n                        if (_node) {\n                            const parentId = this.mirror.getId(_node.value.parentNode);\n                            const nextId = getNextId(_node.value);\n                            if (nextId === -1)\n                                continue;\n                            else if (parentId !== -1) {\n                                node = _node;\n                                break;\n                            }\n                            else {\n                                const unhandledNode = _node.value;\n                                if (unhandledNode.parentNode &&\n                                    unhandledNode.parentNode.nodeType ===\n                                        Node.DOCUMENT_FRAGMENT_NODE) {\n                                    const shadowHost = unhandledNode.parentNode\n                                        .host;\n                                    const parentId = this.mirror.getId(shadowHost);\n                                    if (parentId !== -1) {\n                                        node = _node;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!node) {\n                    while (addList.head) {\n                        addList.removeNode(addList.head.value);\n                    }\n                    break;\n                }\n                candidate = node.previous;\n                addList.removeNode(node.value);\n                pushAdd(node.value);\n            }\n            const payload = {\n                texts: this.texts\n                    .map((text) => ({\n                    id: this.mirror.getId(text.node),\n                    value: text.value,\n                }))\n                    .filter((text) => !addedIds.has(text.id))\n                    .filter((text) => this.mirror.has(text.id)),\n                attributes: this.attributes\n                    .map((attribute) => {\n                    const { attributes } = attribute;\n                    if (typeof attributes.style === 'string') {\n                        const diffAsStr = JSON.stringify(attribute.styleDiff);\n                        const unchangedAsStr = JSON.stringify(attribute._unchangedStyles);\n                        if (diffAsStr.length < attributes.style.length) {\n                            if ((diffAsStr + unchangedAsStr).split('var(').length ===\n                                attributes.style.split('var(').length) {\n                                attributes.style = attribute.styleDiff;\n                            }\n                        }\n                    }\n                    return {\n                        id: this.mirror.getId(attribute.node),\n                        attributes: attributes,\n                    };\n                })\n                    .filter((attribute) => !addedIds.has(attribute.id))\n                    .filter((attribute) => this.mirror.has(attribute.id)),\n                removes: this.removes,\n                adds,\n            };\n            if (!payload.texts.length &&\n                !payload.attributes.length &&\n                !payload.removes.length &&\n                !payload.adds.length) {\n                return;\n            }\n            this.texts = [];\n            this.attributes = [];\n            this.removes = [];\n            this.addedSet = new Set();\n            this.movedSet = new Set();\n            this.droppedSet = new Set();\n            this.movedMap = {};\n            this.mutationCb(payload);\n        };\n        this.processMutation = (m) => {\n            if (isIgnored(m.target, this.mirror)) {\n                return;\n            }\n            let unattachedDoc;\n            try {\n                unattachedDoc = document.implementation.createHTMLDocument();\n            }\n            catch (e) {\n                unattachedDoc = this.doc;\n            }\n            switch (m.type) {\n                case 'characterData': {\n                    const value = m.target.textContent;\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) &&\n                        value !== m.oldValue) {\n                        this.texts.push({\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && value\n                                ? this.maskTextFn\n                                    ? this.maskTextFn(value)\n                                    : value.replace(/[\\S]/g, '*')\n                                : value,\n                            node: m.target,\n                        });\n                    }\n                    break;\n                }\n                case 'attributes': {\n                    const target = m.target;\n                    let attributeName = m.attributeName;\n                    let value = m.target.getAttribute(attributeName);\n                    if (attributeName === 'value') {\n                        const type = getInputType(target);\n                        const tagName = target.tagName;\n                        value = getInputValue(target, tagName, type);\n                        const isInputMasked = shouldMaskInput({\n                            maskInputOptions: this.maskInputOptions,\n                            tagName,\n                            type,\n                        });\n                        const forceMask = needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, isInputMasked);\n                        value = maskInputValue({\n                            isMasked: forceMask,\n                            element: target,\n                            value,\n                            maskInputFn: this.maskInputFn,\n                        });\n                    }\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\n                        value === m.oldValue) {\n                        return;\n                    }\n                    let item = this.attributes.find((a) => a.node === m.target);\n                    if (target.tagName === 'IFRAME' &&\n                        attributeName === 'src' &&\n                        !this.keepIframeSrcFn(value)) {\n                        if (!target.contentDocument) {\n                            attributeName = 'rr_src';\n                        }\n                        else {\n                            return;\n                        }\n                    }\n                    if (!item) {\n                        item = {\n                            node: m.target,\n                            attributes: {},\n                            styleDiff: {},\n                            _unchangedStyles: {},\n                        };\n                        this.attributes.push(item);\n                    }\n                    if (attributeName === 'type' &&\n                        target.tagName === 'INPUT' &&\n                        (m.oldValue || '').toLowerCase() === 'password') {\n                        target.setAttribute('data-rr-is-password', 'true');\n                    }\n                    if (!ignoreAttribute(target.tagName, attributeName)) {\n                        item.attributes[attributeName] = transformAttribute(this.doc, toLowerCase(target.tagName), toLowerCase(attributeName), value, target, this.maskAttributeFn);\n                        if (attributeName === 'style') {\n                            const old = unattachedDoc.createElement('span');\n                            if (m.oldValue) {\n                                old.setAttribute('style', m.oldValue);\n                            }\n                            for (const pname of Array.from(target.style)) {\n                                const newValue = target.style.getPropertyValue(pname);\n                                const newPriority = target.style.getPropertyPriority(pname);\n                                if (newValue !== old.style.getPropertyValue(pname) ||\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\n                                    if (newPriority === '') {\n                                        item.styleDiff[pname] = newValue;\n                                    }\n                                    else {\n                                        item.styleDiff[pname] = [newValue, newPriority];\n                                    }\n                                }\n                                else {\n                                    item._unchangedStyles[pname] = [newValue, newPriority];\n                                }\n                            }\n                            for (const pname of Array.from(old.style)) {\n                                if (target.style.getPropertyValue(pname) === '') {\n                                    item.styleDiff[pname] = false;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                }\n                case 'childList': {\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, true)) {\n                        return;\n                    }\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\n                    m.removedNodes.forEach((n) => {\n                        const nodeId = this.mirror.getId(n);\n                        const parentId = isShadowRoot(m.target)\n                            ? this.mirror.getId(m.target.host)\n                            : this.mirror.getId(m.target);\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\n                            isIgnored(n, this.mirror) ||\n                            !isSerialized(n, this.mirror)) {\n                            return;\n                        }\n                        if (this.addedSet.has(n)) {\n                            deepDelete(this.addedSet, n);\n                            this.droppedSet.add(n);\n                        }\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\n                        else if (this.movedSet.has(n) &&\n                            this.movedMap[moveKey(nodeId, parentId)]) {\n                            deepDelete(this.movedSet, n);\n                        }\n                        else {\n                            this.removes.push({\n                                parentId,\n                                id: nodeId,\n                                isShadow: isShadowRoot(m.target) && isNativeShadowDom(m.target)\n                                    ? true\n                                    : undefined,\n                            });\n                        }\n                        this.mapRemoves.push(n);\n                    });\n                    break;\n                }\n            }\n        };\n        this.genAdds = (n, target) => {\n            if (this.processedNodeManager.inOtherBuffer(n, this))\n                return;\n            if (this.addedSet.has(n) || this.movedSet.has(n))\n                return;\n            if (this.mirror.hasNode(n)) {\n                if (isIgnored(n, this.mirror)) {\n                    return;\n                }\n                this.movedSet.add(n);\n                let targetId = null;\n                if (target && this.mirror.hasNode(target)) {\n                    targetId = this.mirror.getId(target);\n                }\n                if (targetId && targetId !== -1) {\n                    this.movedMap[moveKey(this.mirror.getId(n), targetId)] = true;\n                }\n            }\n            else {\n                this.addedSet.add(n);\n                this.droppedSet.delete(n);\n            }\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector, false)) {\n                n.childNodes.forEach((childN) => this.genAdds(childN));\n                if (hasShadowRoot(n)) {\n                    n.shadowRoot.childNodes.forEach((childN) => {\n                        this.processedNodeManager.add(childN, this);\n                        this.genAdds(childN, n);\n                    });\n                }\n            }\n        };\n    }\n    init(options) {\n        [\n            'mutationCb',\n            'blockClass',\n            'blockSelector',\n            'unblockSelector',\n            'maskAllText',\n            'maskTextClass',\n            'unmaskTextClass',\n            'maskTextSelector',\n            'unmaskTextSelector',\n            'inlineStylesheet',\n            'maskInputOptions',\n            'maskAttributeFn',\n            'maskTextFn',\n            'maskInputFn',\n            'keepIframeSrcFn',\n            'recordCanvas',\n            'inlineImages',\n            'slimDOMOptions',\n            'dataURLOptions',\n            'doc',\n            'mirror',\n            'iframeManager',\n            'stylesheetManager',\n            'shadowDomManager',\n            'canvasManager',\n            'processedNodeManager',\n        ].forEach((key) => {\n            this[key] = options[key];\n        });\n    }\n    freeze() {\n        this.frozen = true;\n        this.canvasManager.freeze();\n    }\n    unfreeze() {\n        this.frozen = false;\n        this.canvasManager.unfreeze();\n        this.emit();\n    }\n    isFrozen() {\n        return this.frozen;\n    }\n    lock() {\n        this.locked = true;\n        this.canvasManager.lock();\n    }\n    unlock() {\n        this.locked = false;\n        this.canvasManager.unlock();\n        this.emit();\n    }\n    reset() {\n        this.shadowDomManager.reset();\n        this.canvasManager.reset();\n    }\n}\nfunction deepDelete(addsSet, n) {\n    addsSet.delete(n);\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\n}\nfunction isParentRemoved(removes, n, mirror) {\n    if (removes.length === 0)\n        return false;\n    return _isParentRemoved(removes, n, mirror);\n}\nfunction _isParentRemoved(removes, n, mirror) {\n    const { parentNode } = n;\n    if (!parentNode) {\n        return false;\n    }\n    const parentId = mirror.getId(parentNode);\n    if (removes.some((r) => r.id === parentId)) {\n        return true;\n    }\n    return _isParentRemoved(removes, parentNode, mirror);\n}\nfunction isAncestorInSet(set, n) {\n    if (set.size === 0)\n        return false;\n    return _isAncestorInSet(set, n);\n}\nfunction _isAncestorInSet(set, n) {\n    const { parentNode } = n;\n    if (!parentNode) {\n        return false;\n    }\n    if (set.has(parentNode)) {\n        return true;\n    }\n    return _isAncestorInSet(set, parentNode);\n}\n\nlet errorHandler;\nfunction registerErrorHandler(handler) {\n    errorHandler = handler;\n}\nfunction unregisterErrorHandler() {\n    errorHandler = undefined;\n}\nconst callbackWrapper = (cb) => {\n    if (!errorHandler) {\n        return cb;\n    }\n    const rrwebWrapped = ((...rest) => {\n        try {\n            return cb(...rest);\n        }\n        catch (error) {\n            if (errorHandler && errorHandler(error) === true) {\n                return () => {\n                };\n            }\n            throw error;\n        }\n    });\n    return rrwebWrapped;\n};\n\nfunction _optionalChain$2(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nconst mutationBuffers = [];\nfunction getEventTarget(event) {\n    try {\n        if ('composedPath' in event) {\n            const path = event.composedPath();\n            if (path.length) {\n                return path[0];\n            }\n        }\n        else if ('path' in event && event.path.length) {\n            return event.path[0];\n        }\n    }\n    catch (e2) {\n    }\n    return event && event.target;\n}\nfunction initMutationObserver(options, rootEl) {\n    const mutationBuffer = new MutationBuffer();\n    mutationBuffers.push(mutationBuffer);\n    mutationBuffer.init(options);\n    let mutationObserverCtor = window.MutationObserver ||\n        window.__rrMutationObserver;\n    const angularZoneSymbol = _optionalChain$2([window, 'optionalAccess', _ => _.Zone, 'optionalAccess', _2 => _2.__symbol__, 'optionalCall', _3 => _3('MutationObserver')]);\n    if (angularZoneSymbol &&\n        window[angularZoneSymbol]) {\n        mutationObserverCtor = window[angularZoneSymbol];\n    }\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\n        if (options.onMutation && options.onMutation(mutations) === false) {\n            return;\n        }\n        mutationBuffer.processMutations.bind(mutationBuffer)(mutations);\n    }));\n    observer.observe(rootEl, {\n        attributes: true,\n        attributeOldValue: true,\n        characterData: true,\n        characterDataOldValue: true,\n        childList: true,\n        subtree: true,\n    });\n    return observer;\n}\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\n    if (sampling.mousemove === false) {\n        return () => {\n        };\n    }\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\n        ? sampling.mousemoveCallback\n        : 500;\n    let positions = [];\n    let timeBaseline;\n    const wrappedCb = throttle$1(callbackWrapper((source) => {\n        const totalOffset = Date.now() - timeBaseline;\n        mousemoveCb(positions.map((p) => {\n            p.timeOffset -= totalOffset;\n            return p;\n        }), source);\n        positions = [];\n        timeBaseline = null;\n    }), callbackThreshold);\n    const updatePosition = callbackWrapper(throttle$1(callbackWrapper((evt) => {\n        const target = getEventTarget(evt);\n        const { clientX, clientY } = legacy_isTouchEvent(evt)\n            ? evt.changedTouches[0]\n            : evt;\n        if (!timeBaseline) {\n            timeBaseline = nowTimestamp();\n        }\n        positions.push({\n            x: clientX,\n            y: clientY,\n            id: mirror.getId(target),\n            timeOffset: nowTimestamp() - timeBaseline,\n        });\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\n            ? IncrementalSource.Drag\n            : evt instanceof MouseEvent\n                ? IncrementalSource.MouseMove\n                : IncrementalSource.TouchMove);\n    }), threshold, {\n        trailing: false,\n    }));\n    const handlers = [\n        on('mousemove', updatePosition, doc),\n        on('touchmove', updatePosition, doc),\n        on('drag', updatePosition, doc),\n    ];\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\n    if (sampling.mouseInteraction === false) {\n        return () => {\n        };\n    }\n    const disableMap = sampling.mouseInteraction === true ||\n        sampling.mouseInteraction === undefined\n        ? {}\n        : sampling.mouseInteraction;\n    const handlers = [];\n    let currentPointerType = null;\n    const getHandler = (eventKey) => {\n        return (event) => {\n            const target = getEventTarget(event);\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n                return;\n            }\n            let pointerType = null;\n            let thisEventKey = eventKey;\n            if ('pointerType' in event) {\n                switch (event.pointerType) {\n                    case 'mouse':\n                        pointerType = PointerTypes.Mouse;\n                        break;\n                    case 'touch':\n                        pointerType = PointerTypes.Touch;\n                        break;\n                    case 'pen':\n                        pointerType = PointerTypes.Pen;\n                        break;\n                }\n                if (pointerType === PointerTypes.Touch) {\n                    if (MouseInteractions[eventKey] === MouseInteractions.MouseDown) {\n                        thisEventKey = 'TouchStart';\n                    }\n                    else if (MouseInteractions[eventKey] === MouseInteractions.MouseUp) {\n                        thisEventKey = 'TouchEnd';\n                    }\n                }\n                else if (pointerType === PointerTypes.Pen) ;\n            }\n            else if (legacy_isTouchEvent(event)) {\n                pointerType = PointerTypes.Touch;\n            }\n            if (pointerType !== null) {\n                currentPointerType = pointerType;\n                if ((thisEventKey.startsWith('Touch') &&\n                    pointerType === PointerTypes.Touch) ||\n                    (thisEventKey.startsWith('Mouse') &&\n                        pointerType === PointerTypes.Mouse)) {\n                    pointerType = null;\n                }\n            }\n            else if (MouseInteractions[eventKey] === MouseInteractions.Click) {\n                pointerType = currentPointerType;\n                currentPointerType = null;\n            }\n            const e = legacy_isTouchEvent(event) ? event.changedTouches[0] : event;\n            if (!e) {\n                return;\n            }\n            const id = mirror.getId(target);\n            const { clientX, clientY } = e;\n            callbackWrapper(mouseInteractionCb)({\n                type: MouseInteractions[thisEventKey],\n                id,\n                x: clientX,\n                y: clientY,\n                ...(pointerType !== null && { pointerType }),\n            });\n        };\n    };\n    Object.keys(MouseInteractions)\n        .filter((key) => Number.isNaN(Number(key)) &&\n        !key.endsWith('_Departed') &&\n        disableMap[key] !== false)\n        .forEach((eventKey) => {\n        let eventName = toLowerCase(eventKey);\n        const handler = getHandler(eventKey);\n        if (window.PointerEvent) {\n            switch (MouseInteractions[eventKey]) {\n                case MouseInteractions.MouseDown:\n                case MouseInteractions.MouseUp:\n                    eventName = eventName.replace('mouse', 'pointer');\n                    break;\n                case MouseInteractions.TouchStart:\n                case MouseInteractions.TouchEnd:\n                    return;\n            }\n        }\n        handlers.push(on(eventName, handler, doc));\n    });\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\n    const updatePosition = callbackWrapper(throttle$1(callbackWrapper((evt) => {\n        const target = getEventTarget(evt);\n        if (!target ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const id = mirror.getId(target);\n        if (target === doc && doc.defaultView) {\n            const scrollLeftTop = getWindowScroll(doc.defaultView);\n            scrollCb({\n                id,\n                x: scrollLeftTop.left,\n                y: scrollLeftTop.top,\n            });\n        }\n        else {\n            scrollCb({\n                id,\n                x: target.scrollLeft,\n                y: target.scrollTop,\n            });\n        }\n    }), sampling.scroll || 100));\n    return on('scroll', updatePosition, doc);\n}\nfunction initViewportResizeObserver({ viewportResizeCb }, { win }) {\n    let lastH = -1;\n    let lastW = -1;\n    const updateDimension = callbackWrapper(throttle$1(callbackWrapper(() => {\n        const height = getWindowHeight();\n        const width = getWindowWidth();\n        if (lastH !== height || lastW !== width) {\n            viewportResizeCb({\n                width: Number(width),\n                height: Number(height),\n            });\n            lastH = height;\n            lastW = width;\n        }\n    }), 200));\n    return on('resize', updateDimension, win);\n}\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\nconst lastInputValueMap = new WeakMap();\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, }) {\n    function eventHandler(event) {\n        let target = getEventTarget(event);\n        const userTriggered = event.isTrusted;\n        const tagName = target && toUpperCase(target.tagName);\n        if (tagName === 'OPTION')\n            target = target.parentElement;\n        if (!target ||\n            !tagName ||\n            INPUT_TAGS.indexOf(tagName) < 0 ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const el = target;\n        if (el.classList.contains(ignoreClass) ||\n            (ignoreSelector && el.matches(ignoreSelector))) {\n            return;\n        }\n        const type = getInputType(target);\n        let text = getInputValue(el, tagName, type);\n        let isChecked = false;\n        const isInputMasked = shouldMaskInput({\n            maskInputOptions,\n            tagName,\n            type,\n        });\n        const forceMask = needMaskingText(target, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked);\n        if (type === 'radio' || type === 'checkbox') {\n            isChecked = target.checked;\n        }\n        text = maskInputValue({\n            isMasked: forceMask,\n            element: target,\n            value: text,\n            maskInputFn,\n        });\n        cbWithDedup(target, userTriggeredOnInput\n            ? { text, isChecked, userTriggered }\n            : { text, isChecked });\n        const name = target.name;\n        if (type === 'radio' && name && isChecked) {\n            doc\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\n                .forEach((el) => {\n                if (el !== target) {\n                    const text = maskInputValue({\n                        isMasked: forceMask,\n                        element: el,\n                        value: getInputValue(el, tagName, type),\n                        maskInputFn,\n                    });\n                    cbWithDedup(el, userTriggeredOnInput\n                        ? { text, isChecked: !isChecked, userTriggered: false }\n                        : { text, isChecked: !isChecked });\n                }\n            });\n        }\n    }\n    function cbWithDedup(target, v) {\n        const lastInputValue = lastInputValueMap.get(target);\n        if (!lastInputValue ||\n            lastInputValue.text !== v.text ||\n            lastInputValue.isChecked !== v.isChecked) {\n            lastInputValueMap.set(target, v);\n            const id = mirror.getId(target);\n            callbackWrapper(inputCb)({\n                ...v,\n                id,\n            });\n        }\n    }\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\n    const currentWindow = doc.defaultView;\n    if (!currentWindow) {\n        return () => {\n            handlers.forEach((h) => h());\n        };\n    }\n    const propertyDescriptor = currentWindow.Object.getOwnPropertyDescriptor(currentWindow.HTMLInputElement.prototype, 'value');\n    const hookProperties = [\n        [currentWindow.HTMLInputElement.prototype, 'value'],\n        [currentWindow.HTMLInputElement.prototype, 'checked'],\n        [currentWindow.HTMLSelectElement.prototype, 'value'],\n        [currentWindow.HTMLTextAreaElement.prototype, 'value'],\n        [currentWindow.HTMLSelectElement.prototype, 'selectedIndex'],\n        [currentWindow.HTMLOptionElement.prototype, 'selected'],\n    ];\n    if (propertyDescriptor && propertyDescriptor.set) {\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\n            set() {\n                callbackWrapper(eventHandler)({\n                    target: this,\n                    isTrusted: false,\n                });\n            },\n        }, false, currentWindow)));\n    }\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction getNestedCSSRulePositions(rule) {\n    const positions = [];\n    function recurse(childRule, pos) {\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\n            childRule.parentRule instanceof CSSGroupingRule) ||\n            (hasNestedCSSRule('CSSMediaRule') &&\n                childRule.parentRule instanceof CSSMediaRule) ||\n            (hasNestedCSSRule('CSSSupportsRule') &&\n                childRule.parentRule instanceof CSSSupportsRule) ||\n            (hasNestedCSSRule('CSSConditionRule') &&\n                childRule.parentRule instanceof CSSConditionRule)) {\n            const rules = Array.from(childRule.parentRule.cssRules);\n            const index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        else if (childRule.parentStyleSheet) {\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\n            const index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        return pos;\n    }\n    return recurse(rule, positions);\n}\nfunction getIdAndStyleId(sheet, mirror, styleMirror) {\n    let id, styleId;\n    if (!sheet)\n        return {};\n    if (sheet.ownerNode)\n        id = mirror.getId(sheet.ownerNode);\n    else\n        styleId = styleMirror.getId(sheet);\n    return {\n        styleId,\n        id,\n    };\n}\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror, stylesheetManager }, { win }) {\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\n        return () => {\n        };\n    }\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [rule, index] = argumentsList;\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleSheetRuleCb({\n                    id,\n                    styleId,\n                    adds: [{ rule, index }],\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [index] = argumentsList;\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleSheetRuleCb({\n                    id,\n                    styleId,\n                    removes: [{ index }],\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    let replace;\n    if (win.CSSStyleSheet.prototype.replace) {\n        replace = win.CSSStyleSheet.prototype.replace;\n        win.CSSStyleSheet.prototype.replace = new Proxy(replace, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [text] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        replace: text,\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    }\n    let replaceSync;\n    if (win.CSSStyleSheet.prototype.replaceSync) {\n        replaceSync = win.CSSStyleSheet.prototype.replaceSync;\n        win.CSSStyleSheet.prototype.replaceSync = new Proxy(replaceSync, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [text] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        replaceSync: text,\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    }\n    const supportedNestedCSSRuleTypes = {};\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\n    }\n    else {\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\n        }\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\n        }\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\n        }\n    }\n    const unmodifiedFunctions = {};\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n        unmodifiedFunctions[typeKey] = {\n            insertRule: type.prototype.insertRule,\n            deleteRule: type.prototype.deleteRule,\n        };\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [rule, index] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        adds: [\n                            {\n                                rule,\n                                index: [\n                                    ...getNestedCSSRulePositions(thisArg),\n                                    index || 0,\n                                ],\n                            },\n                        ],\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [index] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        removes: [\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\n                        ],\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    });\n    return callbackWrapper(() => {\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\n        replace && (win.CSSStyleSheet.prototype.replace = replace);\n        replaceSync && (win.CSSStyleSheet.prototype.replaceSync = replaceSync);\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\n        });\n    });\n}\nfunction initAdoptedStyleSheetObserver({ mirror, stylesheetManager, }, host) {\n    let hostId = null;\n    if (host.nodeName === '#document')\n        hostId = mirror.getId(host);\n    else\n        hostId = mirror.getId(host.host);\n    const patchTarget = host.nodeName === '#document'\n        ? _optionalChain$2([host, 'access', _4 => _4.defaultView, 'optionalAccess', _5 => _5.Document])\n        : _optionalChain$2([host, 'access', _6 => _6.ownerDocument, 'optionalAccess', _7 => _7.defaultView, 'optionalAccess', _8 => _8.ShadowRoot]);\n    const originalPropertyDescriptor = _optionalChain$2([patchTarget, 'optionalAccess', _9 => _9.prototype])\n        ? Object.getOwnPropertyDescriptor(_optionalChain$2([patchTarget, 'optionalAccess', _10 => _10.prototype]), 'adoptedStyleSheets')\n        : undefined;\n    if (hostId === null ||\n        hostId === -1 ||\n        !patchTarget ||\n        !originalPropertyDescriptor)\n        return () => {\n        };\n    Object.defineProperty(host, 'adoptedStyleSheets', {\n        configurable: originalPropertyDescriptor.configurable,\n        enumerable: originalPropertyDescriptor.enumerable,\n        get() {\n            return _optionalChain$2([originalPropertyDescriptor, 'access', _11 => _11.get, 'optionalAccess', _12 => _12.call, 'call', _13 => _13(this)]);\n        },\n        set(sheets) {\n            const result = _optionalChain$2([originalPropertyDescriptor, 'access', _14 => _14.set, 'optionalAccess', _15 => _15.call, 'call', _16 => _16(this, sheets)]);\n            if (hostId !== null && hostId !== -1) {\n                try {\n                    stylesheetManager.adoptStyleSheets(sheets, hostId);\n                }\n                catch (e) {\n                }\n            }\n            return result;\n        },\n    });\n    return callbackWrapper(() => {\n        Object.defineProperty(host, 'adoptedStyleSheets', {\n            configurable: originalPropertyDescriptor.configurable,\n            enumerable: originalPropertyDescriptor.enumerable,\n            get: originalPropertyDescriptor.get,\n            set: originalPropertyDescriptor.set,\n        });\n    });\n}\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror, ignoreCSSAttributes, stylesheetManager, }, { win }) {\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [property, value, priority] = argumentsList;\n            if (ignoreCSSAttributes.has(property)) {\n                return setProperty.apply(thisArg, [property, value, priority]);\n            }\n            const { id, styleId } = getIdAndStyleId(_optionalChain$2([thisArg, 'access', _17 => _17.parentRule, 'optionalAccess', _18 => _18.parentStyleSheet]), mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleDeclarationCb({\n                    id,\n                    styleId,\n                    set: {\n                        property,\n                        value,\n                        priority,\n                    },\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [property] = argumentsList;\n            if (ignoreCSSAttributes.has(property)) {\n                return removeProperty.apply(thisArg, [property]);\n            }\n            const { id, styleId } = getIdAndStyleId(_optionalChain$2([thisArg, 'access', _19 => _19.parentRule, 'optionalAccess', _20 => _20.parentStyleSheet]), mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleDeclarationCb({\n                    id,\n                    styleId,\n                    remove: {\n                        property,\n                    },\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    return callbackWrapper(() => {\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\n    });\n}\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, doc, }) {\n    const handler = callbackWrapper((type) => throttle$1(callbackWrapper((event) => {\n        const target = getEventTarget(event);\n        if (!target ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const { currentTime, volume, muted, playbackRate } = target;\n        mediaInteractionCb({\n            type,\n            id: mirror.getId(target),\n            currentTime,\n            volume,\n            muted,\n            playbackRate,\n        });\n    }), sampling.media || 500));\n    const handlers = [\n        on('play', handler(0), doc),\n        on('pause', handler(1), doc),\n        on('seeked', handler(2), doc),\n        on('volumechange', handler(3), doc),\n        on('ratechange', handler(4), doc),\n    ];\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initFontObserver({ fontCb, doc }) {\n    const win = doc.defaultView;\n    if (!win) {\n        return () => {\n        };\n    }\n    const handlers = [];\n    const fontMap = new WeakMap();\n    const originalFontFace = win.FontFace;\n    win.FontFace = function FontFace(family, source, descriptors) {\n        const fontFace = new originalFontFace(family, source, descriptors);\n        fontMap.set(fontFace, {\n            family,\n            buffer: typeof source !== 'string',\n            descriptors,\n            fontSource: typeof source === 'string'\n                ? source\n                : JSON.stringify(Array.from(new Uint8Array(source))),\n        });\n        return fontFace;\n    };\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\n        return function (fontFace) {\n            setTimeout(callbackWrapper(() => {\n                const p = fontMap.get(fontFace);\n                if (p) {\n                    fontCb(p);\n                    fontMap.delete(fontFace);\n                }\n            }), 0);\n            return original.apply(this, [fontFace]);\n        };\n    });\n    handlers.push(() => {\n        win.FontFace = originalFontFace;\n    });\n    handlers.push(restoreHandler);\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initSelectionObserver(param) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, selectionCb, } = param;\n    let collapsed = true;\n    const updateSelection = callbackWrapper(() => {\n        const selection = doc.getSelection();\n        if (!selection || (collapsed && _optionalChain$2([selection, 'optionalAccess', _21 => _21.isCollapsed])))\n            return;\n        collapsed = selection.isCollapsed || false;\n        const ranges = [];\n        const count = selection.rangeCount || 0;\n        for (let i = 0; i < count; i++) {\n            const range = selection.getRangeAt(i);\n            const { startContainer, startOffset, endContainer, endOffset } = range;\n            const blocked = isBlocked(startContainer, blockClass, blockSelector, unblockSelector, true) ||\n                isBlocked(endContainer, blockClass, blockSelector, unblockSelector, true);\n            if (blocked)\n                continue;\n            ranges.push({\n                start: mirror.getId(startContainer),\n                startOffset,\n                end: mirror.getId(endContainer),\n                endOffset,\n            });\n        }\n        selectionCb({ ranges });\n    });\n    updateSelection();\n    return on('selectionchange', updateSelection);\n}\nfunction initCustomElementObserver({ doc, customElementCb, }) {\n    const win = doc.defaultView;\n    if (!win || !win.customElements)\n        return () => { };\n    const restoreHandler = patch(win.customElements, 'define', function (original) {\n        return function (name, constructor, options) {\n            try {\n                customElementCb({\n                    define: {\n                        name,\n                    },\n                });\n            }\n            catch (e) {\n            }\n            return original.apply(this, [name, constructor, options]);\n        };\n    });\n    return restoreHandler;\n}\nfunction initObservers(o, _hooks = {}) {\n    const currentWindow = o.doc.defaultView;\n    if (!currentWindow) {\n        return () => {\n        };\n    }\n    const mutationObserver = initMutationObserver(o, o.doc);\n    const mousemoveHandler = initMoveObserver(o);\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\n    const scrollHandler = initScrollObserver(o);\n    const viewportResizeHandler = initViewportResizeObserver(o, {\n        win: currentWindow,\n    });\n    const inputHandler = initInputObserver(o);\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\n    const styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\n    const adoptedStyleSheetObserver = initAdoptedStyleSheetObserver(o, o.doc);\n    const styleDeclarationObserver = initStyleDeclarationObserver(o, {\n        win: currentWindow,\n    });\n    const fontObserver = o.collectFonts\n        ? initFontObserver(o)\n        : () => {\n        };\n    const selectionObserver = initSelectionObserver(o);\n    const customElementObserver = initCustomElementObserver(o);\n    const pluginHandlers = [];\n    for (const plugin of o.plugins) {\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\n    }\n    return callbackWrapper(() => {\n        mutationBuffers.forEach((b) => b.reset());\n        mutationObserver.disconnect();\n        mousemoveHandler();\n        mouseInteractionHandler();\n        scrollHandler();\n        viewportResizeHandler();\n        inputHandler();\n        mediaInteractionHandler();\n        styleSheetObserver();\n        adoptedStyleSheetObserver();\n        styleDeclarationObserver();\n        fontObserver();\n        selectionObserver();\n        customElementObserver();\n        pluginHandlers.forEach((h) => h());\n    });\n}\nfunction hasNestedCSSRule(prop) {\n    return typeof window[prop] !== 'undefined';\n}\nfunction canMonkeyPatchNestedCSSRule(prop) {\n    return Boolean(typeof window[prop] !== 'undefined' &&\n        window[prop].prototype &&\n        'insertRule' in window[prop].prototype &&\n        'deleteRule' in window[prop].prototype);\n}\n\nclass CrossOriginIframeMirror {\n    constructor(generateIdFn) {\n        this.generateIdFn = generateIdFn;\n        this.iframeIdToRemoteIdMap = new WeakMap();\n        this.iframeRemoteIdToIdMap = new WeakMap();\n    }\n    getId(iframe, remoteId, idToRemoteMap, remoteToIdMap) {\n        const idToRemoteIdMap = idToRemoteMap || this.getIdToRemoteIdMap(iframe);\n        const remoteIdToIdMap = remoteToIdMap || this.getRemoteIdToIdMap(iframe);\n        let id = idToRemoteIdMap.get(remoteId);\n        if (!id) {\n            id = this.generateIdFn();\n            idToRemoteIdMap.set(remoteId, id);\n            remoteIdToIdMap.set(id, remoteId);\n        }\n        return id;\n    }\n    getIds(iframe, remoteId) {\n        const idToRemoteIdMap = this.getIdToRemoteIdMap(iframe);\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\n        return remoteId.map((id) => this.getId(iframe, id, idToRemoteIdMap, remoteIdToIdMap));\n    }\n    getRemoteId(iframe, id, map) {\n        const remoteIdToIdMap = map || this.getRemoteIdToIdMap(iframe);\n        if (typeof id !== 'number')\n            return id;\n        const remoteId = remoteIdToIdMap.get(id);\n        if (!remoteId)\n            return -1;\n        return remoteId;\n    }\n    getRemoteIds(iframe, ids) {\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\n        return ids.map((id) => this.getRemoteId(iframe, id, remoteIdToIdMap));\n    }\n    reset(iframe) {\n        if (!iframe) {\n            this.iframeIdToRemoteIdMap = new WeakMap();\n            this.iframeRemoteIdToIdMap = new WeakMap();\n            return;\n        }\n        this.iframeIdToRemoteIdMap.delete(iframe);\n        this.iframeRemoteIdToIdMap.delete(iframe);\n    }\n    getIdToRemoteIdMap(iframe) {\n        let idToRemoteIdMap = this.iframeIdToRemoteIdMap.get(iframe);\n        if (!idToRemoteIdMap) {\n            idToRemoteIdMap = new Map();\n            this.iframeIdToRemoteIdMap.set(iframe, idToRemoteIdMap);\n        }\n        return idToRemoteIdMap;\n    }\n    getRemoteIdToIdMap(iframe) {\n        let remoteIdToIdMap = this.iframeRemoteIdToIdMap.get(iframe);\n        if (!remoteIdToIdMap) {\n            remoteIdToIdMap = new Map();\n            this.iframeRemoteIdToIdMap.set(iframe, remoteIdToIdMap);\n        }\n        return remoteIdToIdMap;\n    }\n}\n\nfunction _optionalChain$1(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nclass IframeManagerNoop {\n    constructor() {\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\n        this.crossOriginIframeRootIdMap = new WeakMap();\n    }\n    addIframe() {\n    }\n    addLoadListener() {\n    }\n    attachIframe() {\n    }\n}\nclass IframeManager {\n    constructor(options) {\n        this.iframes = new WeakMap();\n        this.crossOriginIframeMap = new WeakMap();\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\n        this.crossOriginIframeRootIdMap = new WeakMap();\n        this.mutationCb = options.mutationCb;\n        this.wrappedEmit = options.wrappedEmit;\n        this.stylesheetManager = options.stylesheetManager;\n        this.recordCrossOriginIframes = options.recordCrossOriginIframes;\n        this.crossOriginIframeStyleMirror = new CrossOriginIframeMirror(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror));\n        this.mirror = options.mirror;\n        if (this.recordCrossOriginIframes) {\n            window.addEventListener('message', this.handleMessage.bind(this));\n        }\n    }\n    addIframe(iframeEl) {\n        this.iframes.set(iframeEl, true);\n        if (iframeEl.contentWindow)\n            this.crossOriginIframeMap.set(iframeEl.contentWindow, iframeEl);\n    }\n    addLoadListener(cb) {\n        this.loadListener = cb;\n    }\n    attachIframe(iframeEl, childSn) {\n        this.mutationCb({\n            adds: [\n                {\n                    parentId: this.mirror.getId(iframeEl),\n                    nextId: null,\n                    node: childSn,\n                },\n            ],\n            removes: [],\n            texts: [],\n            attributes: [],\n            isAttachIframe: true,\n        });\n        _optionalChain$1([this, 'access', _ => _.loadListener, 'optionalCall', _2 => _2(iframeEl)]);\n        if (iframeEl.contentDocument &&\n            iframeEl.contentDocument.adoptedStyleSheets &&\n            iframeEl.contentDocument.adoptedStyleSheets.length > 0)\n            this.stylesheetManager.adoptStyleSheets(iframeEl.contentDocument.adoptedStyleSheets, this.mirror.getId(iframeEl.contentDocument));\n    }\n    handleMessage(message) {\n        const crossOriginMessageEvent = message;\n        if (crossOriginMessageEvent.data.type !== 'rrweb' ||\n            crossOriginMessageEvent.origin !== crossOriginMessageEvent.data.origin)\n            return;\n        const iframeSourceWindow = message.source;\n        if (!iframeSourceWindow)\n            return;\n        const iframeEl = this.crossOriginIframeMap.get(message.source);\n        if (!iframeEl)\n            return;\n        const transformedEvent = this.transformCrossOriginEvent(iframeEl, crossOriginMessageEvent.data.event);\n        if (transformedEvent)\n            this.wrappedEmit(transformedEvent, crossOriginMessageEvent.data.isCheckout);\n    }\n    transformCrossOriginEvent(iframeEl, e) {\n        switch (e.type) {\n            case EventType.FullSnapshot: {\n                this.crossOriginIframeMirror.reset(iframeEl);\n                this.crossOriginIframeStyleMirror.reset(iframeEl);\n                this.replaceIdOnNode(e.data.node, iframeEl);\n                const rootId = e.data.node.id;\n                this.crossOriginIframeRootIdMap.set(iframeEl, rootId);\n                this.patchRootIdOnNode(e.data.node, rootId);\n                return {\n                    timestamp: e.timestamp,\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.Mutation,\n                        adds: [\n                            {\n                                parentId: this.mirror.getId(iframeEl),\n                                nextId: null,\n                                node: e.data.node,\n                            },\n                        ],\n                        removes: [],\n                        texts: [],\n                        attributes: [],\n                        isAttachIframe: true,\n                    },\n                };\n            }\n            case EventType.Meta:\n            case EventType.Load:\n            case EventType.DomContentLoaded: {\n                return false;\n            }\n            case EventType.Plugin: {\n                return e;\n            }\n            case EventType.Custom: {\n                this.replaceIds(e.data.payload, iframeEl, ['id', 'parentId', 'previousId', 'nextId']);\n                return e;\n            }\n            case EventType.IncrementalSnapshot: {\n                switch (e.data.source) {\n                    case IncrementalSource.Mutation: {\n                        e.data.adds.forEach((n) => {\n                            this.replaceIds(n, iframeEl, [\n                                'parentId',\n                                'nextId',\n                                'previousId',\n                            ]);\n                            this.replaceIdOnNode(n.node, iframeEl);\n                            const rootId = this.crossOriginIframeRootIdMap.get(iframeEl);\n                            rootId && this.patchRootIdOnNode(n.node, rootId);\n                        });\n                        e.data.removes.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['parentId', 'id']);\n                        });\n                        e.data.attributes.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['id']);\n                        });\n                        e.data.texts.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['id']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.Drag:\n                    case IncrementalSource.TouchMove:\n                    case IncrementalSource.MouseMove: {\n                        e.data.positions.forEach((p) => {\n                            this.replaceIds(p, iframeEl, ['id']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.ViewportResize: {\n                        return false;\n                    }\n                    case IncrementalSource.MediaInteraction:\n                    case IncrementalSource.MouseInteraction:\n                    case IncrementalSource.Scroll:\n                    case IncrementalSource.CanvasMutation:\n                    case IncrementalSource.Input: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        return e;\n                    }\n                    case IncrementalSource.StyleSheetRule:\n                    case IncrementalSource.StyleDeclaration: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        this.replaceStyleIds(e.data, iframeEl, ['styleId']);\n                        return e;\n                    }\n                    case IncrementalSource.Font: {\n                        return e;\n                    }\n                    case IncrementalSource.Selection: {\n                        e.data.ranges.forEach((range) => {\n                            this.replaceIds(range, iframeEl, ['start', 'end']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.AdoptedStyleSheet: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        this.replaceStyleIds(e.data, iframeEl, ['styleIds']);\n                        _optionalChain$1([e, 'access', _3 => _3.data, 'access', _4 => _4.styles, 'optionalAccess', _5 => _5.forEach, 'call', _6 => _6((style) => {\n                            this.replaceStyleIds(style, iframeEl, ['styleId']);\n                        })]);\n                        return e;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    replace(iframeMirror, obj, iframeEl, keys) {\n        for (const key of keys) {\n            if (!Array.isArray(obj[key]) && typeof obj[key] !== 'number')\n                continue;\n            if (Array.isArray(obj[key])) {\n                obj[key] = iframeMirror.getIds(iframeEl, obj[key]);\n            }\n            else {\n                obj[key] = iframeMirror.getId(iframeEl, obj[key]);\n            }\n        }\n        return obj;\n    }\n    replaceIds(obj, iframeEl, keys) {\n        return this.replace(this.crossOriginIframeMirror, obj, iframeEl, keys);\n    }\n    replaceStyleIds(obj, iframeEl, keys) {\n        return this.replace(this.crossOriginIframeStyleMirror, obj, iframeEl, keys);\n    }\n    replaceIdOnNode(node, iframeEl) {\n        this.replaceIds(node, iframeEl, ['id', 'rootId']);\n        if ('childNodes' in node) {\n            node.childNodes.forEach((child) => {\n                this.replaceIdOnNode(child, iframeEl);\n            });\n        }\n    }\n    patchRootIdOnNode(node, rootId) {\n        if (node.type !== NodeType$1.Document && !node.rootId)\n            node.rootId = rootId;\n        if ('childNodes' in node) {\n            node.childNodes.forEach((child) => {\n                this.patchRootIdOnNode(child, rootId);\n            });\n        }\n    }\n}\n\nclass ShadowDomManagerNoop {\n    init() {\n    }\n    addShadowRoot() {\n    }\n    observeAttachShadow() {\n    }\n    reset() {\n    }\n}\nclass ShadowDomManager {\n    constructor(options) {\n        this.shadowDoms = new WeakSet();\n        this.restoreHandlers = [];\n        this.mutationCb = options.mutationCb;\n        this.scrollCb = options.scrollCb;\n        this.bypassOptions = options.bypassOptions;\n        this.mirror = options.mirror;\n        this.init();\n    }\n    init() {\n        this.reset();\n        this.patchAttachShadow(Element, document);\n    }\n    addShadowRoot(shadowRoot, doc) {\n        if (!isNativeShadowDom(shadowRoot))\n            return;\n        if (this.shadowDoms.has(shadowRoot))\n            return;\n        this.shadowDoms.add(shadowRoot);\n        const observer = initMutationObserver({\n            ...this.bypassOptions,\n            doc,\n            mutationCb: this.mutationCb,\n            mirror: this.mirror,\n            shadowDomManager: this,\n        }, shadowRoot);\n        this.restoreHandlers.push(() => observer.disconnect());\n        this.restoreHandlers.push(initScrollObserver({\n            ...this.bypassOptions,\n            scrollCb: this.scrollCb,\n            doc: shadowRoot,\n            mirror: this.mirror,\n        }));\n        setTimeout(() => {\n            if (shadowRoot.adoptedStyleSheets &&\n                shadowRoot.adoptedStyleSheets.length > 0)\n                this.bypassOptions.stylesheetManager.adoptStyleSheets(shadowRoot.adoptedStyleSheets, this.mirror.getId(shadowRoot.host));\n            this.restoreHandlers.push(initAdoptedStyleSheetObserver({\n                mirror: this.mirror,\n                stylesheetManager: this.bypassOptions.stylesheetManager,\n            }, shadowRoot));\n        }, 0);\n    }\n    observeAttachShadow(iframeElement) {\n        if (!iframeElement.contentWindow || !iframeElement.contentDocument)\n            return;\n        this.patchAttachShadow(iframeElement.contentWindow.Element, iframeElement.contentDocument);\n    }\n    patchAttachShadow(element, doc) {\n        const manager = this;\n        this.restoreHandlers.push(patch(element.prototype, 'attachShadow', function (original) {\n            return function (option) {\n                const shadowRoot = original.call(this, option);\n                if (this.shadowRoot && inDom(this))\n                    manager.addShadowRoot(this.shadowRoot, doc);\n                return shadowRoot;\n            };\n        }));\n    }\n    reset() {\n        this.restoreHandlers.forEach((handler) => {\n            try {\n                handler();\n            }\n            catch (e) {\n            }\n        });\n        this.restoreHandlers = [];\n        this.shadowDoms = new WeakSet();\n    }\n}\n\nclass CanvasManagerNoop {\n    reset() {\n    }\n    freeze() {\n    }\n    unfreeze() {\n    }\n    lock() {\n    }\n    unlock() {\n    }\n    snapshot() {\n    }\n}\n\nclass StylesheetManager {\n    constructor(options) {\n        this.trackedLinkElements = new WeakSet();\n        this.styleMirror = new StyleSheetMirror();\n        this.mutationCb = options.mutationCb;\n        this.adoptedStyleSheetCb = options.adoptedStyleSheetCb;\n    }\n    attachLinkElement(linkEl, childSn) {\n        if ('_cssText' in childSn.attributes)\n            this.mutationCb({\n                adds: [],\n                removes: [],\n                texts: [],\n                attributes: [\n                    {\n                        id: childSn.id,\n                        attributes: childSn\n                            .attributes,\n                    },\n                ],\n            });\n        this.trackLinkElement(linkEl);\n    }\n    trackLinkElement(linkEl) {\n        if (this.trackedLinkElements.has(linkEl))\n            return;\n        this.trackedLinkElements.add(linkEl);\n        this.trackStylesheetInLinkElement(linkEl);\n    }\n    adoptStyleSheets(sheets, hostId) {\n        if (sheets.length === 0)\n            return;\n        const adoptedStyleSheetData = {\n            id: hostId,\n            styleIds: [],\n        };\n        const styles = [];\n        for (const sheet of sheets) {\n            let styleId;\n            if (!this.styleMirror.has(sheet)) {\n                styleId = this.styleMirror.add(sheet);\n                styles.push({\n                    styleId,\n                    rules: Array.from(sheet.rules || CSSRule, (r, index) => ({\n                        rule: stringifyRule(r),\n                        index,\n                    })),\n                });\n            }\n            else\n                styleId = this.styleMirror.getId(sheet);\n            adoptedStyleSheetData.styleIds.push(styleId);\n        }\n        if (styles.length > 0)\n            adoptedStyleSheetData.styles = styles;\n        this.adoptedStyleSheetCb(adoptedStyleSheetData);\n    }\n    reset() {\n        this.styleMirror.reset();\n        this.trackedLinkElements = new WeakSet();\n    }\n    trackStylesheetInLinkElement(linkEl) {\n    }\n}\n\nclass ProcessedNodeManager {\n    constructor() {\n        this.nodeMap = new WeakMap();\n        this.loop = true;\n        this.periodicallyClear();\n    }\n    periodicallyClear() {\n        onRequestAnimationFrame(() => {\n            this.clear();\n            if (this.loop)\n                this.periodicallyClear();\n        });\n    }\n    inOtherBuffer(node, thisBuffer) {\n        const buffers = this.nodeMap.get(node);\n        return (buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer));\n    }\n    add(node, buffer) {\n        this.nodeMap.set(node, (this.nodeMap.get(node) || new Set()).add(buffer));\n    }\n    clear() {\n        this.nodeMap = new WeakMap();\n    }\n    destroy() {\n        this.loop = false;\n    }\n}\n\nfunction wrapEvent(e) {\n    const eWithTime = e;\n    eWithTime.timestamp = nowTimestamp();\n    return eWithTime;\n}\nlet _takeFullSnapshot;\nconst mirror = createMirror();\nfunction record(options = {}) {\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskAttributeFn, maskInputFn, maskTextFn, packFn, sampling = {}, dataURLOptions = {}, mousemoveWait, recordCanvas = false, recordCrossOriginIframes = false, recordAfter = options.recordAfter === 'DOMContentLoaded'\n        ? options.recordAfter\n        : 'load', userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, ignoreCSSAttributes = new Set([]), errorHandler, onMutation, getCanvasManager, } = options;\n    registerErrorHandler(errorHandler);\n    const inEmittingFrame = recordCrossOriginIframes\n        ? window.parent === window\n        : true;\n    let passEmitsToParent = false;\n    if (!inEmittingFrame) {\n        try {\n            if (window.parent.document) {\n                passEmitsToParent = false;\n            }\n        }\n        catch (e) {\n            passEmitsToParent = true;\n        }\n    }\n    if (inEmittingFrame && !emit) {\n        throw new Error('emit function is required');\n    }\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\n        sampling.mousemove = mousemoveWait;\n    }\n    mirror.reset();\n    const maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n            radio: true,\n            checkbox: true,\n        }\n        : _maskInputOptions !== undefined\n            ? _maskInputOptions\n            : {};\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\n        ? {\n            script: true,\n            comment: true,\n            headFavicon: true,\n            headWhitespace: true,\n            headMetaSocial: true,\n            headMetaRobots: true,\n            headMetaHttpEquiv: true,\n            headMetaVerification: true,\n            headMetaAuthorship: _slimDOMOptions === 'all',\n            headMetaDescKeywords: _slimDOMOptions === 'all',\n        }\n        : _slimDOMOptions\n            ? _slimDOMOptions\n            : {};\n    polyfill();\n    let lastFullSnapshotEvent;\n    let incrementalSnapshotCount = 0;\n    const eventProcessor = (e) => {\n        for (const plugin of plugins || []) {\n            if (plugin.eventProcessor) {\n                e = plugin.eventProcessor(e);\n            }\n        }\n        if (packFn &&\n            !passEmitsToParent) {\n            e = packFn(e);\n        }\n        return e;\n    };\n    const wrappedEmit = (e, isCheckout) => {\n        if (_optionalChain([mutationBuffers, 'access', _ => _[0], 'optionalAccess', _2 => _2.isFrozen, 'call', _3 => _3()]) &&\n            e.type !== EventType.FullSnapshot &&\n            !(e.type === EventType.IncrementalSnapshot &&\n                e.data.source === IncrementalSource.Mutation)) {\n            mutationBuffers.forEach((buf) => buf.unfreeze());\n        }\n        if (inEmittingFrame) {\n            _optionalChain([emit, 'optionalCall', _4 => _4(eventProcessor(e), isCheckout)]);\n        }\n        else if (passEmitsToParent) {\n            const message = {\n                type: 'rrweb',\n                event: eventProcessor(e),\n                origin: window.location.origin,\n                isCheckout,\n            };\n            window.parent.postMessage(message, '*');\n        }\n        if (e.type === EventType.FullSnapshot) {\n            lastFullSnapshotEvent = e;\n            incrementalSnapshotCount = 0;\n        }\n        else if (e.type === EventType.IncrementalSnapshot) {\n            if (e.data.source === IncrementalSource.Mutation &&\n                e.data.isAttachIframe) {\n                return;\n            }\n            incrementalSnapshotCount++;\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\n            const exceedTime = checkoutEveryNms &&\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\n            if (exceedCount || exceedTime) {\n                takeFullSnapshot(true);\n            }\n        }\n    };\n    const wrappedMutationEmit = (m) => {\n        wrappedEmit(wrapEvent({\n            type: EventType.IncrementalSnapshot,\n            data: {\n                source: IncrementalSource.Mutation,\n                ...m,\n            },\n        }));\n    };\n    const wrappedScrollEmit = (p) => wrappedEmit(wrapEvent({\n        type: EventType.IncrementalSnapshot,\n        data: {\n            source: IncrementalSource.Scroll,\n            ...p,\n        },\n    }));\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit(wrapEvent({\n        type: EventType.IncrementalSnapshot,\n        data: {\n            source: IncrementalSource.CanvasMutation,\n            ...p,\n        },\n    }));\n    const wrappedAdoptedStyleSheetEmit = (a) => wrappedEmit(wrapEvent({\n        type: EventType.IncrementalSnapshot,\n        data: {\n            source: IncrementalSource.AdoptedStyleSheet,\n            ...a,\n        },\n    }));\n    const stylesheetManager = new StylesheetManager({\n        mutationCb: wrappedMutationEmit,\n        adoptedStyleSheetCb: wrappedAdoptedStyleSheetEmit,\n    });\n    const iframeManager = typeof __RRWEB_EXCLUDE_IFRAME__ === 'boolean' && __RRWEB_EXCLUDE_IFRAME__\n        ? new IframeManagerNoop()\n        : new IframeManager({\n            mirror,\n            mutationCb: wrappedMutationEmit,\n            stylesheetManager: stylesheetManager,\n            recordCrossOriginIframes,\n            wrappedEmit,\n        });\n    for (const plugin of plugins || []) {\n        if (plugin.getMirror)\n            plugin.getMirror({\n                nodeMirror: mirror,\n                crossOriginIframeMirror: iframeManager.crossOriginIframeMirror,\n                crossOriginIframeStyleMirror: iframeManager.crossOriginIframeStyleMirror,\n            });\n    }\n    const processedNodeManager = new ProcessedNodeManager();\n    const canvasManager = _getCanvasManager(getCanvasManager, {\n        mirror,\n        win: window,\n        mutationCb: (p) => wrappedEmit(wrapEvent({\n            type: EventType.IncrementalSnapshot,\n            data: {\n                source: IncrementalSource.CanvasMutation,\n                ...p,\n            },\n        })),\n        recordCanvas,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        sampling: sampling['canvas'],\n        dataURLOptions,\n        errorHandler,\n    });\n    const shadowDomManager = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ === 'boolean' &&\n        __RRWEB_EXCLUDE_SHADOW_DOM__\n        ? new ShadowDomManagerNoop()\n        : new ShadowDomManager({\n            mutationCb: wrappedMutationEmit,\n            scrollCb: wrappedScrollEmit,\n            bypassOptions: {\n                onMutation,\n                blockClass,\n                blockSelector,\n                unblockSelector,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                inlineStylesheet,\n                maskInputOptions,\n                dataURLOptions,\n                maskAttributeFn,\n                maskTextFn,\n                maskInputFn,\n                recordCanvas,\n                inlineImages,\n                sampling,\n                slimDOMOptions,\n                iframeManager,\n                stylesheetManager,\n                canvasManager,\n                keepIframeSrcFn,\n                processedNodeManager,\n            },\n            mirror,\n        });\n    const takeFullSnapshot = (isCheckout = false) => {\n        wrappedEmit(wrapEvent({\n            type: EventType.Meta,\n            data: {\n                href: window.location.href,\n                width: getWindowWidth(),\n                height: getWindowHeight(),\n            },\n        }), isCheckout);\n        stylesheetManager.reset();\n        shadowDomManager.init();\n        mutationBuffers.forEach((buf) => buf.lock());\n        const node = snapshot(document, {\n            mirror,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskAllText,\n            maskTextClass,\n            unmaskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            inlineStylesheet,\n            maskAllInputs: maskInputOptions,\n            maskAttributeFn,\n            maskInputFn,\n            maskTextFn,\n            slimDOM: slimDOMOptions,\n            dataURLOptions,\n            recordCanvas,\n            inlineImages,\n            onSerialize: (n) => {\n                if (isSerializedIframe(n, mirror)) {\n                    iframeManager.addIframe(n);\n                }\n                if (isSerializedStylesheet(n, mirror)) {\n                    stylesheetManager.trackLinkElement(n);\n                }\n                if (hasShadowRoot(n)) {\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\n                }\n            },\n            onIframeLoad: (iframe, childSn) => {\n                iframeManager.attachIframe(iframe, childSn);\n                shadowDomManager.observeAttachShadow(iframe);\n            },\n            onStylesheetLoad: (linkEl, childSn) => {\n                stylesheetManager.attachLinkElement(linkEl, childSn);\n            },\n            keepIframeSrcFn,\n        });\n        if (!node) {\n            return console.warn('Failed to snapshot the document');\n        }\n        wrappedEmit(wrapEvent({\n            type: EventType.FullSnapshot,\n            data: {\n                node,\n                initialOffset: getWindowScroll(window),\n            },\n        }));\n        mutationBuffers.forEach((buf) => buf.unlock());\n        if (document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0)\n            stylesheetManager.adoptStyleSheets(document.adoptedStyleSheets, mirror.getId(document));\n    };\n    _takeFullSnapshot = takeFullSnapshot;\n    try {\n        const handlers = [];\n        const observe = (doc) => {\n            return callbackWrapper(initObservers)({\n                onMutation,\n                mutationCb: wrappedMutationEmit,\n                mousemoveCb: (positions, source) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source,\n                        positions,\n                    },\n                })),\n                mouseInteractionCb: (d) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.MouseInteraction,\n                        ...d,\n                    },\n                })),\n                scrollCb: wrappedScrollEmit,\n                viewportResizeCb: (d) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.ViewportResize,\n                        ...d,\n                    },\n                })),\n                inputCb: (v) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.Input,\n                        ...v,\n                    },\n                })),\n                mediaInteractionCb: (p) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.MediaInteraction,\n                        ...p,\n                    },\n                })),\n                styleSheetRuleCb: (r) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.StyleSheetRule,\n                        ...r,\n                    },\n                })),\n                styleDeclarationCb: (r) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.StyleDeclaration,\n                        ...r,\n                    },\n                })),\n                canvasMutationCb: wrappedCanvasMutationEmit,\n                fontCb: (p) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.Font,\n                        ...p,\n                    },\n                })),\n                selectionCb: (p) => {\n                    wrappedEmit(wrapEvent({\n                        type: EventType.IncrementalSnapshot,\n                        data: {\n                            source: IncrementalSource.Selection,\n                            ...p,\n                        },\n                    }));\n                },\n                customElementCb: (c) => {\n                    wrappedEmit(wrapEvent({\n                        type: EventType.IncrementalSnapshot,\n                        data: {\n                            source: IncrementalSource.CustomElement,\n                            ...c,\n                        },\n                    }));\n                },\n                blockClass,\n                ignoreClass,\n                ignoreSelector,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                maskInputOptions,\n                inlineStylesheet,\n                sampling,\n                recordCanvas,\n                inlineImages,\n                userTriggeredOnInput,\n                collectFonts,\n                doc,\n                maskAttributeFn,\n                maskInputFn,\n                maskTextFn,\n                keepIframeSrcFn,\n                blockSelector,\n                unblockSelector,\n                slimDOMOptions,\n                dataURLOptions,\n                mirror,\n                iframeManager,\n                stylesheetManager,\n                shadowDomManager,\n                processedNodeManager,\n                canvasManager,\n                ignoreCSSAttributes,\n                plugins: _optionalChain([plugins\n, 'optionalAccess', _5 => _5.filter, 'call', _6 => _6((p) => p.observer)\n, 'optionalAccess', _7 => _7.map, 'call', _8 => _8((p) => ({\n                    observer: p.observer,\n                    options: p.options,\n                    callback: (payload) => wrappedEmit(wrapEvent({\n                        type: EventType.Plugin,\n                        data: {\n                            plugin: p.name,\n                            payload,\n                        },\n                    })),\n                }))]) || [],\n            }, {});\n        };\n        iframeManager.addLoadListener((iframeEl) => {\n            try {\n                handlers.push(observe(iframeEl.contentDocument));\n            }\n            catch (error) {\n                console.warn(error);\n            }\n        });\n        const init = () => {\n            takeFullSnapshot();\n            handlers.push(observe(document));\n        };\n        if (document.readyState === 'interactive' ||\n            document.readyState === 'complete') {\n            init();\n        }\n        else {\n            handlers.push(on('DOMContentLoaded', () => {\n                wrappedEmit(wrapEvent({\n                    type: EventType.DomContentLoaded,\n                    data: {},\n                }));\n                if (recordAfter === 'DOMContentLoaded')\n                    init();\n            }));\n            handlers.push(on('load', () => {\n                wrappedEmit(wrapEvent({\n                    type: EventType.Load,\n                    data: {},\n                }));\n                if (recordAfter === 'load')\n                    init();\n            }, window));\n        }\n        return () => {\n            handlers.forEach((h) => h());\n            processedNodeManager.destroy();\n            _takeFullSnapshot = undefined;\n            unregisterErrorHandler();\n        };\n    }\n    catch (error) {\n        console.warn(error);\n    }\n}\nfunction takeFullSnapshot(isCheckout) {\n    if (!_takeFullSnapshot) {\n        throw new Error('please take full snapshot after start recording');\n    }\n    _takeFullSnapshot(isCheckout);\n}\nrecord.mirror = mirror;\nrecord.takeFullSnapshot = takeFullSnapshot;\nfunction _getCanvasManager(getCanvasManagerFn, options) {\n    try {\n        return getCanvasManagerFn\n            ? getCanvasManagerFn(options)\n            : new CanvasManagerNoop();\n    }\n    catch (e2) {\n        console.warn('Unable to initialize CanvasManager');\n        return new CanvasManagerNoop();\n    }\n}\n\nconst ReplayEventTypeIncrementalSnapshot = 3;\nconst ReplayEventTypeCustom = 5;\n\n/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nfunction timestampToMs(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nfunction timestampToS(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Add a breadcrumb event to replay.\n */\nfunction addBreadcrumbEvent(replay, breadcrumb) {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category )) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: normalize(breadcrumb, 10, 1000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/** Get the closest interactive parent element, or else return the given element. */\nfunction getClosestInteractive(element) {\n  const closestInteractive = element.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || element;\n}\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nfunction getClickTargetNode(event) {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  return getClosestInteractive(target);\n}\n\n/** Get the event target node. */\nfunction getTargetNode(event) {\n  if (isEventWithTarget(event)) {\n    return event.target ;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event) {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n\nlet handlers;\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nfunction onWindowOpen(cb) {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers ).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen() {\n  fill(WINDOW, 'open', function (originalWindowOpen) {\n    return function (...args) {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch (e) {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n\n/** Handle a click. */\nfunction handleClick(clickDetector, clickBreadcrumb, node) {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nclass ClickDetector  {\n  // protected for testing\n\n   constructor(\n    replay,\n    slowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {\n    this._lastMutation = 0;\n    this._lastScroll = 0;\n    this._clicks = [];\n\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n   addListeners() {\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    this._teardown = () => {\n      cleanupWindowOpen();\n\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n   removeListeners() {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** @inheritDoc */\n   handleClick(breadcrumb, node) {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n\n    // If there was a click in the last 1s on the same element, ignore it - only keep a single reference per second\n    if (\n      this._clicks.some(click => click.node === newClick.node && Math.abs(click.timestamp - newClick.timestamp) < 1)\n    ) {\n      return;\n    }\n\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** @inheritDoc */\n   registerMutation(timestamp = Date.now()) {\n    this._lastMutation = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n   registerScroll(timestamp = Date.now()) {\n    this._lastScroll = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n   registerClick(element) {\n    const node = getClosestInteractive(element);\n    this._handleMultiClick(node );\n  }\n\n  /** Count multiple clicks on elements. */\n   _handleMultiClick(node) {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n   _getClicks(node) {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n   _checkClicks() {\n    const timedOutClicks = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n   _generateBreadcrumbs(click) {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n   _scheduleCheckClicks() {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nfunction ignoreElement(node, ignoreSelector) {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb) {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds() {\n  return Date.now() / 1000;\n}\n\n/** Update the click detector based on a recording event of rrweb. */\nfunction updateClickDetectorForRecordingEvent(clickDetector, event) {\n  try {\n    // note: We only consider incremental snapshots here\n    // This means that any full snapshot is ignored for mutation detection - the reason is that we simply cannot know if a mutation happened here.\n    // E.g. think that we are buffering, an error happens and we take a full snapshot because we switched to session mode -\n    // in this scenario, we would not know if a dead click happened because of the error, which is a key dead click scenario.\n    // Instead, by ignoring full snapshots, we have the risk that we generate a false positive\n    // (if a mutation _did_ happen but was \"swallowed\" by the full snapshot)\n    // But this should be more unlikely as we'd generally capture the incremental snapshot right away\n\n    if (!isIncrementalEvent(event)) {\n      return;\n    }\n\n    const { source } = event.data;\n    if (source === IncrementalSource.Mutation) {\n      clickDetector.registerMutation(event.timestamp);\n    }\n\n    if (source === IncrementalSource.Scroll) {\n      clickDetector.registerScroll(event.timestamp);\n    }\n\n    if (isIncrementalMouseInteraction(event)) {\n      const { type, id } = event.data;\n      const node = record.mirror.getNode(id);\n\n      if (node instanceof HTMLElement && type === MouseInteractions.Click) {\n        clickDetector.registerClick(node);\n      }\n    }\n  } catch (e) {\n    // ignore errors here, e.g. if accessing something that does not exist\n  }\n}\n\nfunction isIncrementalEvent(event) {\n  return event.type === ReplayEventTypeIncrementalSnapshot;\n}\n\nfunction isIncrementalMouseInteraction(\n  event,\n) {\n  return event.data.source === IncrementalSource.MouseInteraction;\n}\n\n/**\n * Create a breadcrumb for a replay.\n */\nfunction createBreadcrumb(\n  breadcrumb,\n) {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n\nvar NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType || (NodeType = {}));\n\n// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n  'data-sentry-component',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nfunction getAttributesToRecord(attributes) {\n  const obj = {};\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n\nconst handleDomListener = (\n  replay,\n) => {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick ? (handlerData.event ) : undefined;\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event &&\n      event.target &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result ,\n        getClickTargetNode(handlerData.event ) ,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nfunction getBaseDomBreadcrumb(target, message) {\n  const nodeId = record.mirror.getId(target);\n  const node = nodeId && record.mirror.getNode(nodeId);\n  const meta = node && record.mirror.getMeta(node);\n  const element = meta && isElement(meta) ? meta : null;\n\n  return {\n    message,\n    data: element\n      ? {\n          nodeId,\n          node: {\n            id: nodeId,\n            tagName: element.tagName,\n            textContent: Array.from(element.childNodes)\n              .map((node) => node.type === NodeType.Text && node.textContent)\n              .filter(Boolean) // filter out empty values\n              .map(text => (text ).trim())\n              .join(''),\n            attributes: getAttributesToRecord(element.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nfunction handleDom(handlerData) {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData) {\n  const isClick = handlerData.name === 'click';\n\n  let message;\n  let target = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event ) : getTargetNode(handlerData.event );\n    message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch (e) {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isElement(node) {\n  return node.type === NodeType.Element;\n}\n\n/** Handle keyboard events & create breadcrumbs. */\nfunction handleKeyboardEvent(replay, event) {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nfunction getKeyboardBreadcrumb(event) {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target ) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target , message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target) {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n\n// Map entryType -> function to normalize data for event\nconst ENTRY_TYPES\n\n = {\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n};\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nfunction createPerformanceEntries(\n  entries,\n) {\n  return entries.map(createPerformanceEntry).filter(Boolean) ;\n}\n\nfunction createPerformanceEntry(entry) {\n  if (!ENTRY_TYPES[entry.entryType]) {\n    return null;\n  }\n\n  return ENTRY_TYPES[entry.entryType](entry);\n}\n\nfunction getAbsoluteTime(time) {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry) {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry) {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry,\n) {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\n/**\n * Add a LCP event to the replay based on an LCP metric.\n */\nfunction getLargestContentfulPaint(metric\n\n) {\n  const entries = metric.entries;\n  const lastEntry = entries[entries.length - 1] ;\n  const element = lastEntry ? lastEntry.element : undefined;\n\n  const value = metric.value;\n\n  const end = getAbsoluteTime(value);\n\n  const data = {\n    type: 'largest-contentful-paint',\n    name: 'largest-contentful-paint',\n    start: end,\n    end,\n    data: {\n      value,\n      size: value,\n      nodeId: element ? record.mirror.getId(element) : undefined,\n    },\n  };\n\n  return data;\n}\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n * Returns a callback to stop observing.\n */\nfunction setupPerformanceObserver(replay) {\n  function addPerformanceEntry(entry) {\n    // It is possible for entries to come up multiple times\n    if (!replay.performanceEntries.includes(entry)) {\n      replay.performanceEntries.push(entry);\n    }\n  }\n\n  function onEntries({ entries }) {\n    entries.forEach(addPerformanceEntry);\n  }\n\n  const clearCallbacks = [];\n\n  (['navigation', 'paint', 'resource'] ).forEach(type => {\n    clearCallbacks.push(addPerformanceInstrumentationHandler(type, onEntries));\n  });\n\n  clearCallbacks.push(\n    addLcpInstrumentationHandler(({ metric }) => {\n      replay.replayPerformanceEntries.push(getLargestContentfulPaint(metric));\n    }),\n  );\n\n  // A callback to cleanup all handlers\n  return () => {\n    clearCallbacks.forEach(clearCallback => clearCallback());\n  };\n}\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nconst r = `var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},L=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},O=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},j=function(){function n(n,r){if(\"function\"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(L(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();function q(t,n){n||(n={});var r=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}}(),e=t.length;r.p(t);var i,a=L(t,n,10+((i=n).filename?i.filename.length+1:0),8),s=a.length;return function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&O(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}}(a,n),O(a,s-8,r.d()),O(a,s-4,e),a}var B=function(){function t(t,n){this.c=S(),this.v=1,j.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),j.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=L(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=S();i.p(n.dictionary),O(t,2,i.d())}}(r,this.o),this.v=0),n&&O(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),G=\"undefined\"!=typeof TextEncoder&&new TextEncoder,H=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{H.decode(F,{stream:!0})}catch(t){}var J=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(K(t),this.d=n||!1)},t}();function K(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(G)return G.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}const N=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const n=this._hasEvents?\",\":\"\";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push(\"]\",!0);const t=function(t){let n=0;for(let r=0,e=t.length;r<e;r++)n+=t[r].length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new B,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new J(((t,n)=>{this.deflate.push(t,n)})),this.stream.push(\"[\")}},P={clear:()=>{N.clear()},addEvent:t=>N.addEvent(t),finish:()=>N.finish(),compress:t=>function(t){return q(K(t))}(t)};addEventListener(\"message\",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in P&&\"function\"==typeof P[n])try{const t=P[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n\nfunction e(){const e=new Blob([r]);return URL.createObjectURL(e)}\n\n/**\n * Log a message in debug mode, and add a breadcrumb when _experiment.traceInternals is enabled.\n */\nfunction logInfo(message, shouldAddBreadcrumb) {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    addLogBreadcrumb(message);\n  }\n}\n\n/**\n * Log a message, and add a breadcrumb in the next tick.\n * This is necessary when the breadcrumb may be added before the replay is initialized.\n */\nfunction logInfoNextTick(message, shouldAddBreadcrumb) {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    // Wait a tick here to avoid race conditions for some initial logs\n    // which may be added before replay is initialized\n    setTimeout(() => {\n      addLogBreadcrumb(message);\n    }, 0);\n  }\n}\n\nfunction addLogBreadcrumb(message) {\n  addBreadcrumb(\n    {\n      category: 'console',\n      data: {\n        logger: 'replay',\n      },\n      level: 'info',\n      message,\n    },\n    { level: 'info' },\n  );\n}\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nclass EventBufferSizeExceededError extends Error {\n   constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nclass EventBufferArray  {\n  /** All the events that are buffered to be sent. */\n\n  /** @inheritdoc */\n\n   constructor() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   get hasEvents() {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n   destroy() {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n   async addEvent(event) {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n   finish() {\n    return new Promise(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n   clear() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass WorkerHandler {\n\n   constructor(worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n   ensureReady() {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }) => {\n          if ((data ).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n   destroy() {\n    logInfo('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n   postMessage(method, arg) {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }) => {\n        const response = data ;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          DEBUG_BUILD && logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response );\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n   _getAndIncrementId() {\n    return this._id++;\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass EventBufferCompressionWorker  {\n  /** @inheritdoc */\n\n   constructor(worker) {\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   get hasEvents() {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n   ensureReady() {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n   destroy() {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n   addEvent(event) {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n   finish() {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n   clear() {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    this._worker.postMessage('clear').then(null, e => {\n      DEBUG_BUILD && logger.warn('[Replay] Sending \"clear\" message to worker failed', e);\n    });\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n   _sendEventToWorker(data) {\n    return this._worker.postMessage('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n   async _finishRequest() {\n    const response = await this._worker.postMessage('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nclass EventBufferProxy  {\n\n   constructor(worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n   get hasEvents() {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritdoc */\n   get hasCheckout() {\n    return this._used.hasCheckout;\n  }\n  /** @inheritdoc */\n   set hasCheckout(value) {\n    this._used.hasCheckout = value;\n  }\n\n  /** @inheritDoc */\n   destroy() {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n   clear() {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n   addEvent(event) {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n   async finish() {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n   ensureWorkerIsLoaded() {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n   async _ensureWorkerIsLoaded() {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      logInfo('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n   async _switchToCompressionWorker() {\n    const { events, hasCheckout } = this._fallback;\n\n    const addEventPromises = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    this._compression.hasCheckout = hasCheckout;\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      DEBUG_BUILD && logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n\n/**\n * Create an event buffer for replays.\n */\nfunction createEventBuffer({\n  useCompression,\n  workerUrl: customWorkerUrl,\n}) {\n  if (\n    useCompression &&\n    // eslint-disable-next-line no-restricted-globals\n    window.Worker\n  ) {\n    const worker = _loadWorker(customWorkerUrl);\n\n    if (worker) {\n      return worker;\n    }\n  }\n\n  logInfo('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\nfunction _loadWorker(customWorkerUrl) {\n  try {\n    const workerUrl = customWorkerUrl || _getWorkerUrl();\n\n    if (!workerUrl) {\n      return;\n    }\n\n    logInfo(`[Replay] Using compression worker${customWorkerUrl ? ` from ${customWorkerUrl}` : ''}`);\n    const worker = new Worker(workerUrl);\n    return new EventBufferProxy(worker);\n  } catch (error) {\n    logInfo('[Replay] Failed to create compression worker');\n    // Fall back to use simple event buffer array\n  }\n}\n\nfunction _getWorkerUrl() {\n  if (typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ === 'undefined' || !__SENTRY_EXCLUDE_REPLAY_WORKER__) {\n    return e();\n  }\n\n  return '';\n}\n\n/** If sessionStorage is available. */\nfunction hasSessionStorage() {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nfunction clearSession(replay) {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession() {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch (e) {\n    // Ignore potential SecurityError exceptions\n  }\n}\n\n/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nfunction isSampled(sampleRate) {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n\n/**\n * Get a session with defaults & applied sampling.\n */\nfunction makeSession(session) {\n  const now = Date.now();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n  const previousSessionId = session.previousSessionId;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    previousSessionId,\n  };\n}\n\n/**\n * Save a session to session storage.\n */\nfunction saveSession(session) {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch (e) {\n    // Ignore potential SecurityError exceptions\n  }\n}\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nfunction getSessionSampleType(sessionSampleRate, allowBuffering) {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nfunction createSession(\n  { sessionSampleRate, allowBuffering, stickySession = false },\n  { previousSessionId } = {},\n) {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n    previousSessionId,\n  });\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n\n/**\n * Fetches a session from storage\n */\nfunction fetchSession(traceInternals) {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) ;\n\n    logInfoNextTick('[Replay] Loading existing session', traceInternals);\n\n    return makeSession(sessionObj);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nfunction isExpired(\n  initialTime,\n  expiry,\n  targetTime = +new Date(),\n) {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n\n/**\n * Checks to see if session is expired\n */\nfunction isSessionExpired(\n  session,\n  {\n    maxReplayDuration,\n    sessionIdleExpire,\n    targetTime = Date.now(),\n  },\n) {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, maxReplayDuration, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, sessionIdleExpire, targetTime)\n  );\n}\n\n/** If the session should be refreshed or not. */\nfunction shouldRefreshSession(\n  session,\n  { sessionIdleExpire, maxReplayDuration },\n) {\n  // If not expired, all good, just keep the session\n  if (!isSessionExpired(session, { sessionIdleExpire, maxReplayDuration })) {\n    return false;\n  }\n\n  // If we are buffering & haven't ever flushed yet, always continue\n  if (session.sampled === 'buffer' && session.segmentId === 0) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Get or create a session, when initializing the replay.\n * Returns a session that may be unsampled.\n */\nfunction loadOrCreateSession(\n  {\n    traceInternals,\n    sessionIdleExpire,\n    maxReplayDuration,\n    previousSessionId,\n  }\n\n,\n  sessionOptions,\n) {\n  const existingSession = sessionOptions.stickySession && fetchSession(traceInternals);\n\n  // No session exists yet, just create a new one\n  if (!existingSession) {\n    logInfoNextTick('[Replay] Creating new session', traceInternals);\n    return createSession(sessionOptions, { previousSessionId });\n  }\n\n  if (!shouldRefreshSession(existingSession, { sessionIdleExpire, maxReplayDuration })) {\n    return existingSession;\n  }\n\n  logInfoNextTick('[Replay] Session in sessionStorage is expired, creating new one...');\n  return createSession(sessionOptions, { previousSessionId: existingSession.id });\n}\n\nfunction isCustomEvent(event) {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * In contrast to `addEvent`, this does not return a promise & does not wait for the adding of the event to succeed/fail.\n * Instead this returns `true` if we tried to add the event, else false.\n * It returns `false` e.g. if we are paused, disabled, or out of the max replay duration.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nfunction addEventSync(replay, event, isCheckout) {\n  if (!shouldAddEvent(replay, event)) {\n    return false;\n  }\n\n  // This should never reject\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  _addEvent(replay, event, isCheckout);\n\n  return true;\n}\n\n/**\n * Add an event to the event buffer.\n * Resolves to `null` if no event was added, else to `void`.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nfunction addEvent(\n  replay,\n  event,\n  isCheckout,\n) {\n  if (!shouldAddEvent(replay, event)) {\n    return Promise.resolve(null);\n  }\n\n  return _addEvent(replay, event, isCheckout);\n}\n\nasync function _addEvent(\n  replay,\n  event,\n  isCheckout,\n) {\n  if (!replay.eventBuffer) {\n    return null;\n  }\n\n  try {\n    if (isCheckout && replay.recordingMode === 'buffer') {\n      replay.eventBuffer.clear();\n    }\n\n    if (isCheckout) {\n      replay.eventBuffer.hasCheckout = true;\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await replay.eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const reason = error && error instanceof EventBufferSizeExceededError ? 'addEventSizeExceeded' : 'addEvent';\n\n    DEBUG_BUILD && logger.error(error);\n    await replay.stop({ reason });\n\n    const client = getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\n/** Exported only for tests. */\nfunction shouldAddEvent(replay, event) {\n  if (!replay.eventBuffer || replay.isPaused() || !replay.isEnabled()) {\n    return false;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return false;\n  }\n\n  // Throw out events that are +60min from the initial timestamp\n  if (timestampInMs > replay.getContext().initialTimestamp + replay.getOptions().maxReplayDuration) {\n    logInfo(\n      `[Replay] Skipping event with timestamp ${timestampInMs} because it is after maxReplayDuration`,\n      replay.getOptions()._experiments.traceInternals,\n    );\n    return false;\n  }\n\n  return true;\n}\n\nfunction maybeApplyCallback(\n  event,\n  callback,\n) {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    DEBUG_BUILD &&\n      logger.error('[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...', error);\n    return null;\n  }\n\n  return event;\n}\n\n/** If the event is an error event */\nfunction isErrorEvent(event) {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nfunction isReplayEvent(event) {\n  return event.type === 'replay_event';\n}\n\n/** If the event is a feedback event */\nfunction isFeedbackEvent(event) {\n  return event.type === 'feedback';\n}\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nfunction handleAfterSendEvent(replay) {\n  // Custom transports may still be returning `Promise<void>`, which means we cannot expect the status code to be available there\n  // TODO (v8): remove this check as it will no longer be necessary\n  const enforceStatusCode = isBaseTransportSend();\n\n  return (event, sendResponse) => {\n    if (!replay.isEnabled() || (!isErrorEvent(event) && !isTransactionEvent(event))) {\n      return;\n    }\n\n    const statusCode = sendResponse && sendResponse.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (enforceStatusCode && (!statusCode || statusCode < 200 || statusCode >= 300)) {\n      return;\n    }\n\n    if (isTransactionEvent(event)) {\n      handleTransactionEvent(replay, event);\n      return;\n    }\n\n    handleErrorEvent(replay, event);\n  };\n}\n\nfunction handleTransactionEvent(replay, event) {\n  const replayContext = replay.getContext();\n\n  // Collect traceIds in _context regardless of `recordingMode`\n  // In error mode, _context gets cleared on every checkout\n  // We limit to max. 100 transactions linked\n  if (event.contexts && event.contexts.trace && event.contexts.trace.trace_id && replayContext.traceIds.size < 100) {\n    replayContext.traceIds.add(event.contexts.trace.trace_id );\n  }\n}\n\nfunction handleErrorEvent(replay, event) {\n  const replayContext = replay.getContext();\n\n  // Add error to list of errorIds of replay. This is ok to do even if not\n  // sampled because context will get reset at next checkout.\n  // XXX: There is also a race condition where it's possible to capture an\n  // error to Sentry before Replay SDK has loaded, but response returns after\n  // it was loaded, and this gets called.\n  // We limit to max. 100 errors linked\n  if (event.event_id && replayContext.errorIds.size < 100) {\n    replayContext.errorIds.add(event.event_id);\n  }\n\n  // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n  // Need to be very careful that this does not cause an infinite loop\n  if (replay.recordingMode !== 'buffer' || !event.tags || !event.tags.replayId) {\n    return;\n  }\n\n  const { beforeErrorSampling } = replay.getOptions();\n  if (typeof beforeErrorSampling === 'function' && !beforeErrorSampling(event)) {\n    return;\n  }\n\n  setTimeout(() => {\n    // Capture current event buffer as new replay\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.sendBufferedReplayOrFlush();\n  });\n}\n\nfunction isBaseTransportSend() {\n  const client = getClient();\n  if (!client) {\n    return false;\n  }\n\n  const transport = client.getTransport();\n  if (!transport) {\n    return false;\n  }\n\n  return (\n    (transport.send ).__sentry__baseTransport__ || false\n  );\n}\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nfunction handleBeforeSendEvent(replay) {\n  return (event) => {\n    if (!replay.isEnabled() || !isErrorEvent(event)) {\n      return;\n    }\n\n    handleHydrationError(replay, event);\n  };\n}\n\nfunction handleHydrationError(replay, event) {\n  const exceptionValue = event.exception && event.exception.values && event.exception.values[0].value;\n  if (typeof exceptionValue !== 'string') {\n    return;\n  }\n\n  if (\n    // Only matches errors in production builds of react-dom\n    // Example https://reactjs.org/docs/error-decoder.html?invariant=423\n    exceptionValue.match(/reactjs\\.org\\/docs\\/error-decoder\\.html\\?invariant=(418|419|422|423|425)/) ||\n    // Development builds of react-dom\n    // Error 1: Hydration failed because the initial UI does not match what was rendered on the server.\n    // Error 2: Text content does not match server-rendered HTML. Warning: Text content did not match.\n    exceptionValue.match(/(does not match server-rendered HTML|Hydration failed because)/i)\n  ) {\n    const breadcrumb = createBreadcrumb({\n      category: 'replay.hydrate-error',\n    });\n    addBreadcrumbEvent(replay, breadcrumb);\n  }\n}\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nfunction isRrwebError(event, hint) {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-expect-error this may be set by rrweb when it finds errors\n  if (hint.originalException && hint.originalException.__rrweb__) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Add a feedback breadcrumb event to replay.\n */\nfunction addFeedbackBreadcrumb(replay, event) {\n  replay.triggerUserActivity();\n  replay.addUpdate(() => {\n    if (!event.timestamp) {\n      // Ignore events that don't have timestamps (this shouldn't happen, more of a typing issue)\n      // Return true here so that we don't flush\n      return true;\n    }\n\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: event.timestamp * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: {\n          timestamp: event.timestamp,\n          type: 'default',\n          category: 'sentry.feedback',\n          data: {\n            feedbackId: event.event_id,\n          },\n        },\n      },\n    } );\n\n    return false;\n  });\n}\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `hanldleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nfunction shouldSampleForBufferEvent(replay, event) {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n\n/**\n * Returns a listener to be added to `addEventProcessor(listener)`.\n */\nfunction handleGlobalEventListener(\n  replay,\n  includeAfterSendEventHandling = false,\n) {\n  const afterSendHandler = includeAfterSendEventHandling ? handleAfterSendEvent(replay) : undefined;\n\n  return Object.assign(\n    (event, hint) => {\n      // Do nothing if replay has been disabled\n      if (!replay.isEnabled()) {\n        return event;\n      }\n\n      if (isReplayEvent(event)) {\n        // Replays have separate set of breadcrumbs, do not include breadcrumbs\n        // from core SDK\n        delete event.breadcrumbs;\n        return event;\n      }\n\n      // We only want to handle errors, transactions, and feedbacks, nothing else\n      if (!isErrorEvent(event) && !isTransactionEvent(event) && !isFeedbackEvent(event)) {\n        return event;\n      }\n\n      // Ensure we do not add replay_id if the session is expired\n      const isSessionActive = replay.checkAndHandleExpiredSession();\n      if (!isSessionActive) {\n        return event;\n      }\n\n      if (isFeedbackEvent(event)) {\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        replay.flush();\n        event.contexts.feedback.replay_id = replay.getSessionId();\n        // Add a replay breadcrumb for this piece of feedback\n        addFeedbackBreadcrumb(replay, event);\n        return event;\n      }\n\n      // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n      // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n      if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n        DEBUG_BUILD && logger.log('[Replay] Ignoring error from rrweb internals', event);\n        return null;\n      }\n\n      // When in buffer mode, we decide to sample here.\n      // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n      // And convert the buffer session to a full session\n      const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n      // Tag errors if it has been sampled in buffer mode, or if it is session mode\n      // Only tag transactions if in session mode\n      const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n      if (shouldTagReplayId) {\n        event.tags = { ...event.tags, replayId: replay.getSessionId() };\n      }\n\n      // In cases where a custom client is used that does not support the new hooks (yet),\n      // we manually call this hook method here\n      if (afterSendHandler) {\n        // Pretend the error had a 200 response so we always capture it\n        afterSendHandler(event, { statusCode: 200 });\n      }\n\n      return event;\n    },\n    { id: 'Replay' },\n  );\n}\n\n/**\n * Create a \"span\" for each performance entry.\n */\nfunction createPerformanceSpans(\n  replay,\n  entries,\n) {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n\nfunction handleHistory(handlerData) {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addHistoryInstrumentationHandler(listener)`.\n */\nfunction handleHistorySpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nfunction shouldFilterRequest(replay, url) {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if (DEBUG_BUILD && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return isSentryRequestUrl(url, getClient());\n}\n\n/** Add a performance entry breadcrumb */\nfunction addNetworkBreadcrumb(\n  replay,\n  result,\n) {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n\n/** only exported for tests */\nfunction handleFetch(handlerData) {\n  const { startTimestamp, endTimestamp, fetchData, response } = handlerData;\n\n  if (!endTimestamp) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url } = fetchData;\n\n  return {\n    type: 'resource.fetch',\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: {\n      method,\n      statusCode: response ? (response ).status : undefined,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addFetchInstrumentationHandler(listener)`.\n */\nfunction handleFetchSpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleFetch(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n\n/** only exported for tests */\nfunction handleXhr(handlerData) {\n  const { startTimestamp, endTimestamp, xhr } = handlerData;\n\n  const sentryXhrData = xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url, status_code: statusCode } = sentryXhrData;\n\n  if (url === undefined) {\n    return null;\n  }\n\n  return {\n    type: 'resource.xhr',\n    name: url,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    data: {\n      method,\n      statusCode,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addXhrInstrumentationHandler(listener)`.\n */\nfunction handleXhrSpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleXhr(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n\n/** Get the size of a body. */\nfunction getBodySize(\n  body,\n  textEncoder,\n) {\n  if (!body) {\n    return undefined;\n  }\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = _serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch (e) {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nfunction parseContentLengthHeader(header) {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Get the string representation of a body. */\nfunction getBodyString(body) {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof URLSearchParams) {\n      return [body.toString()];\n    }\n\n    if (body instanceof FormData) {\n      return [_serializeFormData(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch (e2) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\n/** Merge a warning into an existing network request/response. */\nfunction mergeWarning(\n  info,\n  warning,\n) {\n  if (!info) {\n    return {\n      headers: {},\n      size: undefined,\n      _meta: {\n        warnings: [warning],\n      },\n    };\n  }\n\n  const newMeta = { ...info._meta };\n  const existingWarnings = newMeta.warnings || [];\n  newMeta.warnings = [...existingWarnings, warning];\n\n  info._meta = newMeta;\n  return info;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nfunction makeNetworkReplayBreadcrumb(\n  type,\n  data,\n) {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: dropUndefinedKeys({\n      method,\n      statusCode,\n      request,\n      response,\n    }),\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nfunction buildSkippedNetworkRequestOrResponse(bodySize) {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nfunction buildNetworkRequestOrResponse(\n  headers,\n  bodySize,\n  body,\n) {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings && warnings.length > 0) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nfunction getAllowedHeaders(headers, allowedHeaders) {\n  return Object.keys(headers).reduce((filteredHeaders, key) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = headers[key];\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction _serializeFormData(formData) {\n  // This is a bit simplified, but gives us a decent estimate\n  // This converts e.g. { name: 'Anne Smith', age: 13 } to 'name=Anne+Smith&age=13'\n  // @ts-expect-error passing FormData to URLSearchParams actually works\n  return new URLSearchParams(formData).toString();\n}\n\nfunction normalizeNetworkBody(body)\n\n {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n  const isProbablyJson = _strIsProbablyJson(body);\n\n  if (exceedsSizeLimit) {\n    const truncatedBody = body.slice(0, NETWORK_BODY_MAX_SIZE);\n\n    if (isProbablyJson) {\n      return {\n        body: truncatedBody,\n        warnings: ['MAYBE_JSON_TRUNCATED'],\n      };\n    }\n\n    return {\n      body: `${truncatedBody}…`,\n      warnings: ['TEXT_TRUNCATED'],\n    };\n  }\n\n  if (isProbablyJson) {\n    try {\n      const jsonBody = JSON.parse(body);\n      return {\n        body: jsonBody,\n      };\n    } catch (e3) {\n      // fall back to just send the body as string\n    }\n  }\n\n  return {\n    body,\n  };\n}\n\nfunction _strIsProbablyJson(str) {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nfunction urlMatches(url, urls) {\n  const fullUrl = getFullUrl(url);\n\n  return stringMatchesSomePattern(fullUrl, urls);\n}\n\n/** exported for tests */\nfunction getFullUrl(url, baseURI = WINDOW.document.baseURI) {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nasync function captureFetchBreadcrumbToReplay(\n  breadcrumb,\n  hint,\n  options\n\n,\n) {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nfunction enrichFetchBreadcrumb(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const { input, response } = hint;\n\n  const body = input ? _getFetchRequestArgBody(input) : undefined;\n  const reqSize = getBodySize(body, options.textEncoder);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb,\n  hint,\n  options\n\n,\n) {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders },\n  input,\n  requestBodySize,\n) {\n  const headers = input ? getRequestHeaders(input, networkRequestHeaders) : {};\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = _getFetchRequestArgBody(input);\n  const [bodyStr, warning] = getBodyString(requestBody);\n  const data = buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n\n  if (warning) {\n    return mergeWarning(data, warning);\n  }\n\n  return data;\n}\n\n/** Exported only for tests. */\nasync function _getResponseInfo(\n  captureDetails,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    networkResponseHeaders,\n  }\n\n,\n  response,\n  responseBodySize,\n) {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = response ? getAllHeaders(response.headers, networkResponseHeaders) : {};\n\n  if (!response || (!networkCaptureBodies && responseBodySize !== undefined)) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  const [bodyText, warning] = await _parseFetchResponseBody(response);\n  const result = getResponseData(bodyText, {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  });\n\n  if (warning) {\n    return mergeWarning(result, warning);\n  }\n\n  return result;\n}\n\nfunction getResponseData(\n  bodyText,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  }\n\n,\n) {\n  try {\n    const size =\n      bodyText && bodyText.length && responseBodySize === undefined\n        ? getBodySize(bodyText, textEncoder)\n        : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize response body', error);\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchResponseBody(response) {\n  const res = _tryCloneResponse(response);\n\n  if (!res) {\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  try {\n    const text = await _tryGetResponseText(res);\n    return [text];\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to get text body from response', error);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n}\n\nfunction _getFetchRequestArgBody(fetchArgs = []) {\n  // We only support getting the body from the fetch options\n  if (fetchArgs.length !== 2 || typeof fetchArgs[1] !== 'object') {\n    return undefined;\n  }\n\n  return (fetchArgs[1] ).body;\n}\n\nfunction getAllHeaders(headers, allowedHeaders) {\n  const allHeaders = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) ;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs, allowedHeaders) {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] , allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] , allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input,\n  allowedHeaders,\n) {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\nfunction _tryCloneResponse(response) {\n  try {\n    // We have to clone this, as the body can only be read once\n    return response.clone();\n  } catch (error) {\n    // this can throw if the response was already consumed before\n    DEBUG_BUILD && logger.warn('[Replay] Failed to clone response body', error);\n  }\n}\n\n/**\n * Get the response body of a fetch request, or timeout after 500ms.\n * Fetch can return a streaming body, that may not resolve (or not for a long time).\n * If that happens, we rather abort after a short time than keep waiting for this.\n */\nfunction _tryGetResponseText(response) {\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(() => reject(new Error('Timeout while trying to read response body')), 500);\n\n    _getResponseText(response)\n      .then(\n        txt => resolve(txt),\n        reason => reject(reason),\n      )\n      .finally(() => clearTimeout(timeout));\n  });\n}\n\nasync function _getResponseText(response) {\n  // Force this to be a promise, just to be safe\n  // eslint-disable-next-line no-return-await\n  return await response.text();\n}\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nasync function captureXhrBreadcrumbToReplay(\n  breadcrumb,\n  hint,\n  options,\n) {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture xhr breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nfunction enrichXhrBreadcrumb(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const { xhr, input } = hint;\n\n  if (!xhr) {\n    return;\n  }\n\n  const reqSize = getBodySize(input, options.textEncoder);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : _getBodySize(xhr.response, xhr.responseType, options.textEncoder);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!xhr || !urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  const xhrInfo = xhr[SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const [requestBody, requestWarning] = options.networkCaptureBodies ? getBodyString(input) : [undefined];\n  const [responseBody, responseWarning] = options.networkCaptureBodies ? _getXhrResponseBody(xhr) : [undefined];\n\n  const request = buildNetworkRequestOrResponse(networkRequestHeaders, requestBodySize, requestBody);\n  const response = buildNetworkRequestOrResponse(networkResponseHeaders, responseBodySize, responseBody);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request: requestWarning ? mergeWarning(request, requestWarning) : request,\n    response: responseWarning ? mergeWarning(response, responseWarning) : response,\n  };\n}\n\nfunction getResponseHeaders(xhr) {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc, line) => {\n    const [key, value] = line.split(': ');\n    acc[key.toLowerCase()] = value;\n    return acc;\n  }, {});\n}\n\nfunction _getXhrResponseBody(xhr) {\n  // We collect errors that happen, but only log them if we can't get any response body\n  const errors = [];\n\n  try {\n    return [xhr.responseText];\n  } catch (e) {\n    errors.push(e);\n  }\n\n  // Try to manually parse the response body, if responseText fails\n  try {\n    return _parseXhrResponse(xhr.response, xhr.responseType);\n  } catch (e) {\n    errors.push(e);\n  }\n\n  DEBUG_BUILD && logger.warn('[Replay] Failed to get xhr response body', ...errors);\n\n  return [undefined];\n}\n\n/**\n * Get the string representation of the XHR response.\n * Based on MDN, these are the possible types of the response:\n * string\n * ArrayBuffer\n * Blob\n * Document\n * POJO\n *\n * Exported only for tests.\n */\nfunction _parseXhrResponse(\n  body,\n  responseType,\n) {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof Document) {\n      return [body.body.outerHTML];\n    }\n\n    if (responseType === 'json' && body && typeof body === 'object') {\n      return [JSON.stringify(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch (e2) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\nfunction _getBodySize(\n  body,\n  responseType,\n  textEncoder,\n) {\n  try {\n    const bodyStr = responseType === 'json' && body && typeof body === 'object' ? JSON.stringify(body) : body;\n    return getBodySize(bodyStr, textEncoder);\n  } catch (e3) {\n    return undefined;\n  }\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nfunction handleNetworkBreadcrumbs(replay) {\n  const client = getClient();\n\n  try {\n    const textEncoder = new TextEncoder();\n\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options = {\n      replay,\n      textEncoder,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client && client.on) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    } else {\n      // Fallback behavior\n      addFetchInstrumentationHandler(handleFetchSpanListener(replay));\n      addXhrInstrumentationHandler(handleXhrSpanListener(replay));\n    }\n  } catch (e2) {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nfunction beforeAddNetworkBreadcrumb(\n  options,\n  breadcrumb,\n  hint,\n) {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    DEBUG_BUILD && logger.warn('Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb) {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb) {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint) {\n  return hint && hint.xhr;\n}\n\nfunction _isFetchHint(hint) {\n  return hint && hint.response;\n}\n\nlet _LAST_BREADCRUMB = null;\n\nfunction isBreadcrumbWithCategory(breadcrumb) {\n  return !!breadcrumb.category;\n}\n\nconst handleScopeListener =\n  (replay) =>\n  (scope) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleScope(scope);\n\n    if (!result) {\n      return;\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n\n/**\n * An event handler to handle scope changes.\n */\nfunction handleScope(scope) {\n  // TODO (v8): Remove this guard. This was put in place because we introduced\n  // Scope.getLastBreadcrumb mid-v7 which caused incompatibilities with older SDKs.\n  // For now, we'll just return null if the method doesn't exist but we should eventually\n  // get rid of this guard.\n  const newBreadcrumb = scope.getLastBreadcrumb && scope.getLastBreadcrumb();\n\n  // Listener can be called when breadcrumbs have not changed, so we store the\n  // reference to the last crumb and only return a crumb if it has changed\n  if (_LAST_BREADCRUMB === newBreadcrumb || !newBreadcrumb) {\n    return null;\n  }\n\n  _LAST_BREADCRUMB = newBreadcrumb;\n\n  if (\n    !isBreadcrumbWithCategory(newBreadcrumb) ||\n    ['fetch', 'xhr', 'sentry.event', 'sentry.transaction'].includes(newBreadcrumb.category) ||\n    newBreadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (newBreadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(newBreadcrumb);\n  }\n\n  return createBreadcrumb(newBreadcrumb);\n}\n\n/** exported for tests only */\nfunction normalizeConsoleBreadcrumb(\n  breadcrumb,\n) {\n  const args = breadcrumb.data && breadcrumb.data.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = normalize(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          isTruncated = true;\n          // We use the pretty printed JSON string here as a base\n          return `${JSON.stringify(normalizedArg, null, 2).slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n        }\n        return normalizedArg;\n      } catch (e) {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n\n/**\n * Add global listeners that cannot be removed.\n */\nfunction addGlobalListeners(replay) {\n  // Listeners from core SDK //\n  const scope = getCurrentScope();\n  const client = getClient();\n\n  scope.addScopeListener(handleScopeListener(replay));\n  addClickKeypressInstrumentationHandler(handleDomListener(replay));\n  addHistoryInstrumentationHandler(handleHistorySpanListener(replay));\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  const eventProcessor = handleGlobalEventListener(replay, !hasHooks(client));\n  if (client && client.addEventProcessor) {\n    client.addEventProcessor(eventProcessor);\n  } else {\n    addEventProcessor(eventProcessor);\n  }\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (hasHooks(client)) {\n    client.on('beforeSendEvent', handleBeforeSendEvent(replay));\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        // Ensure to check that the session is still active - it could have expired in the meanwhile\n        const isSessionActive = replay.checkAndHandleExpiredSession();\n        if (isSessionActive) {\n          dsc.replay_id = replayId;\n        }\n      }\n    });\n\n    client.on('startTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We may be missing the initial startTransaction due to timing issues,\n    // so we capture it on finish again.\n    client.on('finishTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We want to flush replay\n    client.on('beforeSendFeedback', (feedbackEvent, options) => {\n      const replayId = replay.getSessionId();\n      if (options && options.includeReplay && replay.isEnabled() && replayId) {\n        // This should never reject\n        if (feedbackEvent.contexts && feedbackEvent.contexts.feedback) {\n          feedbackEvent.contexts.feedback.replay_id = replayId;\n        }\n      }\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction hasHooks(client) {\n  return !!(client && client.on);\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nasync function addMemoryEntry(replay) {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-expect-error memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry) {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nfunction debounce(func, wait, options) {\n  let callbackReturnValue;\n\n  let timerId;\n  let maxTimerId;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc() {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers() {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush() {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced() {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = setTimeout(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nfunction getHandleRecordingEmit(replay) {\n  let hadFirstEvent = false;\n\n  return (event, _isCheckout) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.warn('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    if (replay.clickDetector) {\n      updateClickDetectorForRecordingEvent(replay.clickDetector, event);\n    }\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // If the event is not added (e.g. due to being paused, disabled, or out of the max replay duration),\n      // Skip all further steps\n      if (!addEventSync(replay, event, isCheckout)) {\n        // Return true to skip scheduling a debounced flush\n        return true;\n      }\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time.\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      addSettingsEvent(replay, isCheckout);\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (replay.session && replay.session.previousSessionId) {\n        return true;\n      }\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && replay.session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          logInfo(\n            `[Replay] Updating session start time to earliest event in buffer to ${new Date(earliestEvent)}`,\n            replay.getOptions()._experiments.traceInternals,\n          );\n\n          replay.session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(replay.session);\n          }\n        }\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nfunction createOptionsEvent(replay) {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        shouldRecordCanvas: replay.isRecordingCanvas(),\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay, isCheckout) {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return;\n  }\n\n  addEventSync(replay, createOptionsEvent(replay), false);\n}\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nfunction createReplayEnvelope(\n  replayEvent,\n  recordingData,\n  dsn,\n  tunnel,\n) {\n  return createEnvelope(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n\n/**\n * Prepare the recording data ready to be sent.\n */\nfunction prepareRecordingData({\n  recordingData,\n  headers,\n}\n\n) {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nasync function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}\n\n) {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n\n  const eventHint = { event_id, integrations };\n\n  if (client.emit) {\n    client.emit('preprocessEvent', event, eventHint);\n  }\n\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    getIsolationScope(),\n  )) ;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata && client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n\n/**\n * Send replay attachment using `fetch()`\n */\nasync function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}) {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const client = getClient();\n  const scope = getCurrentScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return;\n  }\n\n  const baseEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    logInfo('An event processor returned `null`, will not send event.');\n    return;\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-expect-error This needs lib es2022 and newer\n      error.cause = err;\n    } catch (e) {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // TODO (v8): we can remove this guard once transport.send's type signature doesn't include void anymore\n  if (!response) {\n    return response;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  const rateLimits = updateRateLimits({}, response);\n  if (isRateLimited(rateLimits, 'replay')) {\n    throw new RateLimitError(rateLimits);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nclass TransportStatusCodeError extends Error {\n   constructor(statusCode) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * This error indicates that we hit a rate limit API error.\n */\nclass RateLimitError extends Error {\n\n   constructor(rateLimits) {\n    super('Rate limit hit');\n    this.rateLimits = rateLimits;\n  }\n}\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nasync function sendReplay(\n  replayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n) {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError || err instanceof RateLimitError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if (DEBUG_BUILD && options._experiments && options._experiments.captureExceptions) {\n      captureException(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch (e) {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n\nconst THROTTLED = '__THROTTLED';\nconst SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction throttle(\n  fn,\n  maxCount,\n  durationSeconds,\n) {\n  const counter = new Map();\n\n  const _cleanup = (now) => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = () => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest) => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n\n/* eslint-disable max-lines */ // TODO: We might want to split this file up\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nclass ReplayContainer  {\n\n  /**\n   * Recording can happen in one of three modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n\n  /**\n   * The current or last active transcation.\n   * This is only available when performance is enabled.\n   */\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n\n  /**\n   * Is the integration currently active?\n   */\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n\n  /**\n   * Function to stop recording\n   */\n\n  /**\n   * Internal use for canvas recording options\n   */\n\n   constructor({\n    options,\n    recordingOptions,\n  }\n\n) {ReplayContainer.prototype.__init.call(this);ReplayContainer.prototype.__init2.call(this);ReplayContainer.prototype.__init3.call(this);ReplayContainer.prototype.__init4.call(this);ReplayContainer.prototype.__init5.call(this);ReplayContainer.prototype.__init6.call(this);\n    this.eventBuffer = null;\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n    this.recordingMode = 'session';\n    this.timeouts = {\n      sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n      sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    } ;\n    this._lastActivity = Date.now();\n    this._isEnabled = false;\n    this._isPaused = false;\n    this._hasInitializedCoreListeners = false;\n    this._context = {\n      errorIds: new Set(),\n      traceIds: new Set(),\n      urls: [],\n      initialTimestamp: Date.now(),\n      initialUrl: '',\n    };\n\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event, isCheckout) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n  }\n\n  /** Get the event context. */\n   getContext() {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n   isEnabled() {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n   isPaused() {\n    return this._isPaused;\n  }\n\n  /**\n   * Determine if canvas recording is enabled\n   */\n   isRecordingCanvas() {\n    return Boolean(this._canvas);\n  }\n\n  /** Get the replay integration options. */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n   initializeSampling(previousSessionId) {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    if (errorSampleRate <= 0 && sessionSampleRate <= 0) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    this._initializeSessionForSampling(previousSessionId);\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      this._handleException(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled === false) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    // If segmentId > 0, it means we've previously already captured this session\n    // In this case, we still want to continue in `session` recording mode\n    this.recordingMode = this.session.sampled === 'buffer' && this.session.segmentId === 0 ? 'buffer' : 'session';\n\n    logInfoNextTick(\n      `[Replay] Starting replay in ${this.recordingMode} mode`,\n      this._options._experiments.traceInternals,\n    );\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n   start() {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      throw new Error('Replay buffering is in progress, call `flush()` to save the replay');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in session mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        maxReplayDuration: this._options.maxReplayDuration,\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        // This is intentional: create a new session-based replay when calling `start()`\n        sessionSampleRate: 1,\n        allowBuffering: false,\n      },\n    );\n\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n   startBuffering() {\n    if (this._isEnabled) {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in buffer mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: 0,\n        allowBuffering: true,\n      },\n    );\n\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n   startRecording() {\n    try {\n      const canvasOptions = this._canvas;\n\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer' && { checkoutEveryNms: BUFFER_CHECKOUT_TIME }),\n        emit: getHandleRecordingEmit(this),\n        onMutation: this._onMutationHandler,\n        ...(canvasOptions\n          ? {\n              recordCanvas: canvasOptions.recordCanvas,\n              getCanvasManager: canvasOptions.getCanvasManager,\n              sampling: canvasOptions.sampling,\n              dataURLOptions: canvasOptions.dataURLOptions,\n            }\n          : {}),\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n   stopRecording() {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n   async stop({ forceFlush = false, reason } = {}) {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n    // enter into an infinite loop when `stop()` is called while flushing.\n    this._isEnabled = false;\n\n    try {\n      logInfo(\n        `[Replay] Stopping Replay${reason ? ` triggered by ${reason}` : ''}`,\n        this._options._experiments.traceInternals,\n      );\n\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (forceFlush) {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n   pause() {\n    if (this._isPaused) {\n      return;\n    }\n\n    this._isPaused = true;\n    this.stopRecording();\n\n    logInfo('[Replay] Pausing replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n   resume() {\n    if (!this._isPaused || !this._checkSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n\n    logInfo('[Replay] Resuming replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n   async sendBufferedReplayOrFlush({ continueRecording = true } = {}) {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    logInfo('[Replay] Converting buffer to session', this._options._experiments.traceInternals);\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // To avoid race conditions where this is called multiple times, we check here again that we are still buffering\n    if ((this.recordingMode ) === 'session') {\n      return;\n    }\n\n    // Re-start recording in session-mode\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n   addUpdate(cb) {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n   triggerUserActivity() {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._checkSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n   updateUserActivity() {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n   conditionalFlush() {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n   flush() {\n    return this._debouncedFlush() ;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n   flushImmediate() {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() ;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n   cancelFlush() {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current sesion (=replay) ID */\n   getSessionId() {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n   checkAndHandleExpiredSession() {\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._checkSession()) {\n      // Check session handles the refreshing itself\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n   setInitialState() {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n   throttledAddEvent(\n    event,\n    isCheckout,\n  ) {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        // Return `false` if the event _was_ added, as that means we schedule a flush\n        return !addEventSync(this, {\n          type: ReplayEventTypeCustom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n   getCurrentRoute() {\n    // eslint-disable-next-line deprecation/deprecation\n    const lastTransaction = this.lastTransaction || getCurrentScope().getTransaction();\n\n    const attributes = (lastTransaction && spanToJSON(lastTransaction).data) || {};\n    const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n    if (!lastTransaction || !source || !['route', 'custom'].includes(source)) {\n      return undefined;\n    }\n\n    return spanToJSON(lastTransaction).description;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n   _initializeRecording() {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n      workerUrl: this._options.workerUrl,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n    this._isPaused = false;\n\n    this.startRecording();\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n   _handleException(error) {\n    DEBUG_BUILD && logger.error('[Replay]', error);\n\n    if (DEBUG_BUILD && this._options._experiments && this._options._experiments.captureExceptions) {\n      captureException(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   */\n   _initializeSessionForSampling(previousSessionId) {\n    // Whenever there is _any_ error sample rate, we always allow buffering\n    // Because we decide on sampling when an error occurs, we need to buffer at all times if sampling for errors\n    const allowBuffering = this._options.errorSampleRate > 0;\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n        previousSessionId,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: this._options.sessionSampleRate,\n        allowBuffering,\n      },\n    );\n\n    this.session = session;\n  }\n\n  /**\n   * Checks and potentially refreshes the current session.\n   * Returns false if session is not recorded.\n   */\n   _checkSession() {\n    // If there is no session yet, we do not want to refresh anything\n    // This should generally not happen, but to be safe....\n    if (!this.session) {\n      return false;\n    }\n\n    const currentSession = this.session;\n\n    if (\n      shouldRefreshSession(currentSession, {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      })\n    ) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._refreshSession(currentSession);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh a session with a new one.\n   * This stops the current session (without forcing a flush, as that would never work since we are expired),\n   * and then does a new sampling based on the refreshed session.\n   */\n   async _refreshSession(session) {\n    if (!this._isEnabled) {\n      return;\n    }\n    await this.stop({ reason: 'refresh session' });\n    this.initializeSampling(session.id);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n   _addListeners() {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    this._performanceCleanupCallback = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n   _removeListeners() {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceCleanupCallback) {\n        this._performanceCleanupCallback();\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n   __init() {this._handleVisibilityChange = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };}\n\n  /**\n   * Handle when page is blurred\n   */\n   __init2() {this._handleWindowBlur = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };}\n\n  /**\n   * Handle when page is focused\n   */\n   __init3() {this._handleWindowFocus = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };}\n\n  /** Ensure page remains active when a key is pressed. */\n   __init4() {this._handleKeyboardEvent = (event) => {\n    handleKeyboardEvent(this, event);\n  };}\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n   _doChangeToBackgroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, {\n      maxReplayDuration: this._options.maxReplayDuration,\n      sessionIdleExpire: this.timeouts.sessionIdleExpire,\n    });\n\n    if (expired) {\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n   _doChangeToForegroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      logInfo('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n   _updateUserActivity(_lastActivity = Date.now()) {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n   _updateSessionActivity(_lastActivity = Date.now()) {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n   _createCustomBreadcrumb(breadcrumb) {\n    this.addUpdate(() => {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEntries`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n   _addPerformanceEntries() {\n    const performanceEntries = createPerformanceEntries(this.performanceEntries).concat(this.replayPerformanceEntries);\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    return Promise.all(createPerformanceSpans(this, performanceEntries));\n  }\n\n  /**\n   * Clear _context\n   */\n   _clearContext() {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n   _updateInitialTimestampFromEventBuffer() {\n    const { session, eventBuffer } = this;\n    if (!session || !eventBuffer) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n   _popEventContext() {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n   async _runFlush() {\n    const replayId = this.getSessionId();\n\n    if (!this.session || !this.eventBuffer || !replayId) {\n      DEBUG_BUILD && logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    // if this changed in the meanwhile, e.g. because the session was refreshed or similar, we abort here\n    if (replayId !== this.getSessionId()) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      const timestamp = Date.now();\n\n      // Check total duration again, to avoid sending outdated stuff\n      // We leave 30s wiggle room to accomodate late flushing etc.\n      // This _could_ happen when the browser is suspended during flushing, in which case we just want to stop\n      if (timestamp - this._context.initialTimestamp > this._options.maxReplayDuration + 30000) {\n        throw new Error('Session is too long, not sending replay');\n      }\n\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp,\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'sendReplay' });\n\n      const client = getClient();\n\n      if (client) {\n        client.recordDroppedEvent('send_error', 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n   __init5() {this._flush = async ({\n    force = false,\n  }\n\n = {}) => {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      // should never happen, as we would have bailed out before\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // If session is too short, or too long (allow some wiggle room over maxReplayDuration), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    const tooShort = duration < this._options.minReplayDuration;\n    const tooLong = duration > this._options.maxReplayDuration + 5000;\n    if (tooShort || tooLong) {\n      logInfo(\n        `[Replay] Session duration (${Math.floor(duration / 1000)}s) is too ${\n          tooShort ? 'short' : 'long'\n        }, not sending replay.`,\n        this._options._experiments.traceInternals,\n      );\n\n      if (tooShort) {\n        this._debouncedFlush();\n      }\n      return;\n    }\n\n    const eventBuffer = this.eventBuffer;\n    if (eventBuffer && this.session.segmentId === 0 && !eventBuffer.hasCheckout) {\n      logInfo('[Replay] Flushing initial segment without checkout.', this._options._experiments.traceInternals);\n      // TODO FN: Evaluate if we want to stop here, or remove this again?\n    }\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = undefined;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      DEBUG_BUILD && logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };}\n\n  /** Save the session, if it is sticky */\n   _maybeSaveSession() {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n   __init6() {this._onMutationHandler = (mutations) => {\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'mutationLimit', forceFlush: this.recordingMode === 'session' });\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  };}\n}\n\nfunction getOption(\n  selectors,\n  defaultSelectors,\n  deprecatedClassOption,\n  deprecatedSelectorOption,\n) {\n  const deprecatedSelectors = typeof deprecatedSelectorOption === 'string' ? deprecatedSelectorOption.split(',') : [];\n\n  const allSelectors = [\n    ...selectors,\n    // @deprecated\n    ...deprecatedSelectors,\n\n    // sentry defaults\n    ...defaultSelectors,\n  ];\n\n  // @deprecated\n  if (typeof deprecatedClassOption !== 'undefined') {\n    // NOTE: No support for RegExp\n    if (typeof deprecatedClassOption === 'string') {\n      allSelectors.push(`.${deprecatedClassOption}`);\n    }\n\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration.',\n      );\n    });\n  }\n\n  return allSelectors.join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nfunction getPrivacyOptions({\n  mask,\n  unmask,\n  block,\n  unblock,\n  ignore,\n\n  // eslint-disable-next-line deprecation/deprecation\n  blockClass,\n  // eslint-disable-next-line deprecation/deprecation\n  blockSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextClass,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  ignoreClass,\n}) {\n  const defaultBlockedElements = ['base[href=\"/\"]'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]'], maskTextClass, maskTextSelector);\n  const unmaskSelector = getOption(unmask, ['.sentry-unmask', '[data-sentry-unmask]']);\n\n  const options = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n\n    blockSelector: getOption(\n      block,\n      ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements],\n      blockClass,\n      blockSelector,\n    ),\n    unblockSelector: getOption(unblock, ['.sentry-unblock', '[data-sentry-unblock]']),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]'], ignoreClass),\n  };\n\n  if (blockClass instanceof RegExp) {\n    options.blockClass = blockClass;\n  }\n\n  if (maskTextClass instanceof RegExp) {\n    options.maskTextClass = maskTextClass;\n  }\n\n  return options;\n}\n\n/**\n * Masks an attribute if necessary, otherwise return attribute value as-is.\n */\nfunction maskAttribute({\n  el,\n  key,\n  maskAttributes,\n  maskAllText,\n  privacyOptions,\n  value,\n}) {\n  // We only mask attributes if `maskAllText` is true\n  if (!maskAllText) {\n    return value;\n  }\n\n  // unmaskTextSelector takes precendence\n  if (privacyOptions.unmaskTextSelector && el.matches(privacyOptions.unmaskTextSelector)) {\n    return value;\n  }\n\n  if (\n    maskAttributes.includes(key) ||\n    // Need to mask `value` attribute for `<input>` if it's a button-like\n    // type\n    (key === 'value' && el.tagName === 'INPUT' && ['submit', 'button'].includes(el.getAttribute('type') || ''))\n  ) {\n    return value.replace(/[\\S]/g, '*');\n  }\n\n  return value;\n}\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\nconst replayIntegration = ((options) => {\n  // eslint-disable-next-line deprecation/deprecation\n  return new Replay(options);\n}) ;\n\n/**\n * The main replay integration class, to be passed to `init({  integrations: [] })`.\n * @deprecated Use `replayIntegration()` instead.\n */\nclass Replay  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Replay';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n\n   constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    maxReplayDuration = MAX_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    workerUrl,\n    _experiments = {},\n    sessionSampleRate,\n    errorSampleRate,\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10000,\n\n    slowClickTimeout = 7000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    maskAttributes = ['title', 'placeholder'],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n    beforeErrorSampling,\n\n    // eslint-disable-next-line deprecation/deprecation\n    blockClass,\n    // eslint-disable-next-line deprecation/deprecation\n    blockSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    maskInputOptions,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextClass,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    ignoreClass,\n  } = {}) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.name = Replay.id;\n\n    const privacyOptions = getPrivacyOptions({\n      mask,\n      unmask,\n      block,\n      unblock,\n      ignore,\n      blockClass,\n      blockSelector,\n      maskTextClass,\n      maskTextSelector,\n      ignoreClass,\n    });\n\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { ...(maskInputOptions || {}), password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n      maskAttributeFn: (key, value, el) =>\n        maskAttribute({\n          maskAttributes,\n          maskAllText,\n          privacyOptions,\n          key,\n          value,\n          el,\n        }),\n\n      ...privacyOptions,\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n      errorHandler: (err) => {\n        try {\n          err.__rrweb__ = true;\n        } catch (error) {\n          // ignore errors here\n          // this can happen if the error is frozen or does not allow mutation for other reasons\n        }\n      },\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      maxReplayDuration: Math.min(maxReplayDuration, MAX_REPLAY_DURATION),\n      stickySession,\n      sessionSampleRate,\n      errorSampleRate,\n      useCompression,\n      workerUrl,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n      beforeErrorSampling,\n\n      _experiments,\n    };\n\n    if (typeof sessionSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`sessionSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysSessionSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysSessionSampleRate: ${sessionSampleRate} })`,\n      );\n\n      this._initialOptions.sessionSampleRate = sessionSampleRate;\n    }\n\n    if (typeof errorSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`errorSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysOnErrorSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysOnErrorSampleRate: ${errorSampleRate} })`,\n      );\n\n      this._initialOptions.errorSampleRate = errorSampleRate;\n    }\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n   get _isInitialized() {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n   set _isInitialized(value) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n   setupOnce() {\n    if (!isBrowser()) {\n      return;\n    }\n\n    this._setup();\n\n    // Once upon a time, we tried to create a transaction in `setupOnce` and it would\n    // potentially create a transaction before some native SDK integrations have run\n    // and applied their own global event processor. An example is:\n    // https://github.com/getsentry/sentry-javascript/blob/b47ceafbdac7f8b99093ce6023726ad4687edc48/packages/browser/src/integrations/useragent.ts\n    //\n    // So we call `this._initialize()` in next event loop as a workaround to wait for other\n    // global event processors to finish. This is no longer needed, but keeping it\n    // here to avoid any future issues.\n    setTimeout(() => this._initialize());\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n   start() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n   startBuffering() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n   stop() {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop({ forceFlush: this._replay.recordingMode === 'session' });\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n   flush(options) {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n   getReplayId() {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n\n  /**\n   * Initializes replay.\n   */\n   _initialize() {\n    if (!this._replay) {\n      return;\n    }\n\n    // We have to run this in _initialize, because this runs in setTimeout\n    // So when this runs all integrations have been added\n    // Before this, we cannot access integrations on the client,\n    // so we need to mutate the options here\n    this._maybeLoadFromReplayCanvasIntegration();\n\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n   _setup() {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n\n  /** Get canvas options from ReplayCanvas integration, if it is also added. */\n   _maybeLoadFromReplayCanvasIntegration() {\n    // To save bundle size, we skip checking for stuff here\n    // and instead just try-catch everything - as generally this should all be defined\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    try {\n      const client = getClient();\n      const canvasIntegration = client.getIntegrationByName('ReplayCanvas')\n\n;\n      if (!canvasIntegration) {\n        return;\n      }\n\n      this._replay['_canvas'] = canvasIntegration.getOptions();\n    } catch (e) {\n      // ignore errors here\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n}Replay.__initStatic();\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions) {\n  const client = getClient();\n  const opt = client && (client.getOptions() );\n\n  const finalOptions = { sessionSampleRate: 0, errorSampleRate: 0, ...dropUndefinedKeys(initialOptions) };\n\n  if (!opt) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn('SDK client is not available.');\n    });\n    return finalOptions;\n  }\n\n  if (\n    initialOptions.sessionSampleRate == null && // TODO remove once deprecated rates are removed\n    initialOptions.errorSampleRate == null && // TODO remove once deprecated rates are removed\n    opt.replaysSessionSampleRate == null &&\n    opt.replaysOnErrorSampleRate == null\n  ) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n      );\n    });\n  }\n\n  if (typeof opt.replaysSessionSampleRate === 'number') {\n    finalOptions.sessionSampleRate = opt.replaysSessionSampleRate;\n  }\n\n  if (typeof opt.replaysOnErrorSampleRate === 'number') {\n    finalOptions.errorSampleRate = opt.replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers) {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n\n/**\n * This is a small utility to get a type-safe instance of the Replay integration.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction getReplay() {\n  const client = getClient();\n  return (\n    client && client.getIntegrationByName && client.getIntegrationByName('Replay')\n  );\n}\n\nexport { Replay, getReplay, replayIntegration };\n//# sourceMappingURL=index.js.map\n"],"names":["WINDOW","GLOBAL_OBJ","REPLAY_SESSION_KEY","UNABLE_TO_SEND_REPLAY","NETWORK_BODY_MAX_SIZE","CONSOLE_ARG_MAX_SIZE","REPLAY_MAX_EVENT_BUFFER_SIZE","MAX_REPLAY_DURATION","_optionalChain$5","ops","lastAccessLHS","value","i","length","op","fn","args","call","undefined","NodeType$1","isShadowRoot","n","host","_","Boolean","_2","shadowRoot","isNativeShadowDom","Object","prototype","toString","stringifyStylesheet","s","rules","cssRules","cssText","Array","from","stringifyRule","join","includes","replace","error","rule","importStringified","isCSSImportRule","styleSheet","split","statement","JSON","stringify","href","layerName","push","supportsText","media","mediaText","escapeImportStatement","isCSSStyleRule","selectorText","cssStringified","regex","fixSafariColons","NodeType","Mirror","getId","id","this","_3","getMeta","_4","_5","rhsFn","lhs","getNode","idNodeMap","get","getIds","keys","nodeMetaMap","removeNodeFromMap","delete","childNodes","forEach","childNode","has","hasNode","node","add","meta","set","oldNode","reset","Map","WeakMap","constructor","shouldMaskInput","maskInputOptions","tagName","type","toLowerCase","maskInputValue","isMasked","element","maskInputFn","text","repeat","str","toUpperCase","ORIGINAL_ATTRIBUTE_NAME","getInputType","hasAttribute","getInputValue","el","getAttribute","_id","tagNameRegex","RegExp","genId","canvasService","canvasCtx","URL_IN_CSS_REF","URL_PROTOCOL_MATCH","URL_WWW_MATCH","DATA_URI","absoluteToStylesheet","origin","quote1","path1","quote2","path2","path3","filePath","maybeQuote","test","extractOrigin","url","indexOf","slice","stack","parts","pop","part","SRCSET_NOT_SPACES","SRCSET_COMMAS_OR_SPACES","absoluteToDoc","doc","attributeValue","trim","a","createElement","isSVGElement","ownerSVGElement","getHref","document","transformAttribute","name","maskAttributeFn","pos","collectCharacters","regEx","chars","match","exec","substring","output","descriptorsStr","inParens","c","charAt","getAbsoluteSrcsetString","ignoreAttribute","_value","distanceToMatch","matchPredicate","limit","Infinity","distance","nodeType","ELEMENT_NODE","parentNode","createMatchPredicate","className","selector","matches","eIndex","classList","elementClassMatchesRegex","e2","needMaskingText","maskTextClass","maskTextSelector","unmaskTextClass","unmaskTextSelector","maskAllText","parentElement","autocomplete","maskDistance","unmaskDistance","e","serializeNode","options","mirror","blockClass","blockSelector","unblockSelector","inlineStylesheet","maskTextFn","dataURLOptions","inlineImages","recordCanvas","keepIframeSrcFn","newlyAddedElement","rootId","docId","getRootId","DOCUMENT_NODE","compatMode","Document","DOCUMENT_TYPE_NODE","DocumentType","publicId","systemId","needBlock","contains","_isBlockedElement","HTMLFormElement","processedTagName","getValidTagName","attributes","len","attr","stylesheet","styleSheets","find","rel","_cssText","sheet","innerText","textContent","checked","forceMask","selected","__context","canvas","ctx","getContext","x","width","y","height","getImageData","originalGetImageData","Uint32Array","Math","min","data","buffer","some","pixel","is2DCanvasBlank","rr_dataURL","toDataURL","quality","canvasDataURL","blankCanvas","image","oldValue","crossOrigin","recordInlineImage","removeEventListener","naturalWidth","naturalHeight","drawImage","err","console","warn","currentSrc","removeAttribute","complete","addEventListener","rr_mediaState","paused","rr_mediaCurrentTime","currentTime","scrollLeft","rr_scrollLeft","scrollTop","rr_scrollTop","getBoundingClientRect","class","rr_width","rr_height","src","contentDocument","rr_src","isCustomElement","customElements","Element","isSVG","isCustom","serializeElementNode","TEXT_NODE","parentTagName","isStyle","isScript","isTextarea","nextSibling","previousSibling","_6","_7","_8","textarea","Text","serializeTextNode","CDATA_SECTION_NODE","CDATA","COMMENT_NODE","Comment","lowerIfExists","maybeAttr","serializeNodeWithId","skipChild","slimDOMOptions","onSerialize","onIframeLoad","iframeLoadTimeout","onStylesheetLoad","stylesheetLoadTimeout","preserveWhiteSpace","_serializedNode","sn","comment","script","as","endsWith","headFavicon","headMetaDescKeywords","headMetaSocial","property","headMetaRobots","headMetaHttpEquiv","headMetaAuthorship","headMetaVerification","slimDOMExcluded","serializedNode","assign","recordChild","isShadowHost","headWhitespace","bypassOptions","childN","serializedChildNode","isElement$1","isShadow","iframeEl","listener","win","contentWindow","readyState","fired","timer","setTimeout","clearTimeout","blankUrl","location","onceIframeLoaded","iframeDoc","serializedIframeNode","link","styleSheetLoadTimeout","styleSheetLoaded","onceStylesheetLoaded","serializedLinkNode","snapshot","maskAllInputs","slimDOM","color","date","email","month","number","range","search","tel","time","week","select","_optionalChain$4","on","target","capture","passive","DEPARTED_MIRROR_ACCESS_WARNING","_mirror","map","throttle$1","func","wait","timeout","previous","now","Date","leading","remaining","context","apply","trailing","hookSetter","key","d","isRevoked","window","original","getOwnPropertyDescriptor","defineProperty","patch","source","replacement","wrapped","defineProperties","__rrweb_original__","enumerable","Proxy","Reflect","prop","receiver","cachedRequestAnimationFrameImplementation","nowTimestamp","getWindowScroll","left","scrollingElement","pageXOffset","documentElement","body","top","pageYOffset","_9","_10","_11","_12","_13","_14","getWindowHeight","innerHeight","clientHeight","getWindowWidth","innerWidth","clientWidth","isBlocked","checkAncestors","blockedPredicate","isUnblocked","blockDistance","unblockDistance","isIgnored","isAncestorRemoved","legacy_isTouchEvent","event","changedTouches","polyfill","NodeList","DOMTokenList","Node","TypeError","isSerializedIframe","nodeName","isSerializedStylesheet","hasShadowRoot","_18","getTime","StyleSheetMirror","_nullishCoalesce","styleIDMap","newId","idStyleMap","getStyle","generateId","getShadowHost","shadowHost","_19","getRootNode","_20","_21","DOCUMENT_FRAGMENT_NODE","shadowHostInDom","ownerDocument","rootShadowHost","getRootShadowHost","inDom","getRequestAnimationFrameImplementation","requestAnimationFrameImplementation","requestAnimationFrame","sandbox","hidden","head","appendChild","removeChild","bind","EventType","EventType2","IncrementalSource","IncrementalSource2","MouseInteractions","MouseInteractions2","PointerTypes","PointerTypes2","_optionalChain$3","isNodeInLinkedList","DoubleLinkedList","position","Error","current","index","next","addNode","__ln","tail","removeNode","moveKey","parentId","MutationBuffer","init","freeze","frozen","canvasManager","unfreeze","emit","isFrozen","lock","locked","unlock","shadowDomManager","texts","removes","mapRemoves","movedMap","addedSet","Set","movedSet","droppedSet","processMutations","mutations","processMutation","adds","addedIds","addList","getNextId","ns","nextId","pushAdd","currentN","iframeManager","addIframe","stylesheetManager","trackLinkElement","addShadowRoot","iframe","childSn","attachIframe","observeAttachShadow","attachLinkElement","shift","isParentRemoved","isAncestorInSet","candidate","tailNode","_node","unhandledNode","payload","filter","attribute","style","diffAsStr","styleDiff","unchangedAsStr","_unchangedStyles","mutationCb","m","unattachedDoc","implementation","createHTMLDocument","attributeName","isInputMasked","item","setAttribute","old","pname","newValue","getPropertyValue","newPriority","getPropertyPriority","addedNodes","genAdds","removedNodes","nodeId","isSerialized","deepDelete","processedNodeManager","inOtherBuffer","targetId","addsSet","_isParentRemoved","r","size","_isAncestorInSet","errorHandler","registerErrorHandler","handler","unregisterErrorHandler","callbackWrapper","cb","rest","_optionalChain$2","mutationBuffers","getEventTarget","path","composedPath","initMutationObserver","rootEl","mutationBuffer","mutationObserverCtor","MutationObserver","__rrMutationObserver","angularZoneSymbol","Zone","__symbol__","observer","onMutation","observe","attributeOldValue","characterData","characterDataOldValue","childList","subtree","initMoveObserver","mousemoveCb","sampling","mousemove","threshold","callbackThreshold","mousemoveCallback","timeBaseline","positions","wrappedCb","totalOffset","p","timeOffset","updatePosition","evt","clientX","clientY","DragEvent","Drag","MouseEvent","MouseMove","TouchMove","handlers","h","initMouseInteractionObserver","mouseInteractionCb","mouseInteraction","disableMap","currentPointerType","Number","isNaN","eventKey","eventName","pointerType","thisEventKey","Mouse","Touch","Pen","MouseDown","MouseUp","startsWith","Click","getHandler","PointerEvent","TouchStart","TouchEnd","initScrollObserver","scrollCb","defaultView","scrollLeftTop","scroll","initViewportResizeObserver","viewportResizeCb","lastH","lastW","INPUT_TAGS","lastInputValueMap","initInputObserver","inputCb","ignoreClass","ignoreSelector","userTriggeredOnInput","eventHandler","userTriggered","isTrusted","isChecked","cbWithDedup","querySelectorAll","v","lastInputValue","input","currentWindow","propertyDescriptor","HTMLInputElement","hookProperties","HTMLSelectElement","HTMLTextAreaElement","HTMLOptionElement","getNestedCSSRulePositions","childRule","parentRule","CSSGroupingRule","hasNestedCSSRule","CSSMediaRule","CSSSupportsRule","CSSConditionRule","unshift","parentStyleSheet","recurse","getIdAndStyleId","styleMirror","styleId","ownerNode","initStyleSheetObserver","styleSheetRuleCb","CSSStyleSheet","insertRule","thisArg","argumentsList","deleteRule","replaceSync","supportedNestedCSSRuleTypes","canMonkeyPatchNestedCSSRule","unmodifiedFunctions","entries","typeKey","initAdoptedStyleSheetObserver","hostId","patchTarget","ShadowRoot","originalPropertyDescriptor","configurable","sheets","result","_15","_16","adoptStyleSheets","initStyleDeclarationObserver","styleDeclarationCb","ignoreCSSAttributes","setProperty","CSSStyleDeclaration","priority","_17","removeProperty","remove","initMediaInteractionObserver","mediaInteractionCb","volume","muted","playbackRate","initFontObserver","fontCb","fontMap","originalFontFace","FontFace","family","descriptors","fontFace","fontSource","Uint8Array","restoreHandler","fonts","initSelectionObserver","param","selectionCb","collapsed","updateSelection","selection","getSelection","isCollapsed","ranges","count","rangeCount","getRangeAt","startContainer","startOffset","endContainer","endOffset","start","end","initCustomElementObserver","customElementCb","define","initObservers","o","mutationObserver","mousemoveHandler","mouseInteractionHandler","scrollHandler","viewportResizeHandler","inputHandler","mediaInteractionHandler","styleSheetObserver","adoptedStyleSheetObserver","styleDeclarationObserver","fontObserver","collectFonts","selectionObserver","customElementObserver","pluginHandlers","plugin","plugins","callback","b","disconnect","CrossOriginIframeMirror","remoteId","idToRemoteMap","remoteToIdMap","idToRemoteIdMap","getIdToRemoteIdMap","remoteIdToIdMap","getRemoteIdToIdMap","generateIdFn","getRemoteId","getRemoteIds","ids","iframeIdToRemoteIdMap","iframeRemoteIdToIdMap","_optionalChain$1","IframeManagerNoop","addLoadListener","crossOriginIframeMirror","crossOriginIframeRootIdMap","IframeManager","iframes","crossOriginIframeMap","loadListener","isAttachIframe","adoptedStyleSheets","handleMessage","message","crossOriginMessageEvent","transformedEvent","transformCrossOriginEvent","wrappedEmit","isCheckout","FullSnapshot","crossOriginIframeStyleMirror","replaceIdOnNode","patchRootIdOnNode","timestamp","IncrementalSnapshot","Mutation","Meta","Load","DomContentLoaded","Plugin","Custom","replaceIds","ViewportResize","MediaInteraction","MouseInteraction","Scroll","CanvasMutation","Input","StyleSheetRule","StyleDeclaration","replaceStyleIds","Font","Selection","AdoptedStyleSheet","styles","iframeMirror","obj","isArray","child","recordCrossOriginIframes","ShadowDomManagerNoop","ShadowDomManager","patchAttachShadow","shadowDoms","restoreHandlers","iframeElement","manager","option","WeakSet","CanvasManagerNoop","StylesheetManager","linkEl","trackedLinkElements","trackStylesheetInLinkElement","adoptedStyleSheetData","styleIds","CSSRule","adoptedStyleSheetCb","ProcessedNodeManager","periodicallyClear","onRequestAnimationFrame","clear","loop","thisBuffer","buffers","nodeMap","destroy","wrapEvent","eWithTime","_takeFullSnapshot","record","checkoutEveryNms","checkoutEveryNth","_maskInputOptions","_slimDOMOptions","packFn","mousemoveWait","recordAfter","getCanvasManager","inEmittingFrame","parent","passEmitsToParent","radio","checkbox","lastFullSnapshotEvent","incrementalSnapshotCount","eventProcessor","_optionalChain","buf","postMessage","exceedCount","exceedTime","takeFullSnapshot","wrappedMutationEmit","wrappedScrollEmit","wrappedCanvasMutationEmit","wrappedAdoptedStyleSheetEmit","__RRWEB_EXCLUDE_IFRAME__","getMirror","nodeMirror","_getCanvasManager","__RRWEB_EXCLUDE_SHADOW_DOM__","initialOffset","canvasMutationCb","CustomElement","getCanvasManagerFn","timestampToMs","timestampToS","addBreadcrumbEvent","replay","breadcrumb","category","triggerUserActivity","checkAndHandleExpiredSession","addUpdate","throttledAddEvent","tag","normalize","getClosestInteractive","closest","getClickTargetNode","getTargetNode","isEventWithTarget","onWindowOpen","fill","originalWindowOpen","splice","ClickDetector","addListeners","cleanupWindowOpen","_lastMutation","nowInSeconds","_teardown","_clicks","_lastScroll","removeListeners","_checkClickTimeout","handleClick","SLOW_CLICK_TAGS","ignoreElement","_ignoreSelector","isClickBreadcrumb","newClick","clickBreadcrumb","clickCount","click","abs","_scheduleCheckClicks","registerMutation","registerScroll","registerClick","_handleMultiClick","_getClicks","_checkClicks","timedOutClicks","mutationAfter","scrollAfter","_timeout","_generateBreadcrumbs","_replay","hadScroll","_scollTimeout","hadMutation","_threshold","isSlowClick","timeAfterClickMs","endReason","route","getCurrentRoute","_addBreadcrumbEvent","metric","slowClickConfig","scrollTimeout","updateClickDetectorForRecordingEvent","clickDetector","isIncrementalEvent","isIncrementalMouseInteraction","HTMLElement","createBreadcrumb","ATTRIBUTES_TO_RECORD","getAttributesToRecord","normalizedKey","handleDomListener","handlerData","isEnabled","isClick","htmlTreeAsString","maxStringLength","getDomTarget","getBaseDomBreadcrumb","handleDom","altKey","metaKey","ctrlKey","shiftKey","isElement","handleKeyboardEvent","updateUserActivity","isContentEditable","isInputElement","hasModifierKey","isCharacterKey","baseBreadcrumb","getKeyboardBreadcrumb","ENTRY_TYPES","resource","entry","entryType","initiatorType","responseEnd","startTime","decodedBodySize","encodedBodySize","responseStatus","transferSize","getAbsoluteTime","statusCode","paint","duration","navigation","domComplete","domContentLoadedEventStart","domContentLoadedEventEnd","domInteractive","loadEventStart","loadEventEnd","redirectCount","createPerformanceEntry","browserPerformanceTimeOrigin","performance","timeOrigin","setupPerformanceObserver","addPerformanceEntry","performanceEntries","onEntries","clearCallbacks","addPerformanceInstrumentationHandler","addLcpInstrumentationHandler","replayPerformanceEntries","lastEntry","getLargestContentfulPaint","clearCallback","DEBUG_BUILD","__SENTRY_DEBUG__","EventBufferSizeExceededError","super","EventBufferArray","hasEvents","events","async","eventSize","_totalSize","finish","Promise","resolve","eventsRet","hasCheckout","getEarliestTimestamp","sort","WorkerHandler","ensureReady","_ensureReadyPromise","reject","_worker","success","once","terminate","method","arg","_getAndIncrementId","response","worker","EventBufferCompressionWorker","_earliestTimestamp","addEvent","_sendEventToWorker","_finishRequest","then","EventBufferProxy","_used","_fallback","_compression","ensureWorkerIsLoaded","_ensureWorkerIsLoadedPromise","_switchToCompressionWorker","addEventPromises","all","_ensureWorkerIsLoaded","createEventBuffer","useCompression","workerUrl","customWorkerUrl","Worker","__SENTRY_EXCLUDE_REPLAY_WORKER__","Blob","URL","createObjectURL","_getWorkerUrl","_loadWorker","hasSessionStorage","sessionStorage","clearSession","removeItem","deleteSession","session","isSampled","sampleRate","random","makeSession","uuid4","started","lastActivity","segmentId","sampled","previousSessionId","saveSession","setItem","getSessionSampleType","sessionSampleRate","allowBuffering","createSession","stickySession","isExpired","initialTime","expiry","targetTime","isSessionExpired","maxReplayDuration","sessionIdleExpire","shouldRefreshSession","loadOrCreateSession","sessionOptions","traceInternals","existingSession","sessionStringFromStorage","getItem","parse","fetchSession","addEventSync","shouldAddEvent","_addEvent","eventBuffer","recordingMode","eventAfterPossibleCallback","isCustomEvent","maybeApplyCallback","getOptions","beforeAddRecordingEvent","reason","stop","client","getClient","recordDroppedEvent","isPaused","timestampInMs","timeouts","sessionIdlePause","initialTimestamp","_experiments","isErrorEvent","isTransactionEvent","isReplayEvent","isFeedbackEvent","handleAfterSendEvent","enforceStatusCode","transport","getTransport","send","__sentry__baseTransport__","isBaseTransportSend","sendResponse","replayContext","contexts","trace","trace_id","traceIds","handleTransactionEvent","event_id","errorIds","tags","replayId","beforeErrorSampling","sendBufferedReplayOrFlush","handleErrorEvent","handleBeforeSendEvent","exceptionValue","exception","values","handleHydrationError","isRrwebError","hint","originalException","__rrweb__","addFeedbackBreadcrumb","feedbackId","shouldSampleForBufferEvent","errorSampleRate","createPerformanceSpans","description","startTimestamp","endTimestamp","handleHistorySpanListener","to","handleHistory","urls","addNetworkBreadcrumb","isSentryRequestUrl","handleXhrSpanListener","xhr","sentryXhrData","SENTRY_XHR_DATA_KEY","status_code","handleXhr","getBodySize","textEncoder","encode","URLSearchParams","FormData","formDataStr","_serializeFormData","ArrayBuffer","byteLength","parseContentLengthHeader","header","parseInt","getBodyString","mergeWarning","info","warning","headers","_meta","warnings","newMeta","existingWarnings","makeNetworkReplayBreadcrumb","request","dropUndefinedKeys","buildSkippedNetworkRequestOrResponse","bodySize","buildNetworkRequestOrResponse","normalizedBody","exceedsSizeLimit","isProbablyJson","first","last","_strIsProbablyJson","truncatedBody","e3","normalizeNetworkBody","getAllowedHeaders","allowedHeaders","reduce","filteredHeaders","formData","urlMatches","fullUrl","baseURI","fixedUrl","getFullUrl","stringMatchesSomePattern","captureFetchBreadcrumbToReplay","request_body_size","requestBodySize","response_body_size","responseBodySize","captureDetails","networkDetailAllowUrls","networkDetailDenyUrls","networkCaptureBodies","networkRequestHeaders","fetchArgs","getHeadersFromOptions","getRequestHeaders","requestBody","_getFetchRequestArgBody","bodyStr","_getRequestInfo","networkResponseHeaders","getAllHeaders","bodyText","res","clone","_tryCloneResponse","_getResponseText","txt","finally","_tryGetResponseText","_parseFetchResponseBody","getResponseData","_getResponseInfo","_prepareFetchData","allHeaders","Headers","captureXhrBreadcrumbToReplay","xhrInfo","request_headers","getAllResponseHeaders","acc","line","getResponseHeaders","requestWarning","responseBody","responseWarning","errors","responseText","responseType","outerHTML","_parseXhrResponse","_getXhrResponseBody","_prepareXhrData","enrichXhrBreadcrumb","reqSize","resSize","getResponseHeader","_getBodySize","handleNetworkBreadcrumbs","TextEncoder","_isXhrBreadcrumb","_isXhrHint","_isFetchBreadcrumb","_isFetchHint","enrichFetchBreadcrumb","beforeAddNetworkBreadcrumb","addFetchInstrumentationHandler","fetchData","status","handleFetch","handleFetchSpanListener","addXhrInstrumentationHandler","_LAST_BREADCRUMB","handleScopeListener","scope","newBreadcrumb","getLastBreadcrumb","isBreadcrumbWithCategory","arguments","isTruncated","normalizedArgs","normalizedArg","normalizeConsoleBreadcrumb","handleScope","addGlobalListeners","getCurrentScope","addScopeListener","addClickKeypressInstrumentationHandler","addHistoryInstrumentationHandler","afterSendHandler","includeAfterSendEventHandling","breadcrumbs","flush","feedback","replay_id","getSessionId","captureExceptions","handleGlobalEventListener","hasHooks","addEventProcessor","dsc","transaction","lastTransaction","feedbackEvent","includeReplay","createMemoryEntry","memoryEntry","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","memory","getHandleRecordingEmit","hadFirstEvent","_isCheckout","setInitialState","shouldRecordCanvas","isRecordingCanvas","useCompressionOption","blockAllMedia","networkDetailHasUrls","networkRequestHasHeaders","networkResponseHasHeaders","createOptionsEvent","addSettingsEvent","earliestEvent","sendReplayRequest","recordingData","segment_id","eventContext","preparedRecordingData","payloadWithSequence","replayHeaders","sequence","prepareRecordingData","dsn","getDsn","baseEvent","replay_start_timestamp","error_ids","trace_ids","replay_type","replayEvent","eventHint","integrations","_integrations","preparedEvent","prepareEvent","getIsolationScope","platform","metadata","getSdkMetadata","version","sdk","prepareReplayEvent","sdkProcessingMetadata","envelope","tunnel","createEnvelope","createEventEnvelopeHeaders","getSdkMetadataForEnvelopeHeader","createReplayEnvelope","cause","TransportStatusCodeError","rateLimits","updateRateLimits","isRateLimited","RateLimitError","sendReplay","replayData","retryConfig","interval","setContext","_retryCount","THROTTLED","SKIPPED","ReplayContainer","_context","_isEnabled","_isPaused","_canvas","_options","initializeSampling","_initializeSessionForSampling","_initializeRecording","_handleException","startBuffering","startRecording","canvasOptions","_stopRecording","_recordingOptions","_onMutationHandler","stopRecording","forceFlush","_removeListeners","_debouncedFlush","cancel","_flush","force","pause","resume","_checkSession","continueRecording","flushImmediate","activityTime","hasStoppedRecording","_updateUserActivity","_updateSessionActivity","_maybeSaveSession","cbResult","conditionalFlush","cancelFlush","_lastActivity","urlPath","pathname","hash","_clearContext","initialUrl","_throttledAddEvent","getTransaction","spanToJSON","SEMANTIC_ATTRIBUTE_SENTRY_SOURCE","_addListeners","currentSession","_refreshSession","_handleVisibilityChange","_handleWindowBlur","_handleWindowFocus","_handleKeyboardEvent","_hasInitializedCoreListeners","_performanceCleanupCallback","__init","visibilityState","_doChangeToForegroundTasks","_doChangeToBackgroundTasks","__init2","__init3","__init4","_createCustomBreadcrumb","_addPerformanceEntries","concat","_updateInitialTimestampFromEventBuffer","_popEventContext","addMemoryEntry","__init5","tooShort","minReplayDuration","tooLong","floor","_flushLock","_runFlush","__init6","mutationLimit","overMutationLimit","mutationBreadcrumbLimit","recordingOptions","callbackReturnValue","timerId","maxTimerId","maxWait","max","invokeFunc","cancelTimers","debounced","debounce","flushMinDelay","flushMaxDelay","maxCount","durationSeconds","counter","_cleanup","_getTotalCount","isThrottled","wasThrottled","throttle","slowClickTimeout","slowClickIgnoreSelectors","getOption","selectors","defaultSelectors","deprecatedClassOption","deprecatedSelectorOption","allSelectors","consoleSandbox","MEDIA_SELECTORS","DEFAULT_NETWORK_HEADERS","_initialized","replayIntegration","Replay","static","_isInitialized","setupOnce","isBrowser","_setup","_initialize","getReplayId","_maybeLoadFromReplayCanvasIntegration","finalOptions","initialOptions","opt","replaysSessionSampleRate","replaysOnErrorSampleRate","loadReplayOptionsFromClient","_initialOptions","canvasIntegration","getIntegrationByName","mask","maskAttributes","unmask","block","unblock","ignore","maskFn","privacyOptions","getPrivacyOptions","password","maskAttribute","_getMergedNetworkHeaders","__initStatic"],"sourceRoot":""}